# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ydb/core/protos/feature_flags.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n#ydb/core/protos/feature_flags.proto\x12\rNKikimrConfig\x1a google/protobuf/descriptor.proto\"\xbf\x31\n\rTFeatureFlags\x12\x30\n\"EnableSeparateSolomonShardForPDisk\x18\x01 \x01(\x08:\x04true\x12\x32\n$UseForsetiSchedulerByDefaultForPDisk\x18\x02 \x01(\x08:\x04true\x12.\n EnableSeparateTrimThreadForPDisk\x18\x03 \x01(\x08:\x04true\x12\x30\n\"EnableSeparateSubmitThreadForPDisk\x18\x04 \x01(\x08:\x04true\x12/\n EnablePerOwnerChunkLimitForPDisk\x18\x05 \x01(\x08:\x05\x66\x61lse\x12(\n\x19TrimEntireDeviceOnStartup\x18\x06 \x01(\x08:\x05\x66\x61lse\x12&\n\x18\x45nableChunkGraceForPDisk\x18\x07 \x01(\x08:\x04true\x12\x35\n\'AllowConsistentOperationsForSchemeShard\x18\x08 \x01(\x08:\x04true\x12\x1f\n\x11\x45nableSchemeBoard\x18\t \x01(\x08:\x04true\x12\x33\n\x1f\x41llowYdbRequestsWithoutDatabase\x18\n \x01(\x08:\x04trueB\x04\xc8\xd6\x1b\x01\x12&\n\x18\x45nableExternalSubdomains\x18\x0b \x01(\x08:\x04true\x12!\n\x13\x41llowRecursiveMkDir\x18\x0c \x01(\x08:\x04true\x12&\n\x18\x41llowHugeKeyValueDeletes\x18\r \x01(\x08:\x04true\x12*\n\x1cSendSchemaVersionToDatashard\x18\x0e \x01(\x08:\x04true\x12$\n\x16\x45nableSchemeBoardCache\x18\x0f \x01(\x08:\x04true\x12%\n\x11\x45nableSystemViews\x18\x10 \x01(\x08:\x04trueB\x04\xc8\xd6\x1b\x01\x12 \n\x12\x45nableExternalHive\x18\x11 \x01(\x08:\x04true\x12\x32\n$UseSchemeBoardCacheForSchemeRequests\x18\x12 \x01(\x08:\x04true\x12\'\n\x19\x43ompileMinikqlWithVersion\x18\x13 \x01(\x08:\x04true\x12#\n\x15ReadTableWithSnapshot\x18\x14 \x01(\x08:\x04true\x12\x31\n\x1dImportantTabletsUseSystemPool\x18\x15 \x01(\x08:\x04trueB\x04\xc8\xd6\x1b\x01\x12!\n\x13\x45nableOfflineSlaves\x18\x16 \x01(\x08:\x04true\x12,\n\x1d\x43heckDatabaseAccessPermission\x18\x17 \x01(\x08:\x05\x66\x61lse\x12#\n\x15\x41llowOnlineIndexBuild\x18\x18 \x01(\x08:\x04true\x12.\n\x1a\x45nablePersistentQueryStats\x18\x19 \x01(\x08:\x04trueB\x04\xc8\xd6\x1b\x01\x12&\n\x17\x44isableDataShardBarrier\x18\x1a \x01(\x08:\x05\x66\x61lse\x12-\n\x1f\x45nablePutBatchingForBlobStorage\x18\x1b \x01(\x08:\x04true\x12\x1f\n\x11\x45nableKqpWideFlow\x18\x1c \x01(\x08:\x04true\x12\"\n\x14\x45nableKqpScanQueries\x18\x1d \x01(\x08:\x04true\x12-\n\x1e\x45nablePersistentPartitionStats\x18\x1e \x01(\x08:\x05\x66\x61lse\x12&\n\x18\x45nableTtlOnIndexedTables\x18\x1f \x01(\x08:\x04true\x12<\n-AllowUpdateChannelsBindingOfSolomonPartitions\x18  \x01(\x08:\x05\x66\x61lse\x12\x1e\n\x10\x44isableLegacyYql\x18! \x01(\x08:\x04true\x12+\n\x1d\x45nableDataColumnForIndexTable\x18\" \x01(\x08:\x04true\x12:\n+AllowServerlessStorageBillingForSchemeShard\x18# \x01(\x08:\x05\x66\x61lse\x12$\n\x16\x45nableGracefulShutdown\x18$ \x01(\x08:\x04true\x12#\n\x15\x45nableDrainOnShutdown\x18% \x01(\x08:\x04true\x12-\n\x18\x45nableConfigurationCache\x18& \x01(\x08:\x05\x66\x61lseB\x04\xc8\xd6\x1b\x01\x12%\n\x10\x45nableDbCounters\x18\' \x01(\x08:\x05\x66\x61lseB\x04\xc8\xd6\x1b\x01\x12\x35\n&EnableClockGettimeForUserCpuAccounting\x18( \x01(\x08:\x05\x66\x61lse\x12 \n\x12\x45nableAsyncIndexes\x18) \x01(\x08:\x04true\x12)\n\x1b\x41llowStreamExecuteYqlScript\x18* \x01(\x08:\x04true\x12\x31\n#EnableKqpScanOverPersistentSnapshot\x18+ \x01(\x08:\x04true\x12(\n\x1a\x45nableOlapSchemaOperations\x18, \x01(\x08:\x04true\x12\x1a\n\x0c\x45nableVPatch\x18- \x01(\x08:\x04true\x12%\n\x17\x45nableMvccSnapshotReads\x18. \x01(\x08:\x04true\x12\x44\n\nEnableMvcc\x18/ \x01(\x0e\x32$.NKikimrConfig.TFeatureFlags.Tribool:\nVALUE_TRUE\x12\x33\n%EnableSchemeTransactionsAtSchemeShard\x18\x30 \x01(\x08:\x04true\x12+\n\x1c\x45nableArrowFormatAtDatashard\x18\x31 \x01(\x08:\x05\x66\x61lse\x12\x39\n*Enable3x3RequestsForMirror3DCMinLatencyPut\x18\x32 \x01(\x08:\x05\x66\x61lse\x12(\n\x1a\x45nableBackgroundCompaction\x18\x33 \x01(\x08:\x04true\x12*\n\x1b\x45nableArrowFormatInChannels\x18\x34 \x01(\x08:\x05\x66\x61lse\x12\x33\n$EnableBackgroundCompactionServerless\x18\x35 \x01(\x08:\x05\x66\x61lse\x12\"\n\x14\x45nableNotNullColumns\x18\x36 \x01(\x08:\x04true\x12+\n\x1d\x45nableTtlOnAsyncIndexedTables\x18\x37 \x01(\x08:\x04true\x12\x32\n$EnableBulkUpsertToAsyncIndexedTables\x18\x38 \x01(\x08:\x04true\x12.\n EnableNodeBrokerSingleDomainMode\x18\x39 \x01(\x08:\x04true\x12+\n\x1c\x45nablePublicApiExternalBlobs\x18; \x01(\x08:\x05\x66\x61lse\x12*\n\x1b\x45nablePublicApiKeepInMemory\x18< \x01(\x08:\x05\x66\x61lse\x12.\n EnableImplicitScanQueryInScripts\x18= \x01(\x08:\x04true\x12\x1e\n\x10\x41llowVDiskDefrag\x18? \x01(\x08:\x04true\x12 \n\x12\x45nableAsyncHttpMon\x18@ \x01(\x08:\x04true\x12\x1f\n\x11\x45nableChangefeeds\x18\x41 \x01(\x08:\x04true\x12\x38\n)EnableKqpScanQueryMultipleOlapShardsReads\x18\x43 \x01(\x08:\x05\x66\x61lse\x12\x1d\n\x0f\x45nableMoveIndex\x18\x46 \x01(\x08:\x04true\x12\x30\n!EnableFailureInjectionTermination\x18G \x01(\x08:\x05\x66\x61lse\x12!\n\x12\x45nableChunkLocking\x18H \x01(\x08:\x05\x66\x61lse\x12&\n\x18\x45nableNotNullDataColumns\x18I \x01(\x08:\x04true\x12\x1e\n\x0f\x45nableGrpcAudit\x18J \x01(\x08:\x05\x66\x61lse\x12+\n\x1d\x45nableBorrowedSplitCompaction\x18L \x01(\x08:\x04true\x12)\n\x1b\x45nableChangefeedInitialScan\x18M \x01(\x08:\x04true\x12-\n\x1e\x45nableDynamicNodeAuthorization\x18O \x01(\x08:\x05\x66\x61lse\x12-\n\x1e\x45nableDataShardGenericReadSets\x18Q \x01(\x08:\x05\x66\x61lse\x12\x31\n\"EnableAlterDatabaseCreateHiveFirst\x18R \x01(\x08:\x05\x66\x61lse\x12)\n\x1b\x45nableSmallDiskOptimization\x18T \x01(\x08:\x04true\x12\x31\n#EnableDataShardVolatileTransactions\x18U \x01(\x08:\x04true\x12#\n\x14\x45nableTopicServiceTx\x18V \x01(\x08:\x05\x66\x61lse\x12\x1e\n\x0f\x45nableLLVMCache\x18W \x01(\x08:\x05\x66\x61lse\x12(\n\x19\x45nableExternalDataSources\x18X \x01(\x08:\x05\x66\x61lse\x12\x31\n\x1d\x45nableTopicDiskSubDomainQuota\x18Y \x01(\x08:\x04trueB\x04\xc8\xd6\x1b\x01\x12\x33\n%EnableSeparationComputeActorsFromRead\x18Z \x01(\x08:\x04true\x12\x36\n\'EnablePQConfigTransactionsAtSchemeShard\x18[ \x01(\x08:\x05\x66\x61lse\x12-\n\x1f\x45nableScriptExecutionOperations\x18\\ \x01(\x08:\x04true\x12/\n!EnableImplicitQueryParameterTypes\x18] \x01(\x08:\x04true\x12\x33\n$EnableForceImmediateEffectsExecution\x18^ \x01(\x08:\x05\x66\x61lse\x12$\n\x15\x45nableTopicSplitMerge\x18_ \x01(\x08:\x05\x66\x61lse\x12\x33\n%EnableChangefeedDynamoDBStreamsFormat\x18` \x01(\x08:\x04true\x12.\n\x1f\x46orceColumnTablesCompositeMarks\x18\x61 \x01(\x08:\x05\x66\x61lse\x12\x33\n\x1e\x45nableSubscriptionsInDiscovery\x18\x62 \x01(\x08:\x05\x66\x61lseB\x04\xc8\xd6\x1b\x01\x12\"\n\x13\x45nableGetNodeLabels\x18\x63 \x01(\x08:\x05\x66\x61lse\x12$\n\x16\x45nableTopicMessageMeta\x18\x64 \x01(\x08:\x04true\x12%\n\x11\x45nableIcNodeCache\x18\x65 \x01(\x08:\x04trueB\x04\xc8\xd6\x1b\x01\x12\x1f\n\x10\x45nableTempTables\x18\x66 \x01(\x08:\x05\x66\x61lse\x12/\n\x1aSuppressCompatibilityCheck\x18g \x01(\x08:\x05\x66\x61lseB\x04\xc8\xd6\x1b\x01\x12\"\n\x14\x45nableUniqConstraint\x18h \x01(\x08:\x04true\x12\x31\n\"EnableChangefeedDebeziumJsonFormat\x18i \x01(\x08:\x05\x66\x61lse\x12\x1e\n\x10\x45nableStatistics\x18j \x01(\x08:\x04true\x12$\n\x16\x45nableUuidAsPrimaryKey\x18k \x01(\x08:\x04true\x12!\n\x12\x45nableTablePgTypes\x18l \x01(\x08:\x05\x66\x61lse\x12%\n\x17\x45nableLocalDBBtreeIndex\x18m \x01(\x08:\x04true\x12)\n\x1a\x45nablePDiskHighHDDInFlight\x18n \x01(\x08:\x05\x66\x61lse\x12\x1a\n\x0b\x45nableViews\x18p \x01(\x08:\x05\x66\x61lse\x12\x34\n%EnableServerlessExclusiveDynamicNodes\x18q \x01(\x08:\x05\x66\x61lse\x12\x33\n$EnableAccessServiceBulkAuthorization\x18r \x01(\x08:\x05\x66\x61lse\x12*\n\x1b\x45nableAddColumsWithDefaults\x18s \x01(\x08:\x05\x66\x61lse\x12\x37\n(EnableReplaceIfExistsForExternalEntities\x18t \x01(\x08:\x05\x66\x61lse\x12(\n\x1a\x45nableCMSRequestPriorities\x18u \x01(\x08:\x04true\x12(\n\x19\x45nableKeyvalueLogBatching\x18v \x01(\x08:\x05\x66\x61lse\x12$\n\x16\x45nableLocalDBFlatIndex\x18w \x01(\x08:\x04true\x12)\n\x15\x45xtendedVDiskCounters\x18x \x01(\x08:\x04trueB\x04\xc8\xd6\x1b\x01\x12(\n\x14\x45xtendedPDiskSensors\x18y \x01(\x08:\x04trueB\x04\xc8\xd6\x1b\x01\x12$\n\x15\x45nableStableNodeNames\x18z \x01(\x08:\x05\x66\x61lse\x12\"\n\x13\x45nableBackupService\x18{ \x01(\x08:\x05\x66\x61lse\x12/\n!EnableVolatileTransactionArbiters\x18| \x01(\x08:\x04true\x12\x1f\n\x10\x45nableGraphShard\x18} \x01(\x08:\x05\x66\x61lse\x12\x32\n#EnableExternalSourceSchemaInference\x18~ \x01(\x08:\x05\x66\x61lse\x12$\n\x15\x45nableDbMetadataCache\x18\x7f \x01(\x08:\x05\x66\x61lse\x12$\n\x15\x45nableTableDatetime64\x18\x80\x01 \x01(\x08:\x04true\x12\"\n\x13\x45nableResourcePools\x18\x81\x01 \x01(\x08:\x04true\x12&\n\x16\x45nableColumnStatistics\x18\x82\x01 \x01(\x08:\x05\x66\x61lse\x12\x30\n EnableSingleCompositeActionGroup\x18\x83\x01 \x01(\x08:\x05\x66\x61lse\x12/\n\x1f\x45nableResourcePoolsOnServerless\x18\x84\x01 \x01(\x08:\x05\x66\x61lse\x12!\n\x11\x45nableVectorIndex\x18\x85\x01 \x01(\x08:\x05\x66\x61lse\x12.\n\x1e\x45nableChangefeedsOnIndexTables\x18\x86\x01 \x01(\x08:\x05\x66\x61lse\x12+\n\x1b\x45nableResourcePoolsCounters\x18\x87\x01 \x01(\x08:\x05\x66\x61lse\x12\x32\n\"EnableOptionalColumnsInColumnShard\x18\x88\x01 \x01(\x08:\x05\x66\x61lse\x12%\n\x16\x45nableGranularTimecast\x18\x89\x01 \x01(\x08:\x04true\x12\x30\n EnableAlterShardingInColumnShard\x18\x8a\x01 \x01(\x08:\x05\x66\x61lse\x12\x1d\n\x0e\x45nablePgSyntax\x18\x8b\x01 \x01(\x08:\x04true\x12*\n\x1a\x45nableTieringInColumnShard\x18\x8c\x01 \x01(\x08:\x05\x66\x61lse\x12\x30\n!EnableMetadataObjectsOnServerless\x18\x8d\x01 \x01(\x08:\x04true\x12%\n\x15\x45nableOlapCompression\x18\x8e\x01 \x01(\x08:\x05\x66\x61lse\x12\x34\n%EnableExternalDataSourcesOnServerless\x18\x8f\x01 \x01(\x08:\x04true\x12$\n\x14\x45nableSparsedColumns\x18\x90\x01 \x01(\x08:\x05\x66\x61lse\x12*\n\x1a\x45nableParameterizedDecimal\x18\x91\x01 \x01(\x08:\x05\x66\x61lse\x12\x32\n\"EnableImmediateWritingOnBulkUpsert\x18\x92\x01 \x01(\x08:\x05\x66\x61lse\x12=\n-EnableInsertWriteIdSpecialColumnCompatibility\x18\x93\x01 \x01(\x08:\x05\x66\x61lse\x12\x31\n!EnableTopicAutopartitioningForCDC\x18\x94\x01 \x01(\x08:\x05\x66\x61lse\x12+\n\x1b\x45nableWritePortionsOnInsert\x18\x95\x01 \x01(\x08:\x05\x66\x61lse\x12#\n\x13\x45nableFollowerStats\x18\x96\x01 \x01(\x08:\x05\x66\x61lse\"5\n\x07Tribool\x12\t\n\x05UNSET\x10\x00\x12\x0e\n\nVALUE_TRUE\x10\x01\x12\x0f\n\x0bVALUE_FALSE\x10\x02J\x04\x08:\x10;J\x04\x08>\x10?J\x04\x08\x42\x10\x43J\x04\x08\x44\x10\x45J\x04\x08\x45\x10\x46J\x04\x08K\x10LJ\x04\x08N\x10OJ\x04\x08P\x10QJ\x04\x08S\x10TJ\x04\x08o\x10pR\x1dSomeRemovedFeatureFlagExampleR AnotherRemovedFeatureFlagExample:7\n\x0eRequireRestart\x12\x1d.google.protobuf.FieldOptions\x18\xe9\xba\x03 \x01(\x08\x42\x18\n\x16ru.yandex.kikimr.proto')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ydb.core.protos.feature_flags_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\026ru.yandex.kikimr.proto'
  _globals['_TFEATUREFLAGS'].fields_by_name['AllowYdbRequestsWithoutDatabase']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['AllowYdbRequestsWithoutDatabase']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableSystemViews']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableSystemViews']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['ImportantTabletsUseSystemPool']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['ImportantTabletsUseSystemPool']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['EnablePersistentQueryStats']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['EnablePersistentQueryStats']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableConfigurationCache']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableConfigurationCache']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableDbCounters']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableDbCounters']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableTopicDiskSubDomainQuota']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableTopicDiskSubDomainQuota']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableSubscriptionsInDiscovery']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableSubscriptionsInDiscovery']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableIcNodeCache']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['EnableIcNodeCache']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['SuppressCompatibilityCheck']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['SuppressCompatibilityCheck']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['ExtendedVDiskCounters']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['ExtendedVDiskCounters']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS'].fields_by_name['ExtendedPDiskSensors']._options = None
  _globals['_TFEATUREFLAGS'].fields_by_name['ExtendedPDiskSensors']._serialized_options = b'\310\326\033\001'
  _globals['_TFEATUREFLAGS']._serialized_start=89
  _globals['_TFEATUREFLAGS']._serialized_end=6424
  _globals['_TFEATUREFLAGS_TRIBOOL']._serialized_start=6246
  _globals['_TFEATUREFLAGS_TRIBOOL']._serialized_end=6299
# @@protoc_insertion_point(module_scope)
