# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import modfutugrpc.futuapi_pb2 as futuapi__pb2
import modfutugrpc.orderbook_pb2 as orderbook__pb2
import modfutugrpc.seqquote_pb2 as seqquote__pb2

GRPC_GENERATED_VERSION = '1.64.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in futuapi_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class FutuApiStub(object):
    """rpc SubMktState (SubMktState_Req) returns (stream SubMktState_Res) {};
    rpc GetMktState (GetMktState_Req) returns (GetMktState_Res) {};
    rpc GetOrderBooks (GetOrderBook_Res) returns (GetOrderBook_Res) {};
    rpc SubActiveOrders (SubActiveOrders_Req) returns (stream SubActiveOrders_Res) {};
    rpc GetActiveOrders (GetActiveOrders_Req) returns (ActiveOrderList) {};
    rpc SubHoldings (SubHoldings_Req) returns (stream SubHoldings_Res) {};
    rpc GetHoldings (GetHoldings_Req) returns (GetHoldings_Res) {};
    rpc GetStockQuotes (GetStockQuotes_Req) returns (GetStockQuotes_Res) {};
    rpc GetHistoDeals (google.protobuf.Empty) returns (HistoDealList) {};
    rpc GetOrderFees (google.protobuf.Empty) returns (OrderFeeList) {};
    rpc SubData (SubData_Req) returns (stream SubData_Res) {};
    rpc Bootstrap (google.protobuf.Empty) returns (Bootstrap_Res) {};
    rpc SubDeals (SubDeals_Req) returns (stream SubDeals_Res) {};
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """


class FutuApiServicer(object):
    """rpc SubMktState (SubMktState_Req) returns (stream SubMktState_Res) {};
    rpc GetMktState (GetMktState_Req) returns (GetMktState_Res) {};
    rpc GetOrderBooks (GetOrderBook_Res) returns (GetOrderBook_Res) {};
    rpc SubActiveOrders (SubActiveOrders_Req) returns (stream SubActiveOrders_Res) {};
    rpc GetActiveOrders (GetActiveOrders_Req) returns (ActiveOrderList) {};
    rpc SubHoldings (SubHoldings_Req) returns (stream SubHoldings_Res) {};
    rpc GetHoldings (GetHoldings_Req) returns (GetHoldings_Res) {};
    rpc GetStockQuotes (GetStockQuotes_Req) returns (GetStockQuotes_Res) {};
    rpc GetHistoDeals (google.protobuf.Empty) returns (HistoDealList) {};
    rpc GetOrderFees (google.protobuf.Empty) returns (OrderFeeList) {};
    rpc SubData (SubData_Req) returns (stream SubData_Res) {};
    rpc Bootstrap (google.protobuf.Empty) returns (Bootstrap_Res) {};
    rpc SubDeals (SubDeals_Req) returns (stream SubDeals_Res) {};
    """


def add_FutuApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dragonbot.FutuApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dragonbot.FutuApi', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class FutuApi(object):
    """rpc SubMktState (SubMktState_Req) returns (stream SubMktState_Res) {};
    rpc GetMktState (GetMktState_Req) returns (GetMktState_Res) {};
    rpc GetOrderBooks (GetOrderBook_Res) returns (GetOrderBook_Res) {};
    rpc SubActiveOrders (SubActiveOrders_Req) returns (stream SubActiveOrders_Res) {};
    rpc GetActiveOrders (GetActiveOrders_Req) returns (ActiveOrderList) {};
    rpc SubHoldings (SubHoldings_Req) returns (stream SubHoldings_Res) {};
    rpc GetHoldings (GetHoldings_Req) returns (GetHoldings_Res) {};
    rpc GetStockQuotes (GetStockQuotes_Req) returns (GetStockQuotes_Res) {};
    rpc GetHistoDeals (google.protobuf.Empty) returns (HistoDealList) {};
    rpc GetOrderFees (google.protobuf.Empty) returns (OrderFeeList) {};
    rpc SubData (SubData_Req) returns (stream SubData_Res) {};
    rpc Bootstrap (google.protobuf.Empty) returns (Bootstrap_Res) {};
    rpc SubDeals (SubDeals_Req) returns (stream SubDeals_Res) {};
    """


class L0Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/dragonbot.L0/Init',
                request_serializer=futuapi__pb2.Init_Req.SerializeToString,
                response_deserializer=futuapi__pb2.Init_Res.FromString,
                _registered_method=True)
        self.GetActiveOrders = channel.unary_unary(
                '/dragonbot.L0/GetActiveOrders',
                request_serializer=futuapi__pb2.GetActiveOrders_Req.SerializeToString,
                response_deserializer=futuapi__pb2.GetActiveOrders_Res.FromString,
                _registered_method=True)
        self.GetHoldings = channel.unary_unary(
                '/dragonbot.L0/GetHoldings',
                request_serializer=futuapi__pb2.GetHoldings_Req.SerializeToString,
                response_deserializer=futuapi__pb2.GetHoldings_Res.FromString,
                _registered_method=True)
        self.FetchRTSeqQuotes = channel.unary_stream(
                '/dragonbot.L0/FetchRTSeqQuotes',
                request_serializer=futuapi__pb2.FetchRTSeqQuotes_Req.SerializeToString,
                response_deserializer=futuapi__pb2.FetchRTSeqQuotes_Res.FromString,
                _registered_method=True)
        self.FetchDealOrders = channel.unary_stream(
                '/dragonbot.L0/FetchDealOrders',
                request_serializer=futuapi__pb2.FetchDealOrders_Req.SerializeToString,
                response_deserializer=futuapi__pb2.FetchDealOrders_Res.FromString,
                _registered_method=True)
        self.FetchDealOrderFees = channel.unary_stream(
                '/dragonbot.L0/FetchDealOrderFees',
                request_serializer=futuapi__pb2.FetchDealOrderFees_Req.SerializeToString,
                response_deserializer=futuapi__pb2.FetchDealOrderFees_Res.FromString,
                _registered_method=True)
        self.PlaceOrder = channel.unary_unary(
                '/dragonbot.L0/PlaceOrder',
                request_serializer=futuapi__pb2.PlaceOrder_Req.SerializeToString,
                response_deserializer=futuapi__pb2.PlaceOrder_Res.FromString,
                _registered_method=True)


class L0Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHoldings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchRTSeqQuotes(self, request, context):
        """rpc GetBaseData (GetBaseData_Req) returns (GetBaseData_Res) {}; base states are propagated thru redis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchDealOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchDealOrderFees(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaceOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_L0Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=futuapi__pb2.Init_Req.FromString,
                    response_serializer=futuapi__pb2.Init_Res.SerializeToString,
            ),
            'GetActiveOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveOrders,
                    request_deserializer=futuapi__pb2.GetActiveOrders_Req.FromString,
                    response_serializer=futuapi__pb2.GetActiveOrders_Res.SerializeToString,
            ),
            'GetHoldings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHoldings,
                    request_deserializer=futuapi__pb2.GetHoldings_Req.FromString,
                    response_serializer=futuapi__pb2.GetHoldings_Res.SerializeToString,
            ),
            'FetchRTSeqQuotes': grpc.unary_stream_rpc_method_handler(
                    servicer.FetchRTSeqQuotes,
                    request_deserializer=futuapi__pb2.FetchRTSeqQuotes_Req.FromString,
                    response_serializer=futuapi__pb2.FetchRTSeqQuotes_Res.SerializeToString,
            ),
            'FetchDealOrders': grpc.unary_stream_rpc_method_handler(
                    servicer.FetchDealOrders,
                    request_deserializer=futuapi__pb2.FetchDealOrders_Req.FromString,
                    response_serializer=futuapi__pb2.FetchDealOrders_Res.SerializeToString,
            ),
            'FetchDealOrderFees': grpc.unary_stream_rpc_method_handler(
                    servicer.FetchDealOrderFees,
                    request_deserializer=futuapi__pb2.FetchDealOrderFees_Req.FromString,
                    response_serializer=futuapi__pb2.FetchDealOrderFees_Res.SerializeToString,
            ),
            'PlaceOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaceOrder,
                    request_deserializer=futuapi__pb2.PlaceOrder_Req.FromString,
                    response_serializer=futuapi__pb2.PlaceOrder_Res.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dragonbot.L0', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dragonbot.L0', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class L0(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dragonbot.L0/Init',
            futuapi__pb2.Init_Req.SerializeToString,
            futuapi__pb2.Init_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetActiveOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dragonbot.L0/GetActiveOrders',
            futuapi__pb2.GetActiveOrders_Req.SerializeToString,
            futuapi__pb2.GetActiveOrders_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetHoldings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dragonbot.L0/GetHoldings',
            futuapi__pb2.GetHoldings_Req.SerializeToString,
            futuapi__pb2.GetHoldings_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchRTSeqQuotes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/dragonbot.L0/FetchRTSeqQuotes',
            futuapi__pb2.FetchRTSeqQuotes_Req.SerializeToString,
            futuapi__pb2.FetchRTSeqQuotes_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchDealOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/dragonbot.L0/FetchDealOrders',
            futuapi__pb2.FetchDealOrders_Req.SerializeToString,
            futuapi__pb2.FetchDealOrders_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchDealOrderFees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/dragonbot.L0/FetchDealOrderFees',
            futuapi__pb2.FetchDealOrderFees_Req.SerializeToString,
            futuapi__pb2.FetchDealOrderFees_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PlaceOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dragonbot.L0/PlaceOrder',
            futuapi__pb2.PlaceOrder_Req.SerializeToString,
            futuapi__pb2.PlaceOrder_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class L1Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueryRTSnapshots = channel.unary_unary(
                '/dragonbot.L1/QueryRTSnapshots',
                request_serializer=futuapi__pb2.QueryRTSnapshots_Req.SerializeToString,
                response_deserializer=futuapi__pb2.QueryRTSnapshots_Res.FromString,
                _registered_method=True)
        self.OnBasicSync = channel.unary_stream(
                '/dragonbot.L1/OnBasicSync',
                request_serializer=futuapi__pb2.OnBasicSync_Req.SerializeToString,
                response_deserializer=futuapi__pb2.OnBasicSync_Res.FromString,
                _registered_method=True)
        self.OnDeal = channel.unary_stream(
                '/dragonbot.L1/OnDeal',
                request_serializer=futuapi__pb2.OnTradeDeal_Req.SerializeToString,
                response_deserializer=futuapi__pb2.OnTradeDeal_Res.FromString,
                _registered_method=True)
        self.OnSeqQuote = channel.unary_stream(
                '/dragonbot.L1/OnSeqQuote',
                request_serializer=futuapi__pb2.OnSeqQuote_Req.SerializeToString,
                response_deserializer=seqquote__pb2.SeqQuote.FromString,
                _registered_method=True)
        self.OnOrderBook = channel.unary_stream(
                '/dragonbot.L1/OnOrderBook',
                request_serializer=futuapi__pb2.OnOrderBook_Req.SerializeToString,
                response_deserializer=orderbook__pb2.OrderBook.FromString,
                _registered_method=True)
        self.PlaceOrder = channel.unary_unary(
                '/dragonbot.L1/PlaceOrder',
                request_serializer=futuapi__pb2.PlaceOrder_Req.SerializeToString,
                response_deserializer=futuapi__pb2.PlaceOrder_Res.FromString,
                _registered_method=True)


class L1Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def QueryRTSnapshots(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OnBasicSync(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OnDeal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OnSeqQuote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OnOrderBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaceOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_L1Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueryRTSnapshots': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryRTSnapshots,
                    request_deserializer=futuapi__pb2.QueryRTSnapshots_Req.FromString,
                    response_serializer=futuapi__pb2.QueryRTSnapshots_Res.SerializeToString,
            ),
            'OnBasicSync': grpc.unary_stream_rpc_method_handler(
                    servicer.OnBasicSync,
                    request_deserializer=futuapi__pb2.OnBasicSync_Req.FromString,
                    response_serializer=futuapi__pb2.OnBasicSync_Res.SerializeToString,
            ),
            'OnDeal': grpc.unary_stream_rpc_method_handler(
                    servicer.OnDeal,
                    request_deserializer=futuapi__pb2.OnTradeDeal_Req.FromString,
                    response_serializer=futuapi__pb2.OnTradeDeal_Res.SerializeToString,
            ),
            'OnSeqQuote': grpc.unary_stream_rpc_method_handler(
                    servicer.OnSeqQuote,
                    request_deserializer=futuapi__pb2.OnSeqQuote_Req.FromString,
                    response_serializer=seqquote__pb2.SeqQuote.SerializeToString,
            ),
            'OnOrderBook': grpc.unary_stream_rpc_method_handler(
                    servicer.OnOrderBook,
                    request_deserializer=futuapi__pb2.OnOrderBook_Req.FromString,
                    response_serializer=orderbook__pb2.OrderBook.SerializeToString,
            ),
            'PlaceOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaceOrder,
                    request_deserializer=futuapi__pb2.PlaceOrder_Req.FromString,
                    response_serializer=futuapi__pb2.PlaceOrder_Res.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dragonbot.L1', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dragonbot.L1', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class L1(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def QueryRTSnapshots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dragonbot.L1/QueryRTSnapshots',
            futuapi__pb2.QueryRTSnapshots_Req.SerializeToString,
            futuapi__pb2.QueryRTSnapshots_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OnBasicSync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/dragonbot.L1/OnBasicSync',
            futuapi__pb2.OnBasicSync_Req.SerializeToString,
            futuapi__pb2.OnBasicSync_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OnDeal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/dragonbot.L1/OnDeal',
            futuapi__pb2.OnTradeDeal_Req.SerializeToString,
            futuapi__pb2.OnTradeDeal_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OnSeqQuote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/dragonbot.L1/OnSeqQuote',
            futuapi__pb2.OnSeqQuote_Req.SerializeToString,
            seqquote__pb2.SeqQuote.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OnOrderBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/dragonbot.L1/OnOrderBook',
            futuapi__pb2.OnOrderBook_Req.SerializeToString,
            orderbook__pb2.OrderBook.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PlaceOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dragonbot.L1/PlaceOrder',
            futuapi__pb2.PlaceOrder_Req.SerializeToString,
            futuapi__pb2.PlaceOrder_Res.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
