Metadata-Version: 2.1
Name: minefob
Version: 2.0.0
Summary: (Deprecated) Module to control Minehut servers via Python
Author-email: Caleb North <contact@fivesixfive.dev>
License: MIT License
        
        Copyright (c) 2024 Caleb North
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

This module is deprecated as of the Minehut API being shut down.

# Welcome to the Minefob documentation.  
Here you will learn how to use Minefob.

## Initialization
```from minefob import Minefob
m = Minefob("foorbar@example.domain", "password", "my_server")
```
Initializing a new Minefob class instance requires 3 arguments:
* Email associated with Minehut account
* Password of the aforementioned account
* and the server name

will return `RunTimeError` if server name is misspelled.

## Post Commands

### Say
```
m.say("Hey there")
```
Will print the desired message to the chat.  Appears like this
`[Server] Hey there`

### Title
```
m.title("Big text", subwords="little text", fadeIn=0, hold=20, fadeOut=0)
```
Will summon a title. 
The big text title is the first argument and the subtitle as the second argument.  Subtitle is not required.
I have a feeling the `fadeIn`, `hold`, and `fadeOut` are self-explanatory,
however you must know that the time is in Minecraft ticks (20 ticks = 1 sec.)

### Kick
```
m.kick("@a", "because i wanted to")
```
Will kick the selected player(s).  Use the second argument to provide a reason, if wanted.

### Command
```
m.command("/give @r minecraft:diamonds 64")
```
Will run the desired command.

### Save
```
m.save()
```
Saves server.

### Awaken
```
m.awaken()
```
Wakes server from hibernation.

### Slumber
```
m.slumber(17)
```
Will kick players, save server, and put it into hibernation AFTER a countdown.
Length of countdown is determined by the only argument passed into this function.
Leave at 0 to skip countdown and shut down instantly.

## Properties
### Players
```
>>> m.players
3
```
Returns the number of active players on the server.

### Online
```
>>> m.online
False
```
Returns whether the server is online or not.

### Status
```
>>> m.status
'SERVER-DOWNLOADING'
```
Returns the current status of the server, basically
a more detailed version of `m.online`

### Started
```
>>> m.started
[09, 34, 55]
```
Returns the time the server was started as a list
in this format: `[HH:MM:SS]`

### Stopped
```
>>> m.stopped
[10, 16, 37]
```
Returns the time the server was stopped as a list
in this format: `[HH:MM:SS]`

