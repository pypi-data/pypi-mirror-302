
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/eigenmodes_2d/plot_bottom_symmetric.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_eigenmodes_2d_plot_bottom_symmetric.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_eigenmodes_2d_plot_bottom_symmetric.py:


Example: eigenmodes 1
=====================

.. GENERATED FROM PYTHON SOURCE LINES 8-13

+-------------+------------+--------------+------------+------------+
| Boundaries  |    left    |     right    |    top     |   bottom   |
+=============+============+==============+============+============+
|      -      |    zero    |     zero     |   zero     |     sym    |
+-------------+------------+--------------+------------+------------+

.. GENERATED FROM PYTHON SOURCE LINES 13-62

.. code-block:: python3


    from scipy.sparse import linalg
    from MPSPlots.render2D import SceneList
    from PyFinitDiff.finite_difference_2D import FiniteDifference
    from PyFinitDiff.finite_difference_2D import get_circular_mesh_triplet
    from PyFinitDiff.finite_difference_2D import Boundaries

    n_y = n_x = 80


    sparse_instance = FiniteDifference(
        n_x=n_x,
        n_y=n_y,
        dx=1,
        dy=1,
        derivative=2,
        accuracy=4,
        boundaries=Boundaries(bottom='symmetric')
    )

    triplet = sparse_instance.triplet

    mesh_triplet = get_circular_mesh_triplet(
        n_x=n_x,
        n_y=n_y,
        value_out=1.0,
        value_in=1.4444,
        x_offset=0,
        y_offset=-100,
        radius=70
    )

    dynamic_triplet = sparse_instance.triplet + mesh_triplet

    eigen_values, eigen_vectors = linalg.eigs(dynamic_triplet.to_scipy_sparse(), k=4, which='LM', sigma=1.4444)

    shape = [sparse_instance.n_x, sparse_instance.n_y]

    figure = SceneList(unit_size=(3, 3), tight_layout=True, ax_orientation='horizontal')

    for i in range(4):
        Vector = eigen_vectors[:, i].real.reshape(shape)
        ax = figure.append_ax(title=f'eigenvalues: \n{eigen_values[i]:.3f}')
        ax.add_mesh(scalar=Vector)

    figure.show()


    # -



.. image-sg:: /gallery/eigenmodes_2d/images/sphx_glr_plot_bottom_symmetric_001.png
   :alt: , eigenvalues:  1.438+0.000j, eigenvalues:  1.427+0.000j, eigenvalues:  1.414+0.000j, eigenvalues:  1.409+0.000j
   :srcset: /gallery/eigenmodes_2d/images/sphx_glr_plot_bottom_symmetric_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    SceneList(unit_size=(3, 3), tight_layout=True, transparent_background=False, title='', padding=1.0, axis_list=[Axis(row=0, col=0, x_label=None, y_label=None, title='eigenvalues: \n1.438+0.000j', show_grid=True, show_legend=False, legend_position='best', x_scale='linear', y_scale='linear', x_limits=None, y_limits=None, equal_limits=False, projection=None, font_size=16, tick_size=14, y_tick_position='left', x_tick_position='bottom', show_ticks=True, show_colorbar=None, legend_font_size=14, line_width=None, line_style=None, x_scale_factor=None, y_scale_factor=None, aspect_ratio='auto', _artist_list=[Mesh(scalar=array([[-8.67139678e-07, -2.21239601e-06, -4.61925904e-06, ...,
            -4.61925904e-06, -2.21239601e-06, -8.67139678e-07],
           [-8.58048535e-07, -2.18853273e-06, -4.56730062e-06, ...,
            -4.56730062e-06, -2.18853273e-06, -8.58048535e-07],
           [-8.26771350e-07, -2.10660653e-06, -4.38951012e-06, ...,
            -4.38951012e-06, -2.10660653e-06, -8.26771350e-07],
           ...,
           [ 2.90682146e-19, -1.55354803e-19,  5.54662618e-19, ...,
             8.47149057e-19,  1.50942733e-19, -7.50802998e-19],
           [ 8.79685404e-19, -5.07805967e-19, -5.52269641e-19, ...,
             1.31006441e-19,  3.38347566e-19,  5.14404548e-19],
           [-4.34659338e-19, -2.43369960e-19,  7.90187038e-19, ...,
            -5.14249362e-19,  5.07039406e-19, -5.53492286e-19]]), x=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), y=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), x_scale_factor=1, y_scale_factor=1, layer_position=1, mappable=<matplotlib.collections.QuadMesh object at 0x127fc2810>), Mesh(scalar=array([[-8.67139678e-07, -2.21239601e-06, -4.61925904e-06, ...,
            -4.61925904e-06, -2.21239601e-06, -8.67139678e-07],
           [-8.58048535e-07, -2.18853273e-06, -4.56730062e-06, ...,
            -4.56730062e-06, -2.18853273e-06, -8.58048535e-07],
           [-8.26771350e-07, -2.10660653e-06, -4.38951012e-06, ...,
            -4.38951012e-06, -2.10660653e-06, -8.26771350e-07],
           ...,
           [ 2.90682146e-19, -1.55354803e-19,  5.54662618e-19, ...,
             8.47149057e-19,  1.50942733e-19, -7.50802998e-19],
           [ 8.79685404e-19, -5.07805967e-19, -5.52269641e-19, ...,
             1.31006441e-19,  3.38347566e-19,  5.14404548e-19],
           [-4.34659338e-19, -2.43369960e-19,  7.90187038e-19, ...,
            -5.14249362e-19,  5.07039406e-19, -5.53492286e-19]]), x=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), y=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), x_scale_factor=1, y_scale_factor=1, layer_position=1, mappable=<matplotlib.collections.QuadMesh object at 0x127fc2810>)], mpl_ax=<Axes: title={'center': 'eigenvalues: \n1.438+0.000j'}>, colorbar=Colorbar(artist=None, discreet=False, position='right', colormap=<matplotlib.colors.LinearSegmentedColormap object at 0x125418050>, orientation='vertical', symmetric=False, log_norm=False, numeric_format=None, n_ticks=None, label_size=None, width='10%', padding=0.1, norm=None, label='', mappable=None)), Axis(row=0, col=1, x_label=None, y_label=None, title='eigenvalues: \n1.427+0.000j', show_grid=True, show_legend=False, legend_position='best', x_scale='linear', y_scale='linear', x_limits=None, y_limits=None, equal_limits=False, projection=None, font_size=16, tick_size=14, y_tick_position='left', x_tick_position='bottom', show_ticks=True, show_colorbar=None, legend_font_size=14, line_width=None, line_style=None, x_scale_factor=None, y_scale_factor=None, aspect_ratio='auto', _artist_list=[Mesh(scalar=array([[ 2.11357860e-06,  5.36961488e-06,  1.11444441e-05, ...,
            -1.11444441e-05, -5.36961488e-06, -2.11357860e-06],
           [ 2.09092018e-06,  5.31039398e-06,  1.10162694e-05, ...,
            -1.10162694e-05, -5.31039398e-06, -2.09092018e-06],
           [ 2.01297611e-06,  5.10709592e-06,  1.05776857e-05, ...,
            -1.05776857e-05, -5.10709592e-06, -2.01297611e-06],
           ...,
           [-1.00934439e-18,  5.57067821e-19, -3.17640686e-18, ...,
            -2.70432849e-18, -9.14548746e-19,  2.26929852e-18],
           [-2.66641722e-18,  3.03192135e-18,  2.14444549e-18, ...,
             1.57890571e-19, -1.68730321e-18, -1.89790112e-18],
           [ 2.61758747e-18,  2.46166834e-18, -1.95056200e-18, ...,
             2.90406367e-18, -1.16125377e-18,  3.09940740e-18]]), x=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), y=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), x_scale_factor=1, y_scale_factor=1, layer_position=1, mappable=<matplotlib.collections.QuadMesh object at 0x130f960d0>), Mesh(scalar=array([[ 2.11357860e-06,  5.36961488e-06,  1.11444441e-05, ...,
            -1.11444441e-05, -5.36961488e-06, -2.11357860e-06],
           [ 2.09092018e-06,  5.31039398e-06,  1.10162694e-05, ...,
            -1.10162694e-05, -5.31039398e-06, -2.09092018e-06],
           [ 2.01297611e-06,  5.10709592e-06,  1.05776857e-05, ...,
            -1.05776857e-05, -5.10709592e-06, -2.01297611e-06],
           ...,
           [-1.00934439e-18,  5.57067821e-19, -3.17640686e-18, ...,
            -2.70432849e-18, -9.14548746e-19,  2.26929852e-18],
           [-2.66641722e-18,  3.03192135e-18,  2.14444549e-18, ...,
             1.57890571e-19, -1.68730321e-18, -1.89790112e-18],
           [ 2.61758747e-18,  2.46166834e-18, -1.95056200e-18, ...,
             2.90406367e-18, -1.16125377e-18,  3.09940740e-18]]), x=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), y=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), x_scale_factor=1, y_scale_factor=1, layer_position=1, mappable=<matplotlib.collections.QuadMesh object at 0x130f960d0>)], mpl_ax=<Axes: title={'center': 'eigenvalues: \n1.427+0.000j'}>, colorbar=Colorbar(artist=None, discreet=False, position='right', colormap=<matplotlib.colors.LinearSegmentedColormap object at 0x125418050>, orientation='vertical', symmetric=False, log_norm=False, numeric_format=None, n_ticks=None, label_size=None, width='10%', padding=0.1, norm=None, label='', mappable=None)), Axis(row=0, col=2, x_label=None, y_label=None, title='eigenvalues: \n1.414+0.000j', show_grid=True, show_legend=False, legend_position='best', x_scale='linear', y_scale='linear', x_limits=None, y_limits=None, equal_limits=False, projection=None, font_size=16, tick_size=14, y_tick_position='left', x_tick_position='bottom', show_ticks=True, show_colorbar=None, legend_font_size=14, line_width=None, line_style=None, x_scale_factor=None, y_scale_factor=None, aspect_ratio='auto', _artist_list=[Mesh(scalar=array([[ 2.97271718e-06,  7.51464283e-06,  1.54873803e-05, ...,
             1.54873803e-05,  7.51464283e-06,  2.97271718e-06],
           [ 2.93807848e-06,  7.42456708e-06,  1.52938164e-05, ...,
             1.52938164e-05,  7.42456708e-06,  2.93807848e-06],
           [ 2.81900737e-06,  7.11553015e-06,  1.46317460e-05, ...,
             1.46317460e-05,  7.11553015e-06,  2.81900737e-06],
           ...,
           [-1.21078054e-18,  7.43911971e-19, -1.46033547e-18, ...,
            -2.90115325e-18, -4.47098539e-19,  1.51161133e-18],
           [-3.35116846e-18, -4.03596040e-19,  1.10657732e-18, ...,
            -9.16966626e-19, -7.52321542e-19, -2.25755512e-18],
           [ 1.62438938e-19, -9.46591187e-19, -3.00302554e-18, ...,
             3.19291557e-19, -2.43357789e-18,  2.17568111e-18]]), x=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), y=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), x_scale_factor=1, y_scale_factor=1, layer_position=1, mappable=<matplotlib.collections.QuadMesh object at 0x130f5f190>), Mesh(scalar=array([[ 2.97271718e-06,  7.51464283e-06,  1.54873803e-05, ...,
             1.54873803e-05,  7.51464283e-06,  2.97271718e-06],
           [ 2.93807848e-06,  7.42456708e-06,  1.52938164e-05, ...,
             1.52938164e-05,  7.42456708e-06,  2.93807848e-06],
           [ 2.81900737e-06,  7.11553015e-06,  1.46317460e-05, ...,
             1.46317460e-05,  7.11553015e-06,  2.81900737e-06],
           ...,
           [-1.21078054e-18,  7.43911971e-19, -1.46033547e-18, ...,
            -2.90115325e-18, -4.47098539e-19,  1.51161133e-18],
           [-3.35116846e-18, -4.03596040e-19,  1.10657732e-18, ...,
            -9.16966626e-19, -7.52321542e-19, -2.25755512e-18],
           [ 1.62438938e-19, -9.46591187e-19, -3.00302554e-18, ...,
             3.19291557e-19, -2.43357789e-18,  2.17568111e-18]]), x=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), y=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), x_scale_factor=1, y_scale_factor=1, layer_position=1, mappable=<matplotlib.collections.QuadMesh object at 0x130f5f190>)], mpl_ax=<Axes: title={'center': 'eigenvalues: \n1.414+0.000j'}>, colorbar=Colorbar(artist=None, discreet=False, position='right', colormap=<matplotlib.colors.LinearSegmentedColormap object at 0x125418050>, orientation='vertical', symmetric=False, log_norm=False, numeric_format=None, n_ticks=None, label_size=None, width='10%', padding=0.1, norm=None, label='', mappable=None)), Axis(row=0, col=3, x_label=None, y_label=None, title='eigenvalues: \n1.409+0.000j', show_grid=True, show_legend=False, legend_position='best', x_scale='linear', y_scale='linear', x_limits=None, y_limits=None, equal_limits=False, projection=None, font_size=16, tick_size=14, y_tick_position='left', x_tick_position='bottom', show_ticks=True, show_colorbar=None, legend_font_size=14, line_width=None, line_style=None, x_scale_factor=None, y_scale_factor=None, aspect_ratio='auto', _artist_list=[Mesh(scalar=array([[-2.70558133e-06, -6.81784239e-06, -1.39883337e-05, ...,
            -1.39883337e-05, -6.81784239e-06, -2.70558133e-06],
           [-2.67767837e-06, -6.74551184e-06, -1.38335530e-05, ...,
            -1.38335530e-05, -6.74551184e-06, -2.67767837e-06],
           [-2.58164133e-06, -6.49707866e-06, -1.33036697e-05, ...,
            -1.33036697e-05, -6.49707866e-06, -2.58164133e-06],
           ...,
           [-3.28238992e-19,  4.89235203e-20, -3.96852635e-20, ...,
            -4.33969013e-19, -2.46117549e-19, -1.55440547e-19],
           [-7.37099331e-19, -4.14226850e-19, -3.86609535e-19, ...,
            -6.61410671e-19, -9.52391132e-20, -6.09480424e-19],
           [-1.67435379e-19, -4.57158795e-19, -4.75058166e-19, ...,
            -6.61422819e-19, -7.46001772e-19, -9.52967770e-20]]), x=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), y=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), x_scale_factor=1, y_scale_factor=1, layer_position=1, mappable=<matplotlib.collections.QuadMesh object at 0x131171dd0>), Mesh(scalar=array([[-2.70558133e-06, -6.81784239e-06, -1.39883337e-05, ...,
            -1.39883337e-05, -6.81784239e-06, -2.70558133e-06],
           [-2.67767837e-06, -6.74551184e-06, -1.38335530e-05, ...,
            -1.38335530e-05, -6.74551184e-06, -2.67767837e-06],
           [-2.58164133e-06, -6.49707866e-06, -1.33036697e-05, ...,
            -1.33036697e-05, -6.49707866e-06, -2.58164133e-06],
           ...,
           [-3.28238992e-19,  4.89235203e-20, -3.96852635e-20, ...,
            -4.33969013e-19, -2.46117549e-19, -1.55440547e-19],
           [-7.37099331e-19, -4.14226850e-19, -3.86609535e-19, ...,
            -6.61410671e-19, -9.52391132e-20, -6.09480424e-19],
           [-1.67435379e-19, -4.57158795e-19, -4.75058166e-19, ...,
            -6.61422819e-19, -7.46001772e-19, -9.52967770e-20]]), x=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), y=array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
           17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
           34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
           68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79]), x_scale_factor=1, y_scale_factor=1, layer_position=1, mappable=<matplotlib.collections.QuadMesh object at 0x131171dd0>)], mpl_ax=<Axes: title={'center': 'eigenvalues: \n1.409+0.000j'}>, colorbar=Colorbar(artist=None, discreet=False, position='right', colormap=<matplotlib.colors.LinearSegmentedColormap object at 0x125418050>, orientation='vertical', symmetric=False, log_norm=False, numeric_format=None, n_ticks=None, label_size=None, width='10%', padding=0.1, norm=None, label='', mappable=None))], _mpl_figure=<Figure size 1200x300 with 4 Axes>, mpl_axis_generated=False, axis_generated=True, ax_orientation='horizontal')




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.893 seconds)


.. _sphx_glr_download_gallery_eigenmodes_2d_plot_bottom_symmetric.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_bottom_symmetric.py <plot_bottom_symmetric.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_bottom_symmetric.ipynb <plot_bottom_symmetric.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
