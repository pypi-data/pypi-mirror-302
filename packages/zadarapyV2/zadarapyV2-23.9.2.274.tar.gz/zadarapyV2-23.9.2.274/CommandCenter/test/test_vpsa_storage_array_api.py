# coding: utf-8

"""
    Command Center operations

    Command Center operations  # noqa: E501

    OpenAPI spec version: 23.09-sp2
    Contact: support@zadarastorage.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import CommandCenter
from CommandCenter.api.vpsa_storage_array_api import VPSAStorageArrayApi  # noqa: E501
from CommandCenter.rest import ApiException


class TestVPSAStorageArrayApi(unittest.TestCase):
    """VPSAStorageArrayApi unit test stubs"""

    def setUp(self):
        self.api = CommandCenter.api.vpsa_storage_array_api.VPSAStorageArrayApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_drives(self):
        """Test case for add_drives

        """
        pass

    def test_add_virtual_network_interface(self):
        """Test case for add_virtual_network_interface

        """
        pass

    def test_add_vpsa_endpoints_conf_for_upload_types(self):
        """Test case for add_vpsa_endpoints_conf_for_upload_types

        """
        pass

    def test_allocate_networks_for_vpsa(self):
        """Test case for allocate_networks_for_vpsa

        """
        pass

    def test_assign_public_ip(self):
        """Test case for assign_public_ip

        """
        pass

    def test_cancel_failover(self):
        """Test case for cancel_failover

        """
        pass

    def test_cancel_scheduled_zsnap(self):
        """Test case for cancel_scheduled_zsnap

        """
        pass

    def test_cancel_upgrade(self):
        """Test case for cancel_upgrade

        """
        pass

    def test_change_cache(self):
        """Test case for change_cache

        """
        pass

    def test_create_new_vpsa_upload_endpoint(self):
        """Test case for create_new_vpsa_upload_endpoint

        """
        pass

    def test_create_vpsa_endpoints_conf_for_upload_types(self):
        """Test case for create_vpsa_endpoints_conf_for_upload_types

        """
        pass

    def test_create_zsnap(self):
        """Test case for create_zsnap

        """
        pass

    def test_delete_vpsa_endpoints_conf_for_upload_types(self):
        """Test case for delete_vpsa_endpoints_conf_for_upload_types

        """
        pass

    def test_delete_vpsa_upload_endpoint(self):
        """Test case for delete_vpsa_upload_endpoint

        """
        pass

    def test_disable_data_reduction_bundle_for_flash_vpsa(self):
        """Test case for disable_data_reduction_bundle_for_flash_vpsa

        """
        pass

    def test_disable_flc(self):
        """Test case for disable_flc

        """
        pass

    def test_disable_pool_migration_for_all_flash_array_vpsa(self):
        """Test case for disable_pool_migration_for_all_flash_array_vpsa

        """
        pass

    def test_enable_data_reduction_bundle_for_flash_vpsa(self):
        """Test case for enable_data_reduction_bundle_for_flash_vpsa

        """
        pass

    def test_enable_flc(self):
        """Test case for enable_flc

        """
        pass

    def test_enable_pool_migration(self):
        """Test case for enable_pool_migration

        """
        pass

    def test_failover_vpsa(self):
        """Test case for failover_vpsa

        """
        pass

    def test_get_all_vpsa_drives(self):
        """Test case for get_all_vpsa_drives

        """
        pass

    def test_get_all_vpsas(self):
        """Test case for get_all_vpsas

        """
        pass

    def test_get_raid_groups(self):
        """Test case for get_raid_groups

        """
        pass

    def test_get_vpsa_capacity_trend(self):
        """Test case for get_vpsa_capacity_trend

        """
        pass

    def test_get_vpsa_endpoint_configs_by_upload_types(self):
        """Test case for get_vpsa_endpoint_configs_by_upload_types

        """
        pass

    def test_get_vpsa_from_cloud(self):
        """Test case for get_vpsa_from_cloud

        """
        pass

    def test_get_vpsa_settings(self):
        """Test case for get_vpsa_settings

        """
        pass

    def test_hibrenate_vpsa(self):
        """Test case for hibrenate_vpsa

        """
        pass

    def test_list_all_vpsa_upload_endpoints(self):
        """Test case for list_all_vpsa_upload_endpoints

        """
        pass

    def test_list_availiable_virtual_nets_to_add_vpsa(self):
        """Test case for list_availiable_virtual_nets_to_add_vpsa

        """
        pass

    def test_list_vpsas_comments(self):
        """Test case for list_vpsas_comments

        """
        pass

    def test_list_vpsas_pools(self):
        """Test case for list_vpsas_pools

        """
        pass

    def test_list_vpsas_vc(self):
        """Test case for list_vpsas_vc

        """
        pass

    def test_list_vpsas_virtual_nets(self):
        """Test case for list_vpsas_virtual_nets

        """
        pass

    def test_manage_vpsa_recycle_bin(self):
        """Test case for manage_vpsa_recycle_bin

        """
        pass

    def test_move_virtual_net_to_diff_sn(self):
        """Test case for move_virtual_net_to_diff_sn

        """
        pass

    def test_purge_vpsa_from_recycle_bin(self):
        """Test case for purge_vpsa_from_recycle_bin

        """
        pass

    def test_release_networks_from_vpsa(self):
        """Test case for release_networks_from_vpsa

        """
        pass

    def test_remove_virtual_network_interface(self):
        """Test case for remove_virtual_network_interface

        """
        pass

    def test_reschedule_upgrade_vpsa(self):
        """Test case for reschedule_upgrade_vpsa

        """
        pass

    def test_restore_vpsa(self):
        """Test case for restore_vpsa

        """
        pass

    def test_resume_upgrade(self):
        """Test case for resume_upgrade

        """
        pass

    def test_unassign_public_ip(self):
        """Test case for unassign_public_ip

        """
        pass

    def test_update_cloud_vpsas_status(self):
        """Test case for update_cloud_vpsas_status

        """
        pass

    def test_update_vpsa_status(self):
        """Test case for update_vpsa_status

        """
        pass

    def test_update_vpsa_upload_endpoint(self):
        """Test case for update_vpsa_upload_endpoint

        """
        pass

    def test_upgrade_vpsa_version(self):
        """Test case for upgrade_vpsa_version

        """
        pass


if __name__ == '__main__':
    unittest.main()
