# coding: utf-8

"""
    Command Center operations

    Command Center operations  # noqa: E501

    OpenAPI spec version: 23.09-sp2
    Contact: support@zadarastorage.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from CommandCenter.configuration import Configuration


class InlineResponse2003PublicIps(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'cloud_id': 'int',
        'vpsa_id': 'int',
        'public_address': 'str',
        'vlan': 'int',
        'label': 'str',
        'netmask': 'str',
        'address': 'str',
        'internal_id': 'int',
        'network_label': 'str',
        'gateway': 'str',
        'created_at': 'str',
        'updated_at': 'str'
    }

    attribute_map = {
        'id': 'id',
        'cloud_id': 'cloud_id',
        'vpsa_id': 'vpsa_id',
        'public_address': 'public_address',
        'vlan': 'vlan',
        'label': 'label',
        'netmask': 'netmask',
        'address': 'address',
        'internal_id': 'internal_id',
        'network_label': 'network_label',
        'gateway': 'gateway',
        'created_at': 'created_at',
        'updated_at': 'updated_at'
    }

    def __init__(self, id=None, cloud_id=None, vpsa_id=None, public_address=None, vlan=None, label=None, netmask=None, address=None, internal_id=None, network_label=None, gateway=None, created_at=None, updated_at=None, _configuration=None):  # noqa: E501
        """InlineResponse2003PublicIps - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._cloud_id = None
        self._vpsa_id = None
        self._public_address = None
        self._vlan = None
        self._label = None
        self._netmask = None
        self._address = None
        self._internal_id = None
        self._network_label = None
        self._gateway = None
        self._created_at = None
        self._updated_at = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if cloud_id is not None:
            self.cloud_id = cloud_id
        if vpsa_id is not None:
            self.vpsa_id = vpsa_id
        if public_address is not None:
            self.public_address = public_address
        if vlan is not None:
            self.vlan = vlan
        if label is not None:
            self.label = label
        if netmask is not None:
            self.netmask = netmask
        if address is not None:
            self.address = address
        if internal_id is not None:
            self.internal_id = internal_id
        if network_label is not None:
            self.network_label = network_label
        if gateway is not None:
            self.gateway = gateway
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at

    @property
    def id(self):
        """Gets the id of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The id of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse2003PublicIps.


        :param id: The id of this InlineResponse2003PublicIps.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def cloud_id(self):
        """Gets the cloud_id of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The cloud_id of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: int
        """
        return self._cloud_id

    @cloud_id.setter
    def cloud_id(self, cloud_id):
        """Sets the cloud_id of this InlineResponse2003PublicIps.


        :param cloud_id: The cloud_id of this InlineResponse2003PublicIps.  # noqa: E501
        :type: int
        """

        self._cloud_id = cloud_id

    @property
    def vpsa_id(self):
        """Gets the vpsa_id of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The vpsa_id of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: int
        """
        return self._vpsa_id

    @vpsa_id.setter
    def vpsa_id(self, vpsa_id):
        """Sets the vpsa_id of this InlineResponse2003PublicIps.


        :param vpsa_id: The vpsa_id of this InlineResponse2003PublicIps.  # noqa: E501
        :type: int
        """

        self._vpsa_id = vpsa_id

    @property
    def public_address(self):
        """Gets the public_address of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The public_address of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: str
        """
        return self._public_address

    @public_address.setter
    def public_address(self, public_address):
        """Sets the public_address of this InlineResponse2003PublicIps.


        :param public_address: The public_address of this InlineResponse2003PublicIps.  # noqa: E501
        :type: str
        """

        self._public_address = public_address

    @property
    def vlan(self):
        """Gets the vlan of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The vlan of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: int
        """
        return self._vlan

    @vlan.setter
    def vlan(self, vlan):
        """Sets the vlan of this InlineResponse2003PublicIps.


        :param vlan: The vlan of this InlineResponse2003PublicIps.  # noqa: E501
        :type: int
        """

        self._vlan = vlan

    @property
    def label(self):
        """Gets the label of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The label of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this InlineResponse2003PublicIps.


        :param label: The label of this InlineResponse2003PublicIps.  # noqa: E501
        :type: str
        """

        self._label = label

    @property
    def netmask(self):
        """Gets the netmask of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The netmask of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: str
        """
        return self._netmask

    @netmask.setter
    def netmask(self, netmask):
        """Sets the netmask of this InlineResponse2003PublicIps.


        :param netmask: The netmask of this InlineResponse2003PublicIps.  # noqa: E501
        :type: str
        """

        self._netmask = netmask

    @property
    def address(self):
        """Gets the address of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The address of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this InlineResponse2003PublicIps.


        :param address: The address of this InlineResponse2003PublicIps.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def internal_id(self):
        """Gets the internal_id of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The internal_id of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: int
        """
        return self._internal_id

    @internal_id.setter
    def internal_id(self, internal_id):
        """Sets the internal_id of this InlineResponse2003PublicIps.


        :param internal_id: The internal_id of this InlineResponse2003PublicIps.  # noqa: E501
        :type: int
        """

        self._internal_id = internal_id

    @property
    def network_label(self):
        """Gets the network_label of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The network_label of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: str
        """
        return self._network_label

    @network_label.setter
    def network_label(self, network_label):
        """Sets the network_label of this InlineResponse2003PublicIps.


        :param network_label: The network_label of this InlineResponse2003PublicIps.  # noqa: E501
        :type: str
        """

        self._network_label = network_label

    @property
    def gateway(self):
        """Gets the gateway of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The gateway of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: str
        """
        return self._gateway

    @gateway.setter
    def gateway(self, gateway):
        """Sets the gateway of this InlineResponse2003PublicIps.


        :param gateway: The gateway of this InlineResponse2003PublicIps.  # noqa: E501
        :type: str
        """

        self._gateway = gateway

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The created_at of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse2003PublicIps.


        :param created_at: The created_at of this InlineResponse2003PublicIps.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this InlineResponse2003PublicIps.  # noqa: E501


        :return: The updated_at of this InlineResponse2003PublicIps.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this InlineResponse2003PublicIps.


        :param updated_at: The updated_at of this InlineResponse2003PublicIps.  # noqa: E501
        :type: str
        """

        self._updated_at = updated_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse2003PublicIps, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2003PublicIps):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse2003PublicIps):
            return True

        return self.to_dict() != other.to_dict()
