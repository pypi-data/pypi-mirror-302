Metadata-Version: 2.1
Name: halkoSVD
Version: 0.2.2
Summary: Fast Python/Cython implementation of the PCAone Halko algorithm
Author-email: Jonas Meisner <meisnerucph@gmail.com>
Project-URL: Homepage, https://github.com/Rosemeis/halkoSVD
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 3 - Alpha
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: cython>3.0.0
Requires-Dist: numpy>2.0.0

# Python implementation of Halko algorithm (PCAone)
This is an implementation of the PCAone Halko algorithm in Python/Cython for genetic data. It takes binary PLINK format (*.bed, *.bim, *.fam) as input. For simplicity, mean imputation is performed for missing data.

It is inspired by the lovely *PCAone* software! Have a look [here](https://github.com/Zilong-Li/PCAone).

## Install and build
```bash
# Install via PyPI
pip3 install halkoSVD

# Download and install in a new Conda environment
conda env create --file environment.yml

# Download and install from GitHub directly
git clone https://github.com/Rosemeis/halkoSVD.git
cd halkoSVD
pip3 install .

# You can now run the program with the `halkoSVD` command
```

## Quick usage
Provide `halkoSVD` with the file prefix of the PLINK files.
```bash
# Check help message of the program
halkoSVD -h

# Extract top 10 PCs with a mini-batch size of 8192 SNPs
halkoSVD --bfile input --threads 32 --pca 10 --batch 8192 --out halko

# Increase power iterations to 16
halkoSVD --bfile input --threads 32 --pca 10 --power 16 --out halko
```
