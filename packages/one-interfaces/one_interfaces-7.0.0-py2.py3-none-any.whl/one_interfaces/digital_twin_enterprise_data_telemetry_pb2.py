# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: digital_twin_enterprise_data_telemetry.proto
# Protobuf Python Version: 4.25.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from . import report_parameter_pb2 as report__parameter__pb2
from . import enum_digital_twin_dataset_output_format_pb2 as enum__digital__twin__dataset__output__format__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n,digital_twin_enterprise_data_telemetry.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x16report_parameter.proto\x1a-enum_digital_twin_dataset_output_format.proto\"\x9e\x02\n\x17\x45nterpriseDataTelemetry\x12\x13\n\x0b\x64\x61taSetName\x18\x01 \x01(\t\x12\x13\n\x0breportTitle\x18\x02 \x01(\t\x12*\n\rparameterSets\x18\x03 \x03(\x0b\x32\x13.ReportParameterSet\x12\x36\n\x14\x64\x61taSetOutputFormats\x18\x04 \x03(\x0e\x32\x18.EnumDatasetOutputFormat\x12.\n\x08template\x18\x05 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x12\n\ndataTables\x18\x06 \x03(\t\x12\x31\n\x0b\x64\x65scription\x18\x07 \x01(\x0b\x32\x1c.google.protobuf.StringValueB\x14\xaa\x02\x11ONE.Models.CSharpb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'digital_twin_enterprise_data_telemetry_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\252\002\021ONE.Models.CSharp'
  _globals['_ENTERPRISEDATATELEMETRY']._serialized_start=152
  _globals['_ENTERPRISEDATATELEMETRY']._serialized_end=438
# @@protoc_insertion_point(module_scope)
