ignore_warnings: False
random_state: 42

target_variable: hitcall_c # hitcall  and hitcall_c
activity_threshold: 0.90 # 0.50 and 0.90

train_test_split_ratio: 0.20

apply:
  n_cls_0: 25
  n_cls_1: 5
  oversampling: 1 # 0 and 1
  feature_selection: 1 
  remove_lowvariance_features: 0 # 0 and 1    
  remove_highcorrelation_features: 0  # 0 and 1 
  threshold_moving: 1
  ice_omit_filtering: 1 # 0 and 1
  sirius_quality_filtering: 0 # 0 and 1

feature_selection:
  variance_threshold: 0.01
  correlation_threshold: 0.90

threshold_moving:
  default_threshold: 0.5
  cost_tpr: 2 # For optimal threshold moving: A higher weight_tpr value gives more weight to maximizing true positive rate.
  cost_fpr: 1 # For optimal threshold moving: A higher weight_tpr value gives more weight to minimizing false negative rate.
  target_tpr: 0.5 # For fixed threshold evaluation at some target True Positive Rate
  target_tnr: 0.5 # For fixed threshold evaluation at some target False Positive Rate

grid_search_cv:
  n_splits: 5 
  n_repeats: 3 
  scoring: f_beta 
  # recall_macro, f1, roc_auc, accuracy
  # The F1 score is the harmonic mean of the precision and recall. The more generic F_beta score applies additional weights, valuing one of precision or recall more than the other.
  beta: 0.5 # 0.5 and 2
  # F-beta = (1 + beta^2) * (precision * recall) / ((beta^2 * precision) + recall),  1 = F1. 
  # 2 weights recall 2 x higher than precision,
  # 0.5 weights precision 2 x higher than recall
