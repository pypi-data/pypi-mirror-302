# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: quantity_type.proto
# Protobuf Python Version: 4.25.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import record_auditinfo_pb2 as record__auditinfo__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13quantity_type.proto\x1a\x16record_auditinfo.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\xc7\x02\n\x0cQuantityType\x12\n\n\x02Id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x31\n\x0b\x64\x65scription\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x0e\n\x06symbol\x18\x04 \x01(\t\x12\x13\n\x0b\x63onvertable\x18\x05 \x01(\x08\x12\x17\n\x0fstorageUnitName\x18\x06 \x01(\t\x12\x31\n\x0bi18NKeyName\x18\x07 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x38\n\x12i18NKeyDescription\x18\x08 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x14\n\x0csprintNumber\x18\t \x01(\x05\x12)\n\x0frecordAuditInfo\x18\x63 \x01(\x0b\x32\x10.RecordAuditInfo\"-\n\rQuantityTypes\x12\x1c\n\x05items\x18\x01 \x03(\x0b\x32\r.QuantityTypeB\x14\xaa\x02\x11ONE.Models.CSharpb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'quantity_type_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\252\002\021ONE.Models.CSharp'
  _globals['_QUANTITYTYPE']._serialized_start=80
  _globals['_QUANTITYTYPE']._serialized_end=407
  _globals['_QUANTITYTYPES']._serialized_start=409
  _globals['_QUANTITYTYPES']._serialized_end=454
# @@protoc_insertion_point(module_scope)
