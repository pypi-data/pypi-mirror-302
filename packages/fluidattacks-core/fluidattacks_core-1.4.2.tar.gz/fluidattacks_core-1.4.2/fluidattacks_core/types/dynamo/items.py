"""
This file was generated by a script. Do not edit manually.
If you need to make changes, please run
m . /integrates/db/dynamodb/schemas/types

More information at
https://dev.fluidattacks.com/components/integrates/database/database-design
"""

# pylint: disable=too-many-lines

from decimal import (
    Decimal,
)
from typing import (
    Any,
    NotRequired,
    TypedDict,
)


class AWSMarketplaceSubscriptionState(TypedDict):
    entitlements: list[Any]
    has_free_trial: bool
    modified_date: str
    status: str
    private_offer_id: NotRequired[str]


class AwsMarketplaceSubscriptionMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: aws_marketplace_subscription_metadata
    """

    created_at: str
    state: AWSMarketplaceSubscriptionState
    aws_account_id: NotRequired[str]
    pk: str
    user: NotRequired[str]
    sk: str


class ComplianceUnreliableIndicatorsItem(TypedDict):
    """
    Table: integrates_vms
    Facet: compliance_unreliable_indicators
    """

    standards: NotRequired[list[Any]]
    sk: str
    pk: str


class CredentialsState(TypedDict):
    modified_by: str
    modified_date: str
    name: str
    type: str
    is_pat: NotRequired[bool]
    owner: str
    azure_organization: NotRequired[str]


class Secret(TypedDict):
    pass


class CredentialsMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: credentials_metadata
    """

    id: str
    organization_id: str
    state: CredentialsState
    pk: str
    sk: str
    pk_2: str
    secret: Secret
    sk_2: str


class DraftRejection(TypedDict):
    other: str
    reasons: set[str]
    rejected_by: str
    rejection_date: str
    submitted_by: str


class EventCommentItem(TypedDict):
    """
    Table: integrates_vms
    Facet: event_comment
    """

    email: str
    parent_id: str
    content: str
    id: str
    group_name: str
    creation_date: str
    full_name: str
    pk: str
    event_id: str
    sk: str


class EventEvidence(TypedDict):
    file_name: str
    modified_date: str


class EventEvidences(TypedDict):
    file_1: NotRequired[EventEvidence]
    image_1: NotRequired[EventEvidence]
    image_2: NotRequired[EventEvidence]
    image_3: NotRequired[EventEvidence]
    image_4: NotRequired[EventEvidence]
    image_5: NotRequired[EventEvidence]
    image_6: NotRequired[EventEvidence]


class EventHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: event_historic_state
    """

    status: str
    modified_date: str
    modified_by: str
    pk: str
    comment_id: NotRequired[str]
    sk: str


class EventState(TypedDict):
    status: str
    modified_date: str
    modified_by: str
    comment_id: NotRequired[str]


class EventUnreliableIndicators(TypedDict):
    unreliable_solving_date: NotRequired[str]


class EventMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: event_metadata
    """

    client: str
    created_by: str
    created_date: str
    description: str
    event_date: str
    evidences: EventEvidences
    group_name: str
    hacker: str
    id: str
    state: EventState
    type: str
    root_id: NotRequired[str]
    unreliable_indicators: NotRequired[EventUnreliableIndicators]
    pk: str
    sk: str
    pk_2: str
    n_holds: NotRequired[int]
    sk_2: str


class ExecutionVulnerabilities(TypedDict):
    num_of_accepted_vulnerabilities: int
    num_of_open_vulnerabilities: int
    num_of_closed_vulnerabilities: int
    num_of_open_managed_vulnerabilities: int
    num_of_open_unmanaged_vulnerabilities: int
    accepted: NotRequired[list[Any]]
    closed: NotRequired[list[Any]]
    num_of_vulns_in_accepted_exploits: NotRequired[int]
    num_of_vulns_in_exploits: NotRequired[int]
    num_of_vulns_in_integrates_exploits: NotRequired[int]
    open: NotRequired[list[Any]]


class FindingCommentItem(TypedDict):
    """
    Table: integrates_vms
    Facet: finding_comment
    """

    finding_id: str
    full_name: str
    comment_type: str
    parent_id: str
    id: str
    creation_date: str
    content: str
    pk: str
    email: str
    sk: str


class FindingEvidence(TypedDict):
    description: str
    modified_date: str
    url: str
    is_draft: NotRequired[bool]


class FindingEvidences(TypedDict):
    animation: NotRequired[FindingEvidence]
    evidence1: NotRequired[FindingEvidence]
    evidence2: NotRequired[FindingEvidence]
    evidence3: NotRequired[FindingEvidence]
    evidence4: NotRequired[FindingEvidence]
    evidence5: NotRequired[FindingEvidence]
    exploitation: NotRequired[FindingEvidence]
    records: NotRequired[FindingEvidence]


class FindingHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: finding_historic_state
    """

    modified_by: str
    modified_date: str
    source: str
    status: str
    rejection: NotRequired[DraftRejection]
    pk: str
    justification: str
    sk: str


class FindingHistoricVerificationItem(TypedDict):
    """
    Table: integrates_vms
    Facet: finding_historic_verification
    """

    comment_id: str
    modified_by: str
    modified_date: str
    status: str
    pk: str
    vulnerability_ids: set[str]
    sk: str


class FindingIdItem(TypedDict):
    """
    Table: integrates_vms
    Facet: finding_id
    """

    pk: str
    sk: str


class SeverityScore(TypedDict):
    base_score: Decimal
    temporal_score: Decimal
    cvss_v3: str
    cvssf: Decimal
    cvssf_v4: Decimal
    threat_score: Decimal
    cvss_v4: str


class FindingState(TypedDict):
    modified_by: str
    modified_date: str
    source: str
    status: str
    rejection: NotRequired[DraftRejection]
    justification: str


class FindingVerificationSummary(TypedDict):
    requested: int
    on_hold: int
    verified: int


class FindingTreatmentSummary(TypedDict):
    accepted: int
    accepted_undefined: int
    in_progress: int
    untreated: int


class FindingVulnerabilitiesSummary(TypedDict):
    closed: NotRequired[int]
    open: NotRequired[int]
    submitted: NotRequired[int]
    rejected: NotRequired[int]
    open_critical: NotRequired[int]
    open_high: NotRequired[int]
    open_low: NotRequired[int]
    open_medium: NotRequired[int]
    open_critical_v3: NotRequired[int]
    open_high_v3: NotRequired[int]
    open_low_v3: NotRequired[int]
    open_medium_v3: NotRequired[int]


class FindingUnreliableIndicators(TypedDict):
    unreliable_status: str
    unreliable_verification_summary: FindingVerificationSummary
    unreliable_where: str
    closed_vulnerabilities: NotRequired[int]
    max_open_epss: NotRequired[int]
    max_open_root_criticality: NotRequired[str]
    max_open_severity_score: NotRequired[Decimal]
    max_open_severity_score_v4: NotRequired[Decimal]
    newest_vulnerability_report_date: NotRequired[str]
    oldest_vulnerability_report_date: NotRequired[str]
    open_vulnerabilities: NotRequired[int]
    rejected_vulnerabilities: NotRequired[int]
    submitted_vulnerabilities: NotRequired[int]
    total_open_cvssf: NotRequired[Decimal]
    total_open_cvssf_v4: NotRequired[Decimal]
    total_open_priority: NotRequired[int]
    treatment_summary: NotRequired[FindingTreatmentSummary]
    unreliable_newest_vulnerability_report_date: NotRequired[str]
    unreliable_oldest_open_vulnerability_report_date: NotRequired[str]
    unreliable_oldest_vulnerability_report_date: NotRequired[str]
    unreliable_total_open_cvssf: NotRequired[Decimal]
    verification_summary: NotRequired[FindingVerificationSummary]
    vulnerabilities_summary: NotRequired[FindingVulnerabilitiesSummary]


class FindingVerification(TypedDict):
    comment_id: str
    modified_by: str
    modified_date: str
    status: str
    vulnerability_ids: set[str]


class FindingMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: finding_metadata
    """

    pk: str
    group_name: str
    id: str
    severity_score: SeverityScore
    state: FindingState
    title: str
    attack_vector_description: str
    description: str
    evidences: FindingEvidences
    recommendation: str
    requirements: str
    sorts: str
    threat: str
    cvss_version: str
    unfulfilled_requirements: list[Any]
    unreliable_indicators: FindingUnreliableIndicators
    min_time_to_remediate: NotRequired[int]
    creation: NotRequired[FindingState]
    rejected_vulnerabilities: NotRequired[int]
    submitted_vulnerabilities: NotRequired[int]
    sk: str
    verification: NotRequired[FindingVerification]


class ForcesExecutionItem(TypedDict):
    """
    Table: integrates_vms
    Facet: forces_execution
    """

    pk: str
    sk: str
    pk_2: str
    branch: str
    commit: str
    execution_date: str
    exit_code: str
    group_name: str
    id: str
    kind: str
    origin: str
    repo: str
    strictness: str
    vulnerabilities: ExecutionVulnerabilities
    days_until_it_breaks: NotRequired[int]
    grace_period: NotRequired[int]
    sk_2: str
    severity_threshold: NotRequired[Decimal]


class GitRootCloning(TypedDict):
    modified_by: str
    modified_date: str
    reason: str
    status: str
    commit: NotRequired[str]
    commit_date: NotRequired[str]
    failed_count: NotRequired[int]
    first_failed_cloning: NotRequired[str]
    first_successful_cloning: NotRequired[str]
    last_successful_cloning: NotRequired[str]
    successful_count: NotRequired[int]


class GitRootHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: git_root_historic_state
    """

    pk: str
    branch: str
    environment: str
    gitignore: list[Any]
    includes_health_check: bool
    modified_by: str
    modified_date: str
    nickname: str
    status: str
    url: str
    credential_id: NotRequired[str]
    criticality: NotRequired[str]
    environment_urls: NotRequired[list[Any]]
    other: NotRequired[str]
    reason: NotRequired[str]
    use_egress: NotRequired[bool]
    use_vpn: NotRequired[bool]
    sk: str
    use_ztna: NotRequired[bool]


class MachineExecutionsDate(TypedDict):
    apk: str
    cspm: str
    dast: str
    sast: str
    sca: str


class GitRootMachine(TypedDict):
    modified_by: str
    modified_date: str
    reason: str
    status: str
    commit: NotRequired[str]
    commit_date: NotRequired[str]
    execution_id: NotRequired[str]
    last_executions_date: NotRequired[MachineExecutionsDate]


class GitRootState(TypedDict):
    branch: str
    environment: str
    gitignore: list[Any]
    includes_health_check: bool
    modified_by: str
    modified_date: str
    nickname: str
    status: str
    url: str
    credential_id: NotRequired[str]
    criticality: NotRequired[str]
    environment_urls: NotRequired[list[Any]]
    other: NotRequired[str]
    reason: NotRequired[str]
    use_egress: NotRequired[bool]
    use_vpn: NotRequired[bool]
    use_ztna: NotRequired[bool]


class GitRootRebase(TypedDict):
    modified_by: str
    modified_date: str
    reason: str
    status: str
    commit: NotRequired[str]
    commit_date: NotRequired[str]
    last_successful_rebase: NotRequired[str]


class GitRootToeLines(TypedDict):
    modified_by: str
    modified_date: str
    reason: str
    status: str
    commit: NotRequired[str]
    commit_date: NotRequired[str]
    last_successful_refresh: NotRequired[str]


class RootUnreliableIndicators(TypedDict):
    unreliable_code_languages: NotRequired[list[Any]]
    unreliable_last_status_update: NotRequired[str]
    nofluid_quantity: NotRequired[int]


class GitRootMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: git_root_metadata
    """

    pk: str
    sk: str
    pk_2: str
    cloning: GitRootCloning
    created_by: str
    created_date: str
    state: GitRootState
    type: str
    machine: NotRequired[GitRootMachine]
    rebase: NotRequired[GitRootRebase]
    toe_lines: NotRequired[GitRootToeLines]
    sk_2: str
    unreliable_indicators: RootUnreliableIndicators


class GroupConfirmDeletion(TypedDict):
    is_used: bool
    url_token: str


class GroupInvitation(TypedDict):
    is_used: bool
    role: str
    url_token: str
    responsibility: NotRequired[str]


class GroupAccessState(TypedDict):
    modified_date: NotRequired[str]
    modified_by: NotRequired[str]
    confirm_deletion: NotRequired[GroupConfirmDeletion]
    has_access: bool
    invitation: NotRequired[GroupInvitation]
    responsibility: NotRequired[str]
    role: NotRequired[str]


class GroupAccessItem(TypedDict):
    """
    Table: integrates_vms
    Facet: group_access
    """

    pk: str
    sk: str
    pk_2: str
    domain: NotRequired[str]
    email: str
    group_name: str
    state: GroupAccessState
    sk_2: str
    expiration_time: NotRequired[int]


class GroupCommentItem(TypedDict):
    """
    Table: integrates_vms
    Facet: group_comment
    """

    pk: str
    email: str
    parent_id: str
    content: str
    id: str
    group_name: str
    creation_date: str
    sk: str
    full_name: NotRequired[str]


class GroupGitLabIssues(TypedDict):
    redirect_uri: str
    refresh_token: str
    assignee_ids: NotRequired[list[Any]]
    connection_date: NotRequired[str]
    gitlab_project: NotRequired[str]
    issue_automation_enabled: NotRequired[bool]
    labels: NotRequired[list[Any]]


class GroupHistoricAccessItem(TypedDict):
    """
    Table: integrates_vms
    Facet: group_historic_access
    """

    pk: str
    domain: NotRequired[str]
    email: str
    group_name: str
    state: GroupAccessState
    sk: str
    expiration_time: NotRequired[int]


class GroupHistoricPoliciesItem(TypedDict):
    """
    Table: integrates_vms
    Facet: group_historic_policies
    """

    pk: str
    modified_date: str
    modified_by: str
    days_until_it_breaks: NotRequired[int]
    inactivity_period: NotRequired[int]
    max_acceptance_days: NotRequired[int]
    max_acceptance_severity: NotRequired[Decimal]
    max_number_acceptances: NotRequired[int]
    min_acceptance_severity: NotRequired[Decimal]
    min_breaking_severity: NotRequired[Decimal]
    sk: str
    vulnerability_grace_period: NotRequired[int]


class GroupHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: group_historic_state
    """

    pk: str
    has_advanced: bool
    has_essential: bool
    managed: str
    modified_by: str
    modified_date: str
    status: str
    tier: str
    type: str
    comments: NotRequired[str]
    justification: NotRequired[str]
    payment_id: NotRequired[str]
    pending_deletion_date: NotRequired[str]
    service: NotRequired[str]
    sk: str
    tags: NotRequired[list[Any]]


class GroupIdItem(TypedDict):
    """
    Table: integrates_vms
    Facet: group_id
    """

    pk: str
    sk: str


class GroupState(TypedDict):
    has_advanced: bool
    has_essential: bool
    managed: str
    modified_by: str
    modified_date: str
    status: str
    tier: str
    type: str
    comments: NotRequired[str]
    justification: NotRequired[str]
    payment_id: NotRequired[str]
    pending_deletion_date: NotRequired[str]
    service: NotRequired[str]
    tags: NotRequired[list[Any]]


class GroupPolicies(TypedDict):
    modified_date: str
    modified_by: str
    days_until_it_breaks: NotRequired[int]
    inactivity_period: NotRequired[int]
    max_acceptance_days: NotRequired[int]
    max_acceptance_severity: NotRequired[Decimal]
    max_number_acceptances: NotRequired[int]
    min_acceptance_severity: NotRequired[Decimal]
    min_breaking_severity: NotRequired[Decimal]
    vulnerability_grace_period: NotRequired[int]


class GroupMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: group_metadata
    """

    pk: str
    created_by: str
    created_date: str
    description: str
    language: str
    name: str
    organization_id: str
    state: GroupState
    agent_token: NotRequired[str]
    azure_issues: NotRequired[str]
    business_id: NotRequired[str]
    business_name: NotRequired[str]
    context: NotRequired[str]
    disambiguation: NotRequired[str]
    files: NotRequired[list[Any]]
    gitlab_issues: NotRequired[GroupGitLabIssues]
    policies: NotRequired[GroupPolicies]
    sprint_duration: NotRequired[int]
    sk: str
    sprint_start_date: NotRequired[str]


class GroupTreatmentSummary(TypedDict):
    accepted: int
    accepted_undefined: int
    in_progress: int
    untreated: int


class GroupUnreliableIndicatorsItem(TypedDict):
    """
    Table: integrates_vms
    Facet: group_unreliable_indicators
    """

    pk: str
    closed_vulnerabilities: NotRequired[int]
    exposed_over_time_cvssf: NotRequired[list[Any]]
    exposed_over_time_month_cvssf: NotRequired[list[Any]]
    exposed_over_time_year_cvssf: NotRequired[list[Any]]
    last_closed_vulnerability_days: NotRequired[int]
    last_closed_vulnerability_finding: NotRequired[str]
    max_open_severity: NotRequired[Decimal]
    max_open_severity_finding: NotRequired[str]
    max_severity: NotRequired[Decimal]
    mean_remediate: NotRequired[Decimal]
    mean_remediate_critical_severity: NotRequired[Decimal]
    mean_remediate_high_severity: NotRequired[Decimal]
    mean_remediate_low_severity: NotRequired[Decimal]
    mean_remediate_medium_severity: NotRequired[Decimal]
    open_findings: NotRequired[int]
    open_vulnerabilities: NotRequired[int]
    remediated_over_time: NotRequired[list[Any]]
    remediated_over_time_30: NotRequired[list[Any]]
    remediated_over_time_90: NotRequired[list[Any]]
    remediated_over_time_cvssf: NotRequired[list[Any]]
    remediated_over_time_cvssf_30: NotRequired[list[Any]]
    remediated_over_time_cvssf_90: NotRequired[list[Any]]
    remediated_over_time_month: NotRequired[list[Any]]
    remediated_over_time_month_cvssf: NotRequired[list[Any]]
    remediated_over_time_year: NotRequired[list[Any]]
    remediated_over_time_year_cvssf: NotRequired[list[Any]]
    treatment_summary: NotRequired[GroupTreatmentSummary]
    code_languages: NotRequired[list[Any]]
    nofluid_quantity: NotRequired[int]
    sk: str
    unfulfilled_standards: NotRequired[list[Any]]


class HookState(TypedDict):
    modified_by: str
    modified_date: str
    status: str


class HookMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: hook_metadata
    """

    pk: str
    sk: str
    pk_2: str
    name: NotRequired[str]
    entry_point: str
    id: str
    group_name: str
    token: str
    token_header: str
    hook_events: set[str]
    sk_2: str
    state: HookState


class IpRootHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: ip_root_historic_state
    """

    pk: str
    modified_by: str
    modified_date: str
    status: str
    nickname: str
    address: str
    reason: NotRequired[str]
    sk: str
    other: NotRequired[str]


class IpRootState(TypedDict):
    modified_by: str
    modified_date: str
    status: str
    nickname: str
    address: str
    reason: NotRequired[str]
    other: NotRequired[str]


class IpRootMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: ip_root_metadata
    """

    pk: str
    sk: str
    pk_2: str
    type: str
    created_date: str
    state: IpRootState
    created_by: str
    sk_2: str
    unreliable_indicators: NotRequired[list[Any]]


class JiraInstallItem(TypedDict):
    """
    Table: integrates_vms
    Facet: jira_install
    """

    pk: str
    associated_email: str
    base_url: str
    client_key: str
    cloud_id: str
    description: str
    display_url: str
    event_type: str
    installation_id: str
    key: str
    plugins_version: str
    product_type: str
    public_key: str
    server_version: str
    sk: str
    shared_secret: str


class MailmapEntryItem(TypedDict):
    """
    Table: integrates_vms
    Facet: mailmap_entry
    """

    pk: str
    sk: str
    pk_2: str
    mailmap_entry_name: str
    mailmap_entry_email: str
    mailmap_entry_created_at: NotRequired[str]
    sk_2: str
    mailmap_entry_updated_at: NotRequired[str]


class MailmapSubentryItem(TypedDict):
    """
    Table: integrates_vms
    Facet: mailmap_subentry
    """

    pk: str
    sk: str
    pk_2: str
    mailmap_subentry_name: str
    mailmap_subentry_email: str
    mailmap_subentry_created_at: NotRequired[str]
    sk_2: str
    mailmap_subentry_updated_at: NotRequired[str]


class NotificationsParameters(TypedDict):
    min_severity: Decimal


class NotificationsPreferences(TypedDict):
    email: list[Any]
    sms: list[Any]
    available: NotRequired[list[Any]]
    parameters: NotRequired[NotificationsParameters]


class OrgFindingPolicyHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: org_finding_policy_historic_state
    """

    pk: str
    status: str
    sk: str
    modified_by: str
    modified_date: str


class OrgFindingPolicyState(TypedDict):
    status: str
    modified_by: str
    modified_date: str


class OrgFindingPolicyMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: org_finding_policy_metadata
    """

    pk: str
    name: str
    tags: NotRequired[list[Any]]
    treatment_acceptance: str
    sk: str
    state: OrgFindingPolicyState


class OrganizationInvitation(TypedDict):
    is_used: bool
    role: str
    url_token: str


class OrganizationAccessState(TypedDict):
    modified_date: str
    modified_by: str
    has_access: NotRequired[bool]
    invitation: NotRequired[OrganizationInvitation]
    role: NotRequired[str]


class OrganizationAccessItem(TypedDict):
    """
    Table: integrates_vms
    Facet: organization_access
    """

    pk: str
    email: str
    organization_id: str
    sk: str
    state: OrganizationAccessState


class OrganizationBilling(TypedDict):
    customer_email: str
    customer_id: str
    subscription_id: NotRequired[int]


class OrganizationHistoricPoliciesItem(TypedDict):
    """
    Table: integrates_vms
    Facet: organization_historic_policies
    """

    pk: str
    modified_date: str
    modified_by: str
    days_until_it_breaks: NotRequired[int]
    inactivity_period: NotRequired[int]
    max_acceptance_days: NotRequired[int]
    max_acceptance_severity: NotRequired[Decimal]
    max_number_acceptances: NotRequired[int]
    min_acceptance_severity: NotRequired[Decimal]
    min_breaking_severity: NotRequired[Decimal]
    sk: str
    vulnerability_grace_period: NotRequired[int]


class OrganizationHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: organization_historic_state
    """

    pk: str
    aws_external_id: str
    sk: str
    status: str
    modified_by: str
    modified_date: str
    pending_deletion_date: NotRequired[str]


class Policies(TypedDict):
    modified_date: str
    modified_by: str
    days_until_it_breaks: NotRequired[int]
    inactivity_period: NotRequired[int]
    max_acceptance_days: NotRequired[int]
    max_acceptance_severity: NotRequired[Decimal]
    max_number_acceptances: NotRequired[int]
    min_acceptance_severity: NotRequired[Decimal]
    min_breaking_severity: NotRequired[Decimal]
    vulnerability_grace_period: NotRequired[int]


class OrganizationState(TypedDict):
    aws_external_id: str
    status: str
    modified_by: str
    modified_date: str
    pending_deletion_date: NotRequired[str]


class OrganizationMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: organization_metadata
    """

    pk: str
    sk: str
    pk_2: str
    billing_customer: NotRequired[str]
    billing_information: NotRequired[OrganizationBilling]
    country: str
    created_by: str
    created_date: NotRequired[str]
    id: str
    name: str
    payment_methods: NotRequired[list[Any]]
    policies: Policies
    priority_policies: NotRequired[list[Any]]
    state: OrganizationState
    sk_2: str
    vulnerabilities_pathfile: NotRequired[str]


class OrganizationUnreliableIndicatorsItem(TypedDict):
    """
    Table: integrates_vms
    Facet: organization_unreliable_indicators
    """

    pk: str
    compliance_level: NotRequired[Decimal]
    compliance_weekly_trend: NotRequired[Decimal]
    estimated_days_to_full_compliance: NotRequired[Decimal]
    missed_repositories: NotRequired[int]
    covered_repositories: NotRequired[int]
    missed_authors: NotRequired[int]
    covered_authors: NotRequired[int]
    has_ztna_roots: NotRequired[bool]
    sk: str
    standard_compliances: NotRequired[list[Any]]


class OrganizationUnreliableIntegrationRepositoryItem(TypedDict):
    """
    Table: integrates_vms
    Facet: organization_unreliable_integration_repository
    """

    pk: str
    sk: str
    pk_2: str
    url: str
    branch: str
    name: NotRequired[str]
    credential_id: NotRequired[str]
    last_commit_date: NotRequired[str]
    commit_count: NotRequired[int]
    sk_2: str
    branches: NotRequired[list[Any]]


class PortfolioUnreliableIndicators(TypedDict):
    mean_remediate: NotRequired[Decimal]
    max_severity: NotRequired[Decimal]
    max_open_severity: NotRequired[Decimal]
    mean_remediate_critical_severity: NotRequired[Decimal]
    last_closing_date: NotRequired[int]
    mean_remediate_high_severity: NotRequired[Decimal]
    mean_remediate_low_severity: NotRequired[Decimal]
    mean_remediate_medium_severity: NotRequired[Decimal]


class PortfolioMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: portfolio_metadata
    """

    pk: str
    id: str
    unreliable_indicators: PortfolioUnreliableIndicators
    organization_name: str
    sk: str
    groups: set[str]


class RootDockerImageHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: root_docker_image_historic_state
    """

    pk: str
    modified_by: str
    modified_date: str
    status: str
    size: int
    history: list[Any]
    layers: set[str]
    credential_id: NotRequired[str]
    digest: NotRequired[str]
    sk: str
    include: NotRequired[bool]


class RootDockerImageState(TypedDict):
    modified_by: str
    modified_date: str
    status: str
    size: int
    history: list[Any]
    layers: set[str]
    credential_id: NotRequired[str]
    digest: NotRequired[str]
    include: NotRequired[bool]


class RootDockerImageItem(TypedDict):
    """
    Table: integrates_vms
    Facet: root_docker_image
    """

    pk: str
    sk: str
    pk_2: str
    group_name: str
    root_id: str
    state: RootDockerImageState
    created_at: str
    sk_2: str
    created_by: str


class RootDockerImageLayerItem(TypedDict):
    """
    Table: integrates_vms
    Facet: root_docker_image_layer
    """

    pk: str
    digest: str
    media_type: str
    sk: str
    size: int


class SecretState(TypedDict):
    owner: str
    modified_by: str
    modified_date: str
    description: NotRequired[str]


class RootEnvironmentSecretItem(TypedDict):
    """
    Table: integrates_vms
    Facet: root_environment_secret
    """

    pk: str
    description: NotRequired[str]
    created_at: str
    key: str
    value: str
    sk: str
    state: SecretState


class RootEnvironmentUrlState(TypedDict):
    modified_by: str
    modified_date: str
    status: str
    include: bool
    url_type: str
    cloud_name: NotRequired[str]
    use_egress: NotRequired[bool]
    use_vpn: NotRequired[bool]
    use_ztna: NotRequired[bool]


class RootEnvironmentUrlItem(TypedDict):
    """
    Table: integrates_vms
    Facet: root_environment_url
    """

    pk: str
    sk: str
    pk_2: str
    id: str
    group_name: str
    root_id: str
    url: str
    state: RootEnvironmentUrlState
    created_at: NotRequired[str]
    sk_2: str
    created_by: NotRequired[str]


class RootSecretItem(TypedDict):
    """
    Table: integrates_vms
    Facet: root_secret
    """

    pk: str
    created_at: str
    key: str
    value: str
    sk: str
    state: SecretState


class Snippet(TypedDict):
    content: str
    offset: int
    line: NotRequired[int]
    column: NotRequired[int]
    columns_per_line: NotRequired[int]
    line_context: NotRequired[int]
    wrap: NotRequired[bool]
    show_line_numbers: NotRequired[bool]
    highlight_line_number: NotRequired[bool]


class StakeholderHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: stakeholder_historic_state
    """

    pk: str
    modified_date: NotRequired[str]
    modified_by: NotRequired[str]
    notifications_preferences: NotRequired[NotificationsPreferences]
    sk: str
    trusted_devices: NotRequired[list[Any]]


class StakeholderLogin(TypedDict):
    modified_by: str
    modified_date: str
    expiration_time: int
    browser: str
    country_code: str
    device: str
    ip_address: str
    provider: str
    subject: str


class StakeholderPhone(TypedDict):
    country_code: str
    calling_country_code: str
    national_number: str


class StakeholderSessionToken(TypedDict):
    jti: str
    state: str


class StakeholderState(TypedDict):
    modified_date: NotRequired[str]
    modified_by: NotRequired[str]
    notifications_preferences: NotRequired[NotificationsPreferences]
    trusted_devices: NotRequired[list[Any]]


class StakeholderTours(TypedDict):
    new_group: bool
    new_root: bool
    new_risk_exposure: bool
    welcome: bool


class StakeholderMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: stakeholder_metadata
    """

    pk: str
    sk: str
    pk_2: str
    access_tokens: NotRequired[list[Any]]
    aws_customer_id: NotRequired[str]
    email: NotRequired[str]
    enrolled: bool
    first_name: NotRequired[str]
    is_concurrent_session: NotRequired[bool]
    is_registered: bool
    jira_client_key: NotRequired[str]
    last_login_date: NotRequired[str]
    last_name: NotRequired[str]
    legal_remember: NotRequired[bool]
    login: NotRequired[StakeholderLogin]
    phone: NotRequired[StakeholderPhone]
    registration_date: NotRequired[str]
    role: NotRequired[str]
    session_token: NotRequired[StakeholderSessionToken]
    state: NotRequired[StakeholderState]
    sk_2: str
    tours: NotRequired[StakeholderTours]


class ToeInputState(TypedDict):
    be_present: bool
    modified_date: str
    attacked_at: NotRequired[str]
    attacked_by: NotRequired[str]
    be_present_until: NotRequired[str]
    first_attack_at: NotRequired[str]
    has_vulnerabilities: NotRequired[bool]
    modified_by: NotRequired[str]
    seen_at: NotRequired[str]
    seen_first_time_by: NotRequired[str]


class ToeInputMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: toe_input_metadata
    """

    pk: str
    sk: str
    pk_2: str
    component: str
    entry_point: str
    group_name: str
    root_id: str
    sk_2: str
    state: ToeInputState


class ToeLinesState(TypedDict):
    attacked_by: str
    attacked_lines: int
    be_present: bool
    comments: str
    has_vulnerabilities: bool
    last_author: str
    last_commit: str
    loc: int
    modified_by: str
    modified_date: str
    seen_at: str
    sorts_risk_level: int
    last_commit_date: NotRequired[str]
    attacked_at: NotRequired[str]
    be_present_until: NotRequired[str]
    first_attack_at: NotRequired[str]
    sorts_priority_factor: NotRequired[int]
    sorts_risk_level_date: NotRequired[str]
    sorts_suggestions: NotRequired[list[Any]]


class ToeLinesMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: toe_lines_metadata
    """

    pk: str
    sk: str
    pk_2: str
    group_name: str
    filename: str
    root_id: str
    state: ToeLinesState
    sk_2: str
    seen_first_time_by: NotRequired[str]


class ToePackageHealthMetadata(TypedDict):
    latest_version_created_at: NotRequired[str]
    latest_version: NotRequired[str]
    authors: NotRequired[str]


class ToePackageState(TypedDict):
    modified_by: str
    modified_date: str
    be_present: bool
    language: str
    platform: str
    id: str
    package_url: str
    url: NotRequired[str]
    vulnerable: NotRequired[bool]
    vulnerability_ids: set[str]


class ToePackagesImageItem(TypedDict):
    """
    Table: integrates_vms
    Facet: toe_packages_vulnerability
    """

    pk: str
    sk: str


class ToePackagesMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: toe_packages_metadata
    """

    pk: str
    sk: str
    pk_2: str
    name: str
    version: str
    path: str
    locations: NotRequired[list[Any]]
    group_name: str
    root_id: str
    sk_2: str
    state: ToePackageState


class ToePackagesMetadataNewItem(TypedDict):
    """
    Table: integrates_vms
    Facet: toe_packages_metadata_new
    """

    pk: str
    sk: str
    pk_2: str
    be_present: bool
    found_by: NotRequired[str]
    group_name: str
    health_metadata: NotRequired[ToePackageHealthMetadata]
    id: str
    language: str
    licenses: NotRequired[list[Any]]
    locations: NotRequired[list[Any]]
    modified_date: str
    name: str
    outdated: NotRequired[bool]
    package_advisories: NotRequired[list[Any]]
    package_url: NotRequired[str]
    platform: NotRequired[str]
    root_id: str
    type_: str
    url: NotRequired[str]
    version: str
    sk_2: str
    vulnerable: NotRequired[bool]


class ToePortState(TypedDict):
    attacked_at: NotRequired[str]
    attacked_by: NotRequired[str]
    be_present: bool
    be_present_until: NotRequired[str]
    first_attack_at: NotRequired[str]
    has_vulnerabilities: bool
    modified_by: NotRequired[str]
    modified_date: NotRequired[str]
    seen_at: NotRequired[str]
    seen_first_time_by: NotRequired[str]


class ToePortMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: toe_port_metadata
    """

    pk: str
    sk: str
    pk_2: str
    address: str
    port: str
    group_name: str
    root_id: str
    sk_2: str
    state: ToePortState


class TrialMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: trial_metadata
    """

    pk: str
    email: str
    completed: bool
    extension_days: int
    extension_date: NotRequired[str]
    start_date: NotRequired[str]
    sk: str
    reason: NotRequired[str]


class UrlRootHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: url_root_historic_state
    """

    pk: str
    host: str
    modified_by: str
    modified_date: str
    nickname: str
    path: str
    port: str
    protocol: str
    status: str
    excluded_sub_paths: NotRequired[list[Any]]
    other: NotRequired[str]
    query: NotRequired[str]
    sk: str
    reason: NotRequired[str]


class UrlRootState(TypedDict):
    host: str
    modified_by: str
    modified_date: str
    nickname: str
    path: str
    port: str
    protocol: str
    status: str
    excluded_sub_paths: NotRequired[list[Any]]
    other: NotRequired[str]
    query: NotRequired[str]
    reason: NotRequired[str]


class UrlRootMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: url_root_metadata
    """

    pk: str
    sk: str
    pk_2: str
    type: str
    created_date: str
    unreliable_indicators: NotRequired[RootUnreliableIndicators]
    state: NotRequired[UrlRootState]
    sk_2: str
    created_by: str


class VulnerabilityAdvisory(TypedDict):
    package: str
    vulnerable_version: str
    cve: set[str]
    epss: NotRequired[int]


class VulnerabilityAuthor(TypedDict):
    author_email: str
    commit: str
    commit_date: str


class VulnerabilityTool(TypedDict):
    name: str
    impact: str


class VulnerabilityHistoricStateItem(TypedDict):
    """
    Table: integrates_vms
    Facet: vulnerability_historic_state
    """

    pk: str
    modified_by: str
    modified_date: str
    source: str
    specific: str
    status: str
    where: str
    commit: NotRequired[str]
    advisories: NotRequired[VulnerabilityAdvisory]
    reasons: NotRequired[list[Any]]
    other_reason: NotRequired[str]
    tool: NotRequired[VulnerabilityTool]
    sk: str
    snippet: NotRequired[Snippet]


class VulnerabilityHistoricTreatmentItem(TypedDict):
    """
    Table: integrates_vms
    Facet: vulnerability_historic_treatment
    """

    pk: str
    modified_date: str
    status: str
    sk: str
    modified_by: NotRequired[str]
    acceptance_status: NotRequired[str]
    accepted_until: NotRequired[str]
    assigned: NotRequired[str]
    justification: NotRequired[str]


class VulnerabilityHistoricVerificationItem(TypedDict):
    """
    Table: integrates_vms
    Facet: vulnerability_historic_verification
    """

    pk: str
    modified_date: str
    status: str
    sk: str
    modified_by: NotRequired[str]
    event_id: NotRequired[str]
    other: NotRequired[str]
    justification: NotRequired[str]


class VulnerabilityHistoricZeroRiskItem(TypedDict):
    """
    Table: integrates_vms
    Facet: vulnerability_historic_zero_risk
    """

    pk: str
    modified_by: str
    modified_date: str
    comment_id: str
    status: str
    sk: str


class VulnerabilityState(TypedDict):
    modified_by: str
    modified_date: str
    source: str
    specific: str
    status: str
    where: str
    commit: NotRequired[str]
    advisories: NotRequired[VulnerabilityAdvisory]
    reasons: NotRequired[list[Any]]
    other_reason: NotRequired[str]
    tool: NotRequired[VulnerabilityTool]
    snippet: NotRequired[Snippet]


class VulnerabilityTreatment(TypedDict):
    modified_date: str
    status: str
    modified_by: NotRequired[str]
    acceptance_status: NotRequired[str]
    accepted_until: NotRequired[str]
    assigned: NotRequired[str]
    justification: NotRequired[str]


class VulnerabilityUnreliableIndicators(TypedDict):
    unreliable_closing_date: NotRequired[str]
    unreliable_source: str
    unreliable_efficacy: NotRequired[Decimal]
    unreliable_last_reattack_date: NotRequired[str]
    unreliable_last_reattack_requester: NotRequired[str]
    unreliable_last_requested_reattack_date: NotRequired[str]
    unreliable_priority: NotRequired[int]
    unreliable_reattack_cycles: NotRequired[int]
    unreliable_report_date: NotRequired[str]
    unreliable_treatment_changes: NotRequired[int]


class VulnerabilityVerification(TypedDict):
    modified_date: str
    status: str
    modified_by: NotRequired[str]
    event_id: NotRequired[str]
    other: NotRequired[str]
    justification: NotRequired[str]


class VulnerabilityZeroRisk(TypedDict):
    modified_by: str
    modified_date: str
    comment_id: str
    status: str


class VulnerabilityMetadataItem(TypedDict):
    """
    Table: integrates_vms
    Facet: vulnerability_metadata
    """

    created_by: str
    created_date: str
    group_name: str
    hacker_email: str
    organization_name: str
    root_id: str
    state: VulnerabilityState
    type: str
    author: NotRequired[VulnerabilityAuthor]
    technique: NotRequired[str]
    bug_tracking_system_url: NotRequired[str]
    custom_severity: NotRequired[int]
    cwe_ids: NotRequired[list[Any]]
    developer: NotRequired[str]
    event_id: NotRequired[str]
    hash: NotRequired[int]
    severity_score: NotRequired[SeverityScore]
    skims_method: NotRequired[str]
    skims_description: NotRequired[str]
    stream: NotRequired[list[Any]]
    tags: NotRequired[list[Any]]
    treatment: NotRequired[VulnerabilityTreatment]
    unreliable_indicators: VulnerabilityUnreliableIndicators
    root_id_mismatch: NotRequired[bool]
    verification: NotRequired[VulnerabilityVerification]
    webhook_url: NotRequired[str]
    pk: str
    sk: str
    pk_2: str
    sk_2: str
    pk_3: str
    sk_3: str
    pk_5: str
    sk_5: str
    pk_6: str
    sk_6: str
    pk_4: NotRequired[str]
    zero_risk: NotRequired[VulnerabilityZeroRisk]
    sk_4: NotRequired[str]
