# Generated by ariadne-codegen
# Source: python/atoti-client/graphql/schema.gql

from typing import List, Optional

from pydantic import Field

from .._constant import Constant
from .base_model import BaseModel
from .enums import DataType, RelationshipOptionality


class ColumnIdentifierInput(BaseModel):
    column_name: str = Field(serialization_alias="columnName")
    table_identifier: "TableIdentifierInput" = Field(
        serialization_alias="tableIdentifier"
    )


class CreateJoinInput(BaseModel):
    data_model_transaction: Optional["DataModelTransactionInput"] = Field(
        serialization_alias="dataModelTransaction", default=None
    )
    mapping_items: Optional[List["CreateJoinMappingItem"]] = Field(
        serialization_alias="mappingItems", default=None
    )
    name: str
    source_table_identifier: "TableIdentifierInput" = Field(
        serialization_alias="sourceTableIdentifier"
    )
    target_optionality: RelationshipOptionality = Field(
        serialization_alias="targetOptionality",
        default=RelationshipOptionality.OPTIONAL,
    )
    target_table_identifier: "TableIdentifierInput" = Field(
        serialization_alias="targetTableIdentifier"
    )


class CreateJoinMappingItem(BaseModel):
    source_column_name: str = Field(serialization_alias="sourceColumnName")
    target_column_name: str = Field(serialization_alias="targetColumnName")


class CreateTableColumn(BaseModel):
    data_type: DataType = Field(serialization_alias="dataType")
    default_value: Optional["CreateTableColumnDefaultValue"] = Field(
        serialization_alias="defaultValue", default=None
    )
    name: str


class CreateTableColumnDefaultValue(BaseModel):
    value: Optional[Constant] = None


class CreateTableInput(BaseModel):
    columns: List["CreateTableColumn"]
    data_model_transaction: Optional["DataModelTransactionInput"] = Field(
        serialization_alias="dataModelTransaction", default=None
    )
    is_parameter_table: bool = Field(
        serialization_alias="isParameterTable", default=False
    )
    partitioning: Optional[str] = None
    primary_index: List[str] = Field(serialization_alias="primaryIndex")
    table_identifier: "TableIdentifierInput" = Field(
        serialization_alias="tableIdentifier"
    )


class CubeIdentifierInput(BaseModel):
    cube_name: str = Field(serialization_alias="cubeName")


class DataModelTransactionInput(BaseModel):
    id: str


class HierarchyIdentifierInput(BaseModel):
    dimension_name: str = Field(serialization_alias="dimensionName")
    hierarchy_name: str = Field(serialization_alias="hierarchyName")


class SetColumnDefaultValue(BaseModel):
    value: Optional[Constant] = None


class SetHierarchyAreMembersIndexedByName(BaseModel):
    value: bool


class SetHierarchyIsVisible(BaseModel):
    value: bool


class TableIdentifierInput(BaseModel):
    table_name: str = Field(serialization_alias="tableName")


class UpdateColumnAction(BaseModel):
    set_default_value: Optional["SetColumnDefaultValue"] = Field(
        serialization_alias="setDefaultValue", default=None
    )


class UpdateColumnInput(BaseModel):
    actions: List["UpdateColumnAction"]
    column_identifier: "ColumnIdentifierInput" = Field(
        serialization_alias="columnIdentifier"
    )
    data_model_transaction_id: Optional[str] = Field(
        serialization_alias="dataModelTransactionId", default=None
    )


class UpdateHierarchyAction(BaseModel):
    set_are_members_indexed_by_name: Optional["SetHierarchyAreMembersIndexedByName"] = (
        Field(serialization_alias="setAreMembersIndexedByName", default=None)
    )
    set_is_visible: Optional["SetHierarchyIsVisible"] = Field(
        serialization_alias="setIsVisible", default=None
    )


class UpdateHierarchyInput(BaseModel):
    actions: List["UpdateHierarchyAction"]
    cube_identifier: "CubeIdentifierInput" = Field(serialization_alias="cubeIdentifier")
    data_model_transaction: Optional["DataModelTransactionInput"] = Field(
        serialization_alias="dataModelTransaction", default=None
    )
    hierarchy_identifier: "HierarchyIdentifierInput" = Field(
        serialization_alias="hierarchyIdentifier"
    )
