# coding: utf-8

"""
    Zadara VPSA Storage Array REST API

     # Overview  This document outlines the methods available for administrating your Zadara Storage VPSA&#8482;. The Zadara Storage Array REST API   supports form-encoded, JSON, and XML requests, and can return either JSON or XML responses.  ## Usage  The majority of the APIs available require authentication which requires an API token to use. You can retrieve this token through the   Users section of your VPSA, or through the API using the \"Return a user's access key\" API in the Users Section below.  ## Authentication Methods  The authentication token can be passed either through the access_key parameter inside of the body of the REST API request, or   through the X-Access-Key header.  ## Timeouts  By default, all operations that don't complete within five seconds will return a message informing you that the action may take some  time to complete. When using the API, this can cause some actions, such as large volume creation, to be undesirably asynchronous.  You can specify your own timeout with the timeout parameter, in seconds, and a timeout value of -1 specifies an infinite timeout.  ## Specific Fields For Product  Some of the fields/actions used in the API should be used only for a specific product. The following tags are used to mark which   product responds to the fields/actions  VPSA Flash Array  VPSA Storage Array - Hybrid VPSA  ## Questions  If you have any questions or need support involving the REST API, please contact for assistance.   # noqa: E501

    OpenAPI spec version: 23.09-sp2
    Contact: support@zadarastorage.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from Vpsa.configuration import Configuration


class InlineResponse200103ResponseVpsaMirrorJob(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'job_name': 'str',
        'job_display_name': 'str',
        'src': 'InlineResponse200103ResponseVpsaMirrorJobSrc',
        'dst': 'InlineResponse200103ResponseVpsaMirrorJobDst',
        'status': 'str',
        'rpo': 'str',
        'wan_optimization': 'str',
        'avg_sync_rate_kb_sec': 'str',
        'created_at': 'str',
        'modified_at': 'str',
        'compress': 'str',
        'dedupe': 'str'
    }

    attribute_map = {
        'job_name': 'job_name',
        'job_display_name': 'job_display_name',
        'src': 'src',
        'dst': 'dst',
        'status': 'status',
        'rpo': 'rpo',
        'wan_optimization': 'wan_optimization',
        'avg_sync_rate_kb_sec': 'avg_sync_rate_kb_sec',
        'created_at': 'created_at',
        'modified_at': 'modified_at',
        'compress': 'compress',
        'dedupe': 'dedupe'
    }

    def __init__(self, job_name=None, job_display_name=None, src=None, dst=None, status=None, rpo=None, wan_optimization=None, avg_sync_rate_kb_sec=None, created_at=None, modified_at=None, compress=None, dedupe=None, _configuration=None):  # noqa: E501
        """InlineResponse200103ResponseVpsaMirrorJob - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._job_name = None
        self._job_display_name = None
        self._src = None
        self._dst = None
        self._status = None
        self._rpo = None
        self._wan_optimization = None
        self._avg_sync_rate_kb_sec = None
        self._created_at = None
        self._modified_at = None
        self._compress = None
        self._dedupe = None
        self.discriminator = None

        if job_name is not None:
            self.job_name = job_name
        if job_display_name is not None:
            self.job_display_name = job_display_name
        if src is not None:
            self.src = src
        if dst is not None:
            self.dst = dst
        if status is not None:
            self.status = status
        if rpo is not None:
            self.rpo = rpo
        if wan_optimization is not None:
            self.wan_optimization = wan_optimization
        if avg_sync_rate_kb_sec is not None:
            self.avg_sync_rate_kb_sec = avg_sync_rate_kb_sec
        if created_at is not None:
            self.created_at = created_at
        if modified_at is not None:
            self.modified_at = modified_at
        if compress is not None:
            self.compress = compress
        if dedupe is not None:
            self.dedupe = dedupe

    @property
    def job_name(self):
        """Gets the job_name of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The job_name of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: str
        """
        return self._job_name

    @job_name.setter
    def job_name(self, job_name):
        """Sets the job_name of this InlineResponse200103ResponseVpsaMirrorJob.


        :param job_name: The job_name of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: str
        """

        self._job_name = job_name

    @property
    def job_display_name(self):
        """Gets the job_display_name of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The job_display_name of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: str
        """
        return self._job_display_name

    @job_display_name.setter
    def job_display_name(self, job_display_name):
        """Sets the job_display_name of this InlineResponse200103ResponseVpsaMirrorJob.


        :param job_display_name: The job_display_name of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: str
        """

        self._job_display_name = job_display_name

    @property
    def src(self):
        """Gets the src of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The src of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: InlineResponse200103ResponseVpsaMirrorJobSrc
        """
        return self._src

    @src.setter
    def src(self, src):
        """Sets the src of this InlineResponse200103ResponseVpsaMirrorJob.


        :param src: The src of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: InlineResponse200103ResponseVpsaMirrorJobSrc
        """

        self._src = src

    @property
    def dst(self):
        """Gets the dst of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The dst of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: InlineResponse200103ResponseVpsaMirrorJobDst
        """
        return self._dst

    @dst.setter
    def dst(self, dst):
        """Sets the dst of this InlineResponse200103ResponseVpsaMirrorJob.


        :param dst: The dst of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: InlineResponse200103ResponseVpsaMirrorJobDst
        """

        self._dst = dst

    @property
    def status(self):
        """Gets the status of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The status of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InlineResponse200103ResponseVpsaMirrorJob.


        :param status: The status of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def rpo(self):
        """Gets the rpo of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The rpo of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: str
        """
        return self._rpo

    @rpo.setter
    def rpo(self, rpo):
        """Sets the rpo of this InlineResponse200103ResponseVpsaMirrorJob.


        :param rpo: The rpo of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: str
        """

        self._rpo = rpo

    @property
    def wan_optimization(self):
        """Gets the wan_optimization of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The wan_optimization of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: str
        """
        return self._wan_optimization

    @wan_optimization.setter
    def wan_optimization(self, wan_optimization):
        """Sets the wan_optimization of this InlineResponse200103ResponseVpsaMirrorJob.


        :param wan_optimization: The wan_optimization of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: str
        """

        self._wan_optimization = wan_optimization

    @property
    def avg_sync_rate_kb_sec(self):
        """Gets the avg_sync_rate_kb_sec of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The avg_sync_rate_kb_sec of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: str
        """
        return self._avg_sync_rate_kb_sec

    @avg_sync_rate_kb_sec.setter
    def avg_sync_rate_kb_sec(self, avg_sync_rate_kb_sec):
        """Sets the avg_sync_rate_kb_sec of this InlineResponse200103ResponseVpsaMirrorJob.


        :param avg_sync_rate_kb_sec: The avg_sync_rate_kb_sec of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: str
        """

        self._avg_sync_rate_kb_sec = avg_sync_rate_kb_sec

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The created_at of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse200103ResponseVpsaMirrorJob.


        :param created_at: The created_at of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def modified_at(self):
        """Gets the modified_at of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The modified_at of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: str
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this InlineResponse200103ResponseVpsaMirrorJob.


        :param modified_at: The modified_at of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: str
        """

        self._modified_at = modified_at

    @property
    def compress(self):
        """Gets the compress of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The compress of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: str
        """
        return self._compress

    @compress.setter
    def compress(self, compress):
        """Sets the compress of this InlineResponse200103ResponseVpsaMirrorJob.


        :param compress: The compress of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: str
        """

        self._compress = compress

    @property
    def dedupe(self):
        """Gets the dedupe of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501


        :return: The dedupe of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :rtype: str
        """
        return self._dedupe

    @dedupe.setter
    def dedupe(self, dedupe):
        """Sets the dedupe of this InlineResponse200103ResponseVpsaMirrorJob.


        :param dedupe: The dedupe of this InlineResponse200103ResponseVpsaMirrorJob.  # noqa: E501
        :type: str
        """

        self._dedupe = dedupe

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse200103ResponseVpsaMirrorJob, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse200103ResponseVpsaMirrorJob):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse200103ResponseVpsaMirrorJob):
            return True

        return self.to_dict() != other.to_dict()
