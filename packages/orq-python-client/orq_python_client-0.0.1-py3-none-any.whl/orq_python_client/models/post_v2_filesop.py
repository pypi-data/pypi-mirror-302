"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
import dateutil.parser
from enum import Enum
from orq_python_client.types import BaseModel
from orq_python_client.utils import FieldMetadata
import pydantic
from typing import Any, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class Purpose(str, Enum):
    r"""The intended purpose of the uploaded file."""

    RETRIEVAL = "retrieval"


class PostV2FilesRequestBodyTypedDict(TypedDict):
    file: NotRequired[Any]
    r"""The file to be uploaded."""
    purpose: NotRequired[Purpose]
    r"""The intended purpose of the uploaded file."""


class PostV2FilesRequestBody(BaseModel):
    file: Annotated[Optional[Any], FieldMetadata(multipart=True)] = None
    r"""The file to be uploaded."""

    purpose: Annotated[Optional[Purpose], FieldMetadata(multipart=True)] = (
        Purpose.RETRIEVAL
    )
    r"""The intended purpose of the uploaded file."""


class PostV2FilesPurpose(str, Enum):
    r"""The intended purpose of the uploaded file."""

    RETRIEVAL = "retrieval"


class PostV2FilesResponseBodyTypedDict(TypedDict):
    r"""File uploaded successfully"""

    id: str
    object_name: str
    r"""path to the file in the storage"""
    purpose: PostV2FilesPurpose
    r"""The intended purpose of the uploaded file."""
    bytes: float
    file_name: str
    created: NotRequired[datetime]
    r"""The date and time the resource was created"""


class PostV2FilesResponseBody(BaseModel):
    r"""File uploaded successfully"""

    id: Annotated[str, pydantic.Field(alias="_id")]

    object_name: str
    r"""path to the file in the storage"""

    purpose: PostV2FilesPurpose
    r"""The intended purpose of the uploaded file."""

    bytes: float

    file_name: str

    created: Optional[datetime] = dateutil.parser.isoparse("2024-10-14T12:39:39.273Z")
    r"""The date and time the resource was created"""
