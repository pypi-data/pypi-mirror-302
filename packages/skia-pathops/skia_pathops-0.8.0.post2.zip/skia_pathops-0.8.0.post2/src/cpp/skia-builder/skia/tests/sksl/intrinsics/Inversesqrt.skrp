    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_constant                  negativeVal(0) = 0xBF800000 (-1.0)
    4. copy_constant                  negativeVal(1) = 0xC0800000 (-4.0)
    5. copy_constant                  negativeVal(2) = 0xC1800000 (-16.0)
    6. copy_constant                  negativeVal(3) = 0xC2800000 (-64.0)
    7. copy_constant                  $4 = inputVal(0)
    8. invsqrt_float                  $4 = inversesqrt($4)
    9. copy_constant                  $5 = expected(0)
   10. cmpeq_float                    $4 = equal($4, $5)
   11. copy_2_constants               $5..6 = inputVal(0..1)
   12. invsqrt_2_floats               $5..6 = inversesqrt($5..6)
   13. copy_2_constants               $7..8 = expected(0..1)
   14. cmpeq_2_floats                 $5..6 = equal($5..6, $7..8)
   15. bitwise_and_int                $5 &= $6
   16. bitwise_and_int                $4 &= $5
   17. copy_3_constants               $5..7 = inputVal(0..2)
   18. invsqrt_3_floats               $5..7 = inversesqrt($5..7)
   19. copy_3_constants               $8..10 = expected(0..2)
   20. cmpeq_3_floats                 $5..7 = equal($5..7, $8..10)
   21. bitwise_and_int                $6 &= $7
   22. bitwise_and_int                $5 &= $6
   23. bitwise_and_int                $4 &= $5
   24. copy_4_constants               $5..8 = inputVal
   25. invsqrt_4_floats               $5..8 = inversesqrt($5..8)
   26. copy_4_constants               $9..12 = expected
   27. cmpeq_4_floats                 $5..8 = equal($5..8, $9..12)
   28. bitwise_and_2_ints             $5..6 &= $7..8
   29. bitwise_and_int                $5 &= $6
   30. bitwise_and_int                $4 &= $5
   31. copy_constant                  $5 = 0x3F800000 (1.0)
   32. copy_constant                  $6 = expected(0)
   33. cmpeq_float                    $5 = equal($5, $6)
   34. bitwise_and_int                $4 &= $5
   35. copy_constant                  $5 = 0x3F800000 (1.0)
   36. copy_constant                  $6 = 0x3F000000 (0.5)
   37. copy_2_constants               $7..8 = expected(0..1)
   38. cmpeq_2_floats                 $5..6 = equal($5..6, $7..8)
   39. bitwise_and_int                $5 &= $6
   40. bitwise_and_int                $4 &= $5
   41. copy_constant                  $5 = 0x3F800000 (1.0)
   42. copy_constant                  $6 = 0x3F000000 (0.5)
   43. copy_constant                  $7 = 0x3E800000 (0.25)
   44. copy_3_constants               $8..10 = expected(0..2)
   45. cmpeq_3_floats                 $5..7 = equal($5..7, $8..10)
   46. bitwise_and_int                $6 &= $7
   47. bitwise_and_int                $5 &= $6
   48. bitwise_and_int                $4 &= $5
   49. copy_constant                  $5 = 0x3F800000 (1.0)
   50. copy_constant                  $6 = 0x3F000000 (0.5)
   51. copy_constant                  $7 = 0x3E800000 (0.25)
   52. copy_constant                  $8 = 0x3E000000 (0.125)
   53. copy_4_constants               $9..12 = expected
   54. cmpeq_4_floats                 $5..8 = equal($5..8, $9..12)
   55. bitwise_and_2_ints             $5..6 &= $7..8
   56. bitwise_and_int                $5 &= $6
   57. bitwise_and_int                $4 &= $5
   58. copy_constant                  $5 = 0xBF800000 (-1.0)
   59. invsqrt_float                  $5 = inversesqrt($5)
   60. copy_constant                  $6 = expected(0)
   61. cmpeq_float                    $5 = equal($5, $6)
   62. bitwise_and_int                $4 &= $5
   63. copy_constant                  $5 = 0xBF800000 (-1.0)
   64. copy_constant                  $6 = 0xC0800000 (-4.0)
   65. invsqrt_2_floats               $5..6 = inversesqrt($5..6)
   66. copy_2_constants               $7..8 = expected(0..1)
   67. cmpeq_2_floats                 $5..6 = equal($5..6, $7..8)
   68. bitwise_and_int                $5 &= $6
   69. bitwise_and_int                $4 &= $5
   70. copy_constant                  $5 = 0xBF800000 (-1.0)
   71. copy_constant                  $6 = 0xC0800000 (-4.0)
   72. copy_constant                  $7 = 0xC1800000 (-16.0)
   73. invsqrt_3_floats               $5..7 = inversesqrt($5..7)
   74. copy_3_constants               $8..10 = expected(0..2)
   75. cmpeq_3_floats                 $5..7 = equal($5..7, $8..10)
   76. bitwise_and_int                $6 &= $7
   77. bitwise_and_int                $5 &= $6
   78. bitwise_and_int                $4 &= $5
   79. copy_4_slots_unmasked          $5..8 = negativeVal
   80. invsqrt_4_floats               $5..8 = inversesqrt($5..8)
   81. copy_4_constants               $9..12 = expected
   82. cmpeq_4_floats                 $5..8 = equal($5..8, $9..12)
   83. bitwise_and_2_ints             $5..6 &= $7..8
   84. bitwise_and_int                $5 &= $6
   85. bitwise_and_int                $4 &= $5
   86. branch_if_no_active_lanes_eq   branch +3 (label 0 at #89) if no lanes of $4 == 0xFFFFFFFF
   87. copy_4_constants               $0..3 = colorGreen
   88. jump                           jump +3 (label 1 at #91)
   89. label                          label 0x00000000
   90. copy_4_constants               $0..3 = colorRed
   91. label                          label 0x00000001
   92. load_src                       src.rgba = $0..3
