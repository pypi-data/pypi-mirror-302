version: '3.5'

networks:
  gitlab-network:
    name: gitlab-network
    driver: bridge
    ipam:
        config:
            - subnet: 10.5.0.0/16
              gateway: 10.5.0.1

services:
  gitlab:
    image: '${GITLAB_IMAGE}:${GITLAB_TAG}'
    container_name: 'gitlab-test'
    hostname: 'gitlab.test'
    privileged: true # Just in case https://gitlab.com/gitlab-org/omnibus-gitlab/-/issues/1350
    environment:
      GITLAB_ROOT_PASSWORD: 5iveL!fe
      GITLAB_SHARED_RUNNERS_REGISTRATION_TOKEN: registration-token
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://10.5.0.100'
        registry['enable'] = false
        nginx['redirect_http_to_https'] = false
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        pages_external_url 'http://pages.gitlab.lxd'
        gitlab_pages['enable'] = true
        gitlab_pages['inplace_chroot'] = true
        prometheus['enable'] = false
        alertmanager['enable'] = false
        node_exporter['enable'] = false
        redis_exporter['enable'] = false
        postgres_exporter['enable'] = false
        pgbouncer_exporter['enable'] = false
        gitlab_exporter['enable'] = false
        letsencrypt['enable'] = false
        gitlab_rails['initial_license_file'] = '/python-gitlab-ci.gitlab-license'
        gitlab_rails['monitoring_whitelist'] = ['0.0.0.0/0']
        puma['worker_processes'] = 0
        sidekiq['concurrency'] = 10
        gitaly['configuration'] = {
            concurrency: [
              {
                'rpc' => "/gitaly.SmartHTTPService/PostReceivePack",
                'max_per_repo' => 3,
              }, {
                'rpc' => "/gitaly.SSHService/SSHUploadPack",
                'max_per_repo' => 3,
              },
            ]
        }
        prometheus_monitoring['enable'] = false
        gitaly['env'] = {
          'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000',
          'GITALY_COMMAND_SPAWN_MAX_PARALLEL' => '2'
        }
        gitlab_rails['env'] = {
          'MALLOC_CONF' => 'dirty_decay_ms:1000,muzzy_decay_ms:1000'
        }
    entrypoint:
      - /bin/sh
      - -c
      - ruby /create_license.rb && /assets/wrapper
    volumes:
      - ./create_license.rb:/create_license.rb
    ports:
      - '8080:80'
      - '2222:22'
    networks:
      gitlab-network:
        ipv4_address: 10.5.0.100

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: 'gitlab-runner-test'
    privileged: true
    depends_on:
      - gitlab
    networks:
      gitlab-network:
        ipv4_address: 10.5.0.110
    volumes:
      - ./install_docker.sh:/install_docker.sh
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint:
        - /bin/sh
        - -c
        - /bin/sh /install_docker.sh && /usr/bin/dumb-init /entrypoint run --user=gitlab-runner --working-directory=/home/gitlab-runner

      
