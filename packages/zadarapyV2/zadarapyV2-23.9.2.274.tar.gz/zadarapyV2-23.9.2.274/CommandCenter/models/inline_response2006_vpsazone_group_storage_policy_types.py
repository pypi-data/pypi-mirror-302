# coding: utf-8

"""
    Command Center operations

    Command Center operations  # noqa: E501

    OpenAPI spec version: 23.09-sp2
    Contact: support@zadarastorage.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from CommandCenter.configuration import Configuration


class InlineResponse2006VpsazoneGroupStoragePolicyTypes(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'internal_name': 'str',
        'data_fragments': 'int',
        'parity_fragments': 'int',
        'replicas': 'int'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'internal_name': 'internal_name',
        'data_fragments': 'data_fragments',
        'parity_fragments': 'parity_fragments',
        'replicas': 'replicas'
    }

    def __init__(self, id=None, name=None, internal_name=None, data_fragments=None, parity_fragments=None, replicas=None, _configuration=None):  # noqa: E501
        """InlineResponse2006VpsazoneGroupStoragePolicyTypes - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._name = None
        self._internal_name = None
        self._data_fragments = None
        self._parity_fragments = None
        self._replicas = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if internal_name is not None:
            self.internal_name = internal_name
        if data_fragments is not None:
            self.data_fragments = data_fragments
        if parity_fragments is not None:
            self.parity_fragments = parity_fragments
        if replicas is not None:
            self.replicas = replicas

    @property
    def id(self):
        """Gets the id of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501


        :return: The id of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.


        :param id: The id of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501


        :return: The name of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.


        :param name: The name of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def internal_name(self):
        """Gets the internal_name of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501


        :return: The internal_name of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :rtype: str
        """
        return self._internal_name

    @internal_name.setter
    def internal_name(self, internal_name):
        """Sets the internal_name of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.


        :param internal_name: The internal_name of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :type: str
        """

        self._internal_name = internal_name

    @property
    def data_fragments(self):
        """Gets the data_fragments of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501


        :return: The data_fragments of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :rtype: int
        """
        return self._data_fragments

    @data_fragments.setter
    def data_fragments(self, data_fragments):
        """Sets the data_fragments of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.


        :param data_fragments: The data_fragments of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :type: int
        """

        self._data_fragments = data_fragments

    @property
    def parity_fragments(self):
        """Gets the parity_fragments of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501


        :return: The parity_fragments of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :rtype: int
        """
        return self._parity_fragments

    @parity_fragments.setter
    def parity_fragments(self, parity_fragments):
        """Sets the parity_fragments of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.


        :param parity_fragments: The parity_fragments of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :type: int
        """

        self._parity_fragments = parity_fragments

    @property
    def replicas(self):
        """Gets the replicas of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501


        :return: The replicas of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :rtype: int
        """
        return self._replicas

    @replicas.setter
    def replicas(self, replicas):
        """Sets the replicas of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.


        :param replicas: The replicas of this InlineResponse2006VpsazoneGroupStoragePolicyTypes.  # noqa: E501
        :type: int
        """

        self._replicas = replicas

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse2006VpsazoneGroupStoragePolicyTypes, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2006VpsazoneGroupStoragePolicyTypes):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse2006VpsazoneGroupStoragePolicyTypes):
            return True

        return self.to_dict() != other.to_dict()
