Metadata-Version: 2.1
Name: async-pymongo
Version: 0.1.10
Summary: Asynchronous wrapper for pymongo
Home-page: https://github.com/Mayuri-Chan/async_pymongo
License: GPL-3.0-or-later
Keywords: async,python,pymongo
Author: Adek Maulana
Author-email: adekzmaulana@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: Environment :: Console
Classifier: Framework :: AsyncIO
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Database
Requires-Dist: dnspython (>=2.6.1)
Requires-Dist: pymongo (>=4.9,<=5.0.0)
Project-URL: Repository, https://github.com/Mayuri-Chan/async_pymongo
Description-Content-Type: text/markdown

## async_pymongo
Asynchronous wrapper for pymongo  
[Comparison](https://github.com/Mayuri-Chan/async_pymongo/blob/staging/comparison.png)  

### Installing

``` bash
pip3 install async_pymongo
```

### Usage

``` python
from async_pymongo import AsyncClient

async def main():
	conn = AsyncClient("mongodb://...")
	db = conn["database_name"]
	col = db["collections_name"]
	await col.insert_one({"name": "John Smith", "age": 25})
	async for data in col.find({}):
		print(data["name"])
```
 The rest function are same with pymongo but with await

