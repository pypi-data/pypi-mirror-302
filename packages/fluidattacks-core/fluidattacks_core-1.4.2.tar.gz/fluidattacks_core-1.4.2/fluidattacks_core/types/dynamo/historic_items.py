"""
This file was generated by a script. Do not edit manually.
If you need to make changes, please run
m . /integrates/db/dynamodb/schemas/types

More information at
https://dev.fluidattacks.com/components/integrates/database/database-design
"""

from decimal import (
    Decimal,
)
from typing import (
    Any,
    NotRequired,
    TypedDict,
)


class DraftRejection(TypedDict):
    other: str
    reasons: set[str]
    rejected_by: str
    rejection_date: str
    submitted_by: str


class EventStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: event_state
    """

    status: str
    modified_date: str
    modified_by: str
    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    comment_id: NotRequired[str]
    sk_3: str


class FindingStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: finding_state
    """

    modified_by: str
    modified_date: str
    source: str
    status: str
    rejection: NotRequired[DraftRejection]
    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    justification: str
    sk_3: str


class FindingVerificationItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: finding_verification
    """

    comment_id: str
    modified_by: str
    modified_date: str
    status: str
    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    vulnerability_ids: set[str]
    sk_3: str


class GitRootStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: git_root_state
    """

    branch: str
    environment: str
    gitignore: list[Any]
    includes_health_check: bool
    modified_by: str
    modified_date: str
    nickname: str
    status: str
    url: str
    credential_id: NotRequired[str]
    criticality: NotRequired[str]
    environment_urls: NotRequired[list[Any]]
    other: NotRequired[str]
    reason: NotRequired[str]
    use_egress: NotRequired[bool]
    use_vpn: NotRequired[bool]
    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    use_ztna: NotRequired[bool]
    sk_3: str


class GroupConfirmDeletion(TypedDict):
    is_used: bool
    url_token: str


class GroupInvitation(TypedDict):
    is_used: bool
    role: str
    url_token: str
    responsibility: NotRequired[str]


class GroupAccessStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: group_access_state
    """

    modified_date: NotRequired[str]
    modified_by: NotRequired[str]
    confirm_deletion: NotRequired[GroupConfirmDeletion]
    has_access: bool
    invitation: NotRequired[GroupInvitation]
    responsibility: NotRequired[str]
    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    role: NotRequired[str]
    sk_3: str


class GroupPoliciesItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: group_policies
    """

    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    modified_date: str
    modified_by: str
    days_until_it_breaks: NotRequired[int]
    inactivity_period: NotRequired[int]
    max_acceptance_days: NotRequired[int]
    max_acceptance_severity: NotRequired[Decimal]
    max_number_acceptances: NotRequired[int]
    min_acceptance_severity: NotRequired[Decimal]
    min_breaking_severity: NotRequired[Decimal]
    sk_3: str
    vulnerability_grace_period: NotRequired[int]


class IpRootStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: ip_root_state
    """

    pk: str
    sk: str
    pk_2: str
    sk_2: str
    pk_3: str
    modified_by: str
    modified_date: str
    status: str
    nickname: str
    address: str
    reason: NotRequired[str]
    sk_3: str
    other: NotRequired[str]


class NotificationsParameters(TypedDict):
    min_severity: Decimal


class NotificationsPreferences(TypedDict):
    email: list[Any]
    sms: list[Any]
    available: NotRequired[list[Any]]
    parameters: NotRequired[NotificationsParameters]


class OrgFindingPolicyStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: org_finding_policy_state
    """

    pk: str
    status: str
    sk: str
    modified_by: str
    modified_date: str


class OrganizationPoliciesItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: organization_policies
    """

    pk: str
    modified_date: str
    modified_by: str
    days_until_it_breaks: NotRequired[int]
    inactivity_period: NotRequired[int]
    max_acceptance_days: NotRequired[int]
    max_acceptance_severity: NotRequired[Decimal]
    max_number_acceptances: NotRequired[int]
    min_acceptance_severity: NotRequired[Decimal]
    min_breaking_severity: NotRequired[Decimal]
    sk: str
    vulnerability_grace_period: NotRequired[int]


class OrganizationStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: organization_state
    """

    pk: str
    aws_external_id: str
    sk: str
    status: str
    modified_by: str
    modified_date: str
    pending_deletion_date: NotRequired[str]


class RootDockerImageStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: root_docker_image_state
    """

    pk: str
    modified_by: str
    modified_date: str
    status: str
    size: int
    history: list[Any]
    layers: set[str]
    credential_id: NotRequired[str]
    digest: NotRequired[str]
    sk: str
    include: NotRequired[bool]


class RootEnvironmentUrlStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: root_environment_url_state
    """

    pk: str
    sk: str
    pk_2: str
    sk_2: str
    pk_3: str
    modified_by: str
    modified_date: str
    status: str
    include: bool
    url_type: str
    cloud_name: NotRequired[str]
    use_egress: NotRequired[bool]
    use_vpn: NotRequired[bool]
    sk_3: str
    use_ztna: NotRequired[bool]


class Snippet(TypedDict):
    content: str
    offset: int
    line: NotRequired[int]
    column: NotRequired[int]
    columns_per_line: NotRequired[int]
    line_context: NotRequired[int]
    wrap: NotRequired[bool]
    show_line_numbers: NotRequired[bool]
    highlight_line_number: NotRequired[bool]


class StakeholderLoginItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: stakeholder_login
    """

    pk: str
    modified_by: str
    modified_date: str
    expiration_time: int
    browser: str
    country_code: str
    device: str
    ip_address: str
    provider: str
    sk: str
    subject: str


class StakeholderStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: stakeholder_state
    """

    pk: str
    modified_date: NotRequired[str]
    modified_by: NotRequired[str]
    notifications_preferences: NotRequired[NotificationsPreferences]
    sk: str
    trusted_devices: NotRequired[list[Any]]


class ToeInputStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: toe_input_state
    """

    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    be_present: bool
    modified_date: str
    attacked_at: NotRequired[str]
    attacked_by: NotRequired[str]
    be_present_until: NotRequired[str]
    first_attack_at: NotRequired[str]
    has_vulnerabilities: NotRequired[bool]
    modified_by: NotRequired[str]
    seen_at: NotRequired[str]
    sk_3: str
    seen_first_time_by: NotRequired[str]


class ToeLinesStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: toe_lines_state
    """

    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    attacked_by: str
    attacked_lines: int
    be_present: bool
    comments: str
    has_vulnerabilities: bool
    last_author: str
    last_commit: str
    loc: int
    modified_by: str
    modified_date: str
    seen_at: str
    sorts_risk_level: int
    last_commit_date: NotRequired[str]
    attacked_at: NotRequired[str]
    be_present_until: NotRequired[str]
    first_attack_at: NotRequired[str]
    sorts_priority_factor: NotRequired[int]
    sorts_risk_level_date: NotRequired[str]
    sk_3: str
    sorts_suggestions: NotRequired[list[Any]]


class ToePackageStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: toe_package_state
    """

    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    modified_by: str
    modified_date: str
    be_present: bool
    language: str
    platform: str
    id: str
    package_url: str
    url: NotRequired[str]
    vulnerable: NotRequired[bool]
    sk_3: str
    vulnerability_ids: set[str]


class ToePortStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: toe_port_state
    """

    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    attacked_at: NotRequired[str]
    attacked_by: NotRequired[str]
    be_present: bool
    be_present_until: NotRequired[str]
    first_attack_at: NotRequired[str]
    has_vulnerabilities: bool
    modified_by: NotRequired[str]
    modified_date: NotRequired[str]
    seen_at: NotRequired[str]
    sk_3: str
    seen_first_time_by: NotRequired[str]


class UrlRootStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: url_root_state
    """

    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    host: str
    modified_by: str
    modified_date: str
    nickname: str
    path: str
    port: str
    protocol: str
    status: str
    excluded_sub_paths: NotRequired[list[Any]]
    other: NotRequired[str]
    query: NotRequired[str]
    sk_3: str
    reason: NotRequired[str]


class VulnerabilityAdvisory(TypedDict):
    package: str
    vulnerable_version: str
    cve: set[str]
    epss: NotRequired[int]


class VulnerabilityTool(TypedDict):
    name: str
    impact: str


class VulnerabilityStateItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: vulnerability_state
    """

    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    modified_by: str
    modified_date: str
    source: str
    specific: str
    status: str
    where: str
    commit: NotRequired[str]
    advisories: NotRequired[VulnerabilityAdvisory]
    reasons: NotRequired[list[Any]]
    other_reason: NotRequired[str]
    tool: NotRequired[VulnerabilityTool]
    sk_3: str
    snippet: NotRequired[Snippet]


class VulnerabilityTreatmentItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: vulnerability_treatment
    """

    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    modified_date: str
    status: str
    sk_3: str
    modified_by: NotRequired[str]
    acceptance_status: NotRequired[str]
    accepted_until: NotRequired[str]
    assigned: NotRequired[str]
    justification: NotRequired[str]


class VulnerabilityVerificationItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: vulnerability_verification
    """

    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    modified_date: str
    status: str
    sk_3: str
    modified_by: NotRequired[str]
    event_id: NotRequired[str]
    other: NotRequired[str]
    justification: NotRequired[str]


class VulnerabilityZeroRiskItem(TypedDict):
    """
    Table: integrates_vms_historic
    Facet: vulnerability_zero_risk
    """

    pk: str
    sk: str
    pk_2: str
    pk_3: str
    sk_2: str
    sk_3: str
    modified_by: str
    modified_date: str
    comment_id: str
    status: str
