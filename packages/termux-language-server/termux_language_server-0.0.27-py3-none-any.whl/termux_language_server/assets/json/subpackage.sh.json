{
  "$id": "https://github.com/termux/termux-language-server/blob/main/src/termux_language_server/assets/json/subpackage.sh.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$comment": "Don't edit this file directly! It is generated by `termux-language-server --generate-schema=subpackage.sh`.",
  "type": "object",
  "required": [
    "TERMUX_SUBPKG_DESCRIPTION",
    "TERMUX_SUBPKG_INCLUDE"
  ],
  "properties": {
    "TERMUX_SUBPKG_DESCRIPTION": {
      "type": "string",
      "description": "Short, one-line description of subpackage."
    },
    "TERMUX_SUBPKG_DEPEND_ON_PARENT": {
      "type": "string",
      "description": "Specifies way how subpackage should depend on parent. See Subpackage dependencies for more information."
    },
    "TERMUX_SUBPKG_DEPENDS": {
      "type": "string",
      "description": "Comma-separated list of subpackage dependencies.",
      "pattern": "[a-z][a-z0-9-]*(, [a-z][a-z0-9-]*)*"
    },
    "TERMUX_SUBPKG_BREAKS": {
      "type": "string",
      "description": "Comma-separated list of packages that are incompatible with the current one.",
      "pattern": "[a-z][a-z0-9-]*(, [a-z][a-z0-9-]*)*"
    },
    "TERMUX_SUBPKG_CONFLICTS": {
      "type": "string",
      "description": "Comma-separated list of packages which have file name collisions with the current one.",
      "pattern": "[a-z][a-z0-9-]*(, [a-z][a-z0-9-]*)*"
    },
    "TERMUX_SUBPKG_REPLACES": {
      "type": "string",
      "description": "Comma-separated list of packages being replaced by current one.",
      "pattern": "[a-z][a-z0-9-]*(, [a-z][a-z0-9-]*)*"
    },
    "TERMUX_SUBPKG_ESSENTIAL": {
      "type": "string",
      "description": "Whether to treat subpackage as essential which cannot be uninstalled in usual way. Default is false.",
      "default": "false",
      "enum": [
        "true",
        "false"
      ]
    },
    "TERMUX_SUBPKG_PLATFORM_INDEPENDENT": {
      "type": "string",
      "description": "Whether to treat subpackage as platform independent. Default is false.",
      "default": "false",
      "enum": [
        "true",
        "false"
      ]
    },
    "TERMUX_SUBPKG_INCLUDE": {
      "type": "string",
      "description": "A space or newline separated list of files to be included in subpackage."
    },
    "TERMUX_SUBPKG_CONFFILES": {
      "type": "string",
      "description": "A space or newline separated list of package configuration files that should not be overwritten on update."
    }
  },
  "propertyNames": {
    "not": {
      "anyOf": [
        {
          "const": "TERMUX_ON_DEVICE_BUILD",
          "description": "If set, assume that building on device."
        },
        {
          "const": "TERMUX_BUILD_IGNORE_LOCK",
          "description": "If set to true, ignore build process lock."
        },
        {
          "const": "TERMUX_BUILD_LOCK_FILE",
          "description": "Path to build process lock file."
        },
        {
          "const": "TERMUX_HOST_PLATFORM",
          "description": "Host platform definition. Usually $TERMUX_ARCH-linux-android."
        },
        {
          "const": "TERMUX_PKG_BUILDDIR",
          "description": "Path to build directory of current package."
        },
        {
          "const": "TERMUX_PKG_BUILDER_DIR",
          "description": "Path to directory where located build.sh of current package."
        },
        {
          "const": "TERMUX_PKG_BUILDER_SCRIPT",
          "description": "Path to build.sh of current package."
        },
        {
          "const": "TERMUX_PKG_CACHEDIR",
          "description": "Path to source cache directory of current package."
        },
        {
          "const": "TERMUX_PKG_MASSAGEDIR",
          "description": "Path to directory where package content will be extracted from $TERMUX_PREFIX."
        },
        {
          "const": "TERMUX_PKG_PACKAGEDIR",
          "description": "Path to directory where components of *.deb archive of current package will be created."
        },
        {
          "const": "TERMUX_PKG_SRCDIR",
          "description": "Path to source directory of current package."
        },
        {
          "const": "TERMUX_PKG_TMPDIR",
          "description": "Path to temporary directory specific for current package."
        },
        {
          "const": "TERMUX_COMMON_CACHEDIR",
          "description": "Path to global cache directory where build tools are stored."
        },
        {
          "const": "TERMUX_SCRIPTDIR",
          "description": "Path to directory with utility scripts."
        },
        {
          "const": "TERMUX_PKG_NAME",
          "description": "Name of current package."
        },
        {
          "const": "TERMUX_REPO_URL",
          "description": "Array of APT repository URLs from which dependencies will be downloaded if ./build-package.sh got option -i or -I."
        },
        {
          "const": "TERMUX_REPO_DISTRIBUTION",
          "description": "Array of distribution names in addition for TERMUX_REPO_URL."
        },
        {
          "const": "TERMUX_REPO_COMPONENT",
          "description": "Array of repository component names in addition for TERMUX_REPO_URL."
        },
        {
          "const": "TERMUX_PACKAGE_FORMAT",
          "description": "Package output format."
        }
      ]
    }
  }
}