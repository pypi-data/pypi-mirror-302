{% if cookiecutter.project_layout == "src" -%}
{% set package_path = "src/" + cookiecutter.package_slug -%}
{% else -%}
{% set package_path = cookiecutter.package_slug -%}
{% endif -%}

{%- if cookiecutter.use_pytest == "yes" -%}
[tool.pytest.ini_options]
testpaths = [
    "tests",
]
{% endif -%}

{%- if cookiecutter.use_black == "yes" %}
[tool.black]
line-length = 79
target-version = ["py39"]
force-exclude = '''(?x)(
    docs/*
  | .*\\.egg-info
)'''  # TOML's single-quoted strings do not require escaping backslashes
{% endif -%}

{%- if cookiecutter.use_isort == "yes" %}
[tool.isort]
ensure_newline_before_comments = true
line_length = 79
multi_line_output = 3
include_trailing_comma = true
skip_glob = ["docs/*", "*.egg-info"]
{% endif -%}

{%- if cookiecutter.use_bandit == "yes" %}
[tool.bandit]
exclude_dirs = ["tests"]
targets = "./"
{% endif -%}

{%- if cookiecutter.use_vulture == "yes" %}
[tool.vulture]
exclude = ["tests"]
ignore_decorators = []
ignore_names = []
make_whitelist = true
min_confidence = 80
paths = ["./"]
sort_by_size = true
verbose = false
{% endif -%}

{%- if cookiecutter.use_ruff_linter == "yes" or cookiecutter.use_ruff_formatter == "yes" %}
[tool.ruff]
line-length = 79
force-exclude = true
src = ["./"]
exclude = [
  'docs',
]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "D",   # pydocstyle
  "YTT", # flake8-2020
  "RUF", # Ruff-specific rules
  "I001",  # isort
]
fixable = ["I001"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
# Use a single line between direct and from import
lines-between-types = 1

[tool.ruff.format]
quote-style = "single"
{% endif -%}

{%- if cookiecutter.use_mypy == "yes" %}
[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
strict = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
exclude = ["scripts/"]
{% endif -%}
