[project]
name = "dsws-client"
version = "1.1.3"
description = "Python client for the Datastream Web Service API (DSWS)"
readme = "README.md"
authors = [
    { name = "ljnsn", email = "info@ljnsn.com" },
]
requires-python = ">=3.8,<4.0"
dependencies = [
    "attrs>=23.1.0",
    "httpx>=0.27.0",
    "msgspec>=0.18.6",
    "python-dotenv>=1.0.0",
    "setuptools; python_version >= \"3.12\"",
    "typing-extensions>=4.11.0; python_version < \"3.10\"",
]

[project.license]
text = "MIT"

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = [
    "commitizen>=2.42.0",
    "cz-conventional-gitmoji>=0.1.3",
    "ipython>=8.12.3",
    "mypy>=1.2.0",
    "pre-commit>=2.0",
    "pytest-cov>=4",
    "pytest>=7.3.1",
    "ruff>=0.0.269",
    "types-requests>=2.29.0.0",
]

[tool.pdm.build]
includes = [
    "dsws_client",
]

[tool.pdm.scripts]
lint = "./scripts/lint.sh"
test = "./scripts/test.sh"

[tool.commitizen]
name = "cz_gitmoji"
version_provider = "pep621"
tag_format = "v$version"
bump_message = "ðŸ”– bump(release): v$current_version â†’ v$new_version"
update_changelog_on_bump = true
annotate_tags = true

[tool.black]
line-length = 88
target-version = [
    "py38",
]

[tool.coverage.run]
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = [
    "dsws_client",
]

[tool.coverage.report]
fail_under = 50
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.xml]
output = "reports/coverage.xml"

[tool.mypy]
junit_xml = "reports/mypy.xml"
strict = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true
namespace_packages = true
explicit_package_bases = true

[tool.ruff]
fix = true
target-version = "py38"
src = [
    "dsws_client",
    "tests",
]

[tool.ruff.lint]
select = [
    "A",
    "ANN",
    "ARG",
    "B",
    "BLE",
    "C4",
    "D",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PGH",
    "PIE",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PT",
    "Q",
    "RET",
    "RUF",
    "S",
    "SIM",
    "T10",
    "T20",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "D100",
    "D107",
    "D212",
    "A003",
    "ANN101",
    "ANN102",
    "ANN401",
    "EM101",
    "FBT001",
    "FBT002",
    "FBT003",
]
unfixable = [
    "ERA001",
    "F401",
    "F841",
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = [
    "FBT001",
    "S101",
    "PLR2004",
    "S311",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
]

[tool.pytest.ini_options]
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-markers --strict-config --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::ResourceWarning",
]
testpaths = [
    "dsws_client",
    "tests",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"
