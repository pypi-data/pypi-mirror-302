# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: coagmeasurement.proto
# Protobuf Python Version: 4.25.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import record_auditinfo_pb2 as record__auditinfo__pb2
import jsonTicksDateTime_pb2 as jsonTicksDateTime__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x63oagmeasurement.proto\x1a\x16record_auditinfo.proto\x1a\x17jsonTicksDateTime.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x9a\x02\n\x0f\x43oagMeasurement\x12\n\n\x02id\x18\x01 \x01(\t\x12/\n\x13measurementDateTime\x18\x02 \x01(\x0b\x32\x12.JsonTicksDateTime\x12\x38\n\x12operationTwinRefId\x18\x03 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12\x38\n\x12telemetryTwinRefId\x18\x04 \x01(\x0b\x32\x1c.google.protobuf.StringValue\x12+\n\x05value\x18\x05 \x01(\x0b\x32\x1c.google.protobuf.DoubleValue\x12)\n\x0frecordAuditInfo\x18\x63 \x01(\x0b\x32\x10.RecordAuditInfo\"3\n\x10\x43oagMeasurements\x12\x1f\n\x05items\x18\x01 \x03(\x0b\x32\x10.CoagMeasurementB\x14\xaa\x02\x11ONE.Models.CSharpb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'coagmeasurement_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\252\002\021ONE.Models.CSharp'
  _globals['_COAGMEASUREMENT']._serialized_start=107
  _globals['_COAGMEASUREMENT']._serialized_end=389
  _globals['_COAGMEASUREMENTS']._serialized_start=391
  _globals['_COAGMEASUREMENTS']._serialized_end=442
# @@protoc_insertion_point(module_scope)
