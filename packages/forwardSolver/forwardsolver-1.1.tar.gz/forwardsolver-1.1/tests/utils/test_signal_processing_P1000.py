import numpy as np

from forwardSolver.scripts.utils.signal_processing_P1000 import SignalProcessorP1000


def test_signal_processing_capacitance_array():
    """
    Ensures that SignalProcessorP1000.calculateCapacitanceArray() and SignalProcessorP1000.calculate()
    give the same results for the same electrode pairs.
    """

    N_electrodes = 11
    num_transmitter = 6  # ID of transmitter electrode (-)
    c_receive_multiplexer_off = (
        10 * 1e-12 * np.ones(N_electrodes)
    )  # capacitance of receive circuit (Farads)
    r_pulldown_on_receive = (
        0.470 * 1e6 * np.ones(N_electrodes)
    )  # resistance of receive circuit (Ohms)
    t = np.array(
        [
            0.0e00,
            5.0e-07,
            1.0e-06,
            1.5e-06,
            2.0e-06,
            2.5e-06,
            3.0e-06,
            3.5e-06,
            4.0e-06,
            4.5e-06,
            5.0e-06,
            5.5e-06,
            6.0e-06,
            6.5e-06,
            7.0e-06,
            7.5e-06,
            8.0e-06,
            8.5e-06,
            9.0e-06,
            9.5e-06,
        ]
    )
    V = np.array(
        [
            [
                0.00000000e00,
                -0.00000000e00,
                5.26701352e-03,
                4.79851350e-03,
                4.37237323e-03,
                3.98515316e-03,
                3.63270094e-03,
                3.31226845e-03,
                3.02089174e-03,
                2.75548411e-03,
                2.51409242e-03,
                2.29433499e-03,
                2.09435034e-03,
                1.91222471e-03,
                1.74627433e-03,
                1.59519251e-03,
                1.45764679e-03,
                1.33211238e-03,
                1.21750696e-03,
                1.11309236e-03,
            ],
            [
                0.00000000e00,
                -0.00000000e00,
                6.65543617e-03,
                6.05362362e-03,
                5.50695957e-03,
                5.01083270e-03,
                4.56010486e-03,
                4.15118587e-03,
                3.77979878e-03,
                3.44223263e-03,
                3.13505463e-03,
                2.85624079e-03,
                2.60290345e-03,
                2.37262753e-03,
                2.16298456e-03,
                1.97258595e-03,
                1.79902612e-03,
                1.64129547e-03,
                1.49741155e-03,
                1.36683644e-03,
            ],
            [
                0.00000000e00,
                -0.00000000e00,
                1.15580924e-02,
                1.05489238e-02,
                9.62896379e-03,
                8.79014659e-03,
                8.02689249e-03,
                7.33021964e-03,
                6.69494046e-03,
                6.11599178e-03,
                5.58679312e-03,
                5.10527210e-03,
                4.66651469e-03,
                4.26595665e-03,
                3.90119516e-03,
                3.56761181e-03,
                3.26310324e-03,
                2.98563003e-03,
                2.73196304e-03,
                2.50047024e-03,
            ],
            [
                0.00000000e00,
                -0.00000000e00,
                2.55724397e-02,
                2.34874002e-02,
                2.15761017e-02,
                1.98225263e-02,
                1.82138729e-02,
                1.67386916e-02,
                1.53845432e-02,
                1.41419975e-02,
                1.30014169e-02,
                1.19549426e-02,
                1.09937183e-02,
                1.01107195e-02,
                9.30082027e-03,
                8.55617609e-03,
                7.87223752e-03,
                7.24411190e-03,
                6.66698076e-03,
                6.13715674e-03,
            ],
            [
                0.00000000e00,
                -0.00000000e00,
                7.75283790e-02,
                7.21186892e-02,
                6.70892503e-02,
                6.24141292e-02,
                5.80689080e-02,
                5.40292223e-02,
                5.02721982e-02,
                4.67819737e-02,
                4.35366025e-02,
                4.05167310e-02,
                3.77119862e-02,
                3.51003231e-02,
                3.26717842e-02,
                3.04126152e-02,
                2.83114306e-02,
                2.63558187e-02,
                2.45351808e-02,
                2.28445600e-02,
            ],
            [
                0.00000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
                2.50000000e00,
            ],
            [
                0.00000000e00,
                -0.00000000e00,
                7.77399472e-02,
                7.23159410e-02,
                6.72748010e-02,
                6.25892224e-02,
                5.82339308e-02,
                5.41842887e-02,
                5.04201175e-02,
                4.69206319e-02,
                4.36661028e-02,
                4.06395179e-02,
                3.78252299e-02,
                3.52076570e-02,
                3.27730443e-02,
                3.05081616e-02,
                2.84010710e-02,
                2.64414203e-02,
                2.46181189e-02,
                2.29218661e-02,
            ],
            [
                0.00000000e00,
                -0.00000000e00,
                2.52869366e-02,
                2.32248733e-02,
                2.13337407e-02,
                1.95991353e-02,
                1.80076097e-02,
                1.65477194e-02,
                1.52080824e-02,
                1.39788576e-02,
                1.28507193e-02,
                1.18151578e-02,
                1.08642757e-02,
                9.99132637e-03,
                9.18996988e-03,
                8.45389844e-03,
                7.77799455e-03,
                7.15700944e-03,
                6.58675326e-03,
                6.06264932e-03,
            ],
            [
                0.00000000e00,
                -0.00000000e00,
                1.15989673e-02,
                1.05861463e-02,
                9.66328190e-03,
                8.82233031e-03,
                8.05592940e-03,
                7.35734846e-03,
                6.72054033e-03,
                6.13988081e-03,
                5.61042653e-03,
                5.12749488e-03,
                4.68703061e-03,
                4.28523382e-03,
                3.91857800e-03,
                3.58401831e-03,
                3.27869344e-03,
                2.99988565e-03,
                2.74541132e-03,
                2.51301583e-03,
            ],
            [
                0.00000000e00,
                -0.00000000e00,
                6.59135641e-03,
                5.99493741e-03,
                5.45343695e-03,
                4.96174121e-03,
                4.51520561e-03,
                4.10963301e-03,
                3.74121607e-03,
                3.40650258e-03,
                3.10236043e-03,
                2.82596037e-03,
                2.57473226e-03,
                2.34634785e-03,
                2.13869262e-03,
                1.94985687e-03,
                1.77810321e-03,
                1.62185971e-03,
                1.47970105e-03,
                1.35033064e-03,
            ],
            [
                0.00000000e00,
                -0.00000000e00,
                5.25036068e-03,
                4.78366203e-03,
                4.35933432e-03,
                3.97346873e-03,
                3.62252120e-03,
                3.30327813e-03,
                3.01282532e-03,
                2.74851981e-03,
                2.50796448e-03,
                2.28898486e-03,
                2.08960836e-03,
                1.90804536e-03,
                1.74267192e-03,
                1.59201449e-03,
                1.45473562e-03,
                1.32962144e-03,
                1.21557005e-03,
                1.11158094e-03,
            ],
        ]
    )

    signal_processor = SignalProcessorP1000()

    capacitance_array = signal_processor.calculate(
        t, V, num_transmitter, c_receive_multiplexer_off, r_pulldown_on_receive
    )

    for i in range(N_electrodes):
        capacitance_single = signal_processor.calculate_single_capacitance(
            t,
            V,
            num_transmitter,
            i + 1,
            c_receive_multiplexer_off,
            r_pulldown_on_receive,
        )
        if num_transmitter != i + 1:  # To avoid a nan == nan error
            assert capacitance_single == capacitance_array[i]
