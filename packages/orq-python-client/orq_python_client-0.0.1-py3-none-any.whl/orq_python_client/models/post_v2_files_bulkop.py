"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from datetime import datetime
import dateutil.parser
from enum import Enum
from orq_python_client.types import BaseModel
from orq_python_client.utils import FieldMetadata
import pydantic
from typing import Any, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class PostV2FilesBulkPurpose(str, Enum):
    r"""The intended purpose of the uploaded file."""

    RETRIEVAL = "retrieval"


class PostV2FilesBulkRequestBodyTypedDict(TypedDict):
    files: List[Any]
    r"""The file to be uploaded."""
    purpose: PostV2FilesBulkPurpose
    r"""The intended purpose of the uploaded file."""


class PostV2FilesBulkRequestBody(BaseModel):
    files: Annotated[List[Any], FieldMetadata(multipart=True)]
    r"""The file to be uploaded."""

    purpose: Annotated[PostV2FilesBulkPurpose, FieldMetadata(multipart=True)]
    r"""The intended purpose of the uploaded file."""


class PostV2FilesBulkFilesPurpose(str, Enum):
    r"""The intended purpose of the uploaded file."""

    RETRIEVAL = "retrieval"


class ResponseBodyTypedDict(TypedDict):
    id: str
    object_name: str
    r"""path to the file in the storage"""
    purpose: PostV2FilesBulkFilesPurpose
    r"""The intended purpose of the uploaded file."""
    bytes: float
    file_name: str
    created: NotRequired[datetime]
    r"""The date and time the resource was created"""


class ResponseBody(BaseModel):
    id: Annotated[str, pydantic.Field(alias="_id")]

    object_name: str
    r"""path to the file in the storage"""

    purpose: PostV2FilesBulkFilesPurpose
    r"""The intended purpose of the uploaded file."""

    bytes: float

    file_name: str

    created: Optional[datetime] = dateutil.parser.isoparse("2024-10-14T12:39:39.273Z")
    r"""The date and time the resource was created"""
