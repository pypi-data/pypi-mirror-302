"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FeatureType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FeatureTypeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FeatureType.ValueType], builtins.type
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    BOOL: _FeatureType.ValueType  # 0
    INT32: _FeatureType.ValueType  # 1
    INT64: _FeatureType.ValueType  # 2
    FLOAT: _FeatureType.ValueType  # 3
    DOUBLE: _FeatureType.ValueType  # 4
    STRING: _FeatureType.ValueType  # 5
    TIMESTAMP: _FeatureType.ValueType  # 6
    LIST_BOOL: _FeatureType.ValueType  # 7
    LIST_BYTE: _FeatureType.ValueType  # 8
    LIST_INT32: _FeatureType.ValueType  # 9
    LIST_INT64: _FeatureType.ValueType  # 10
    LIST_FLOAT: _FeatureType.ValueType  # 11
    LIST_DOUBLE: _FeatureType.ValueType  # 12
    LIST_STRING: _FeatureType.ValueType  # 13

class FeatureType(_FeatureType, metaclass=_FeatureTypeEnumTypeWrapper): ...

BOOL: FeatureType.ValueType  # 0
INT32: FeatureType.ValueType  # 1
INT64: FeatureType.ValueType  # 2
FLOAT: FeatureType.ValueType  # 3
DOUBLE: FeatureType.ValueType  # 4
STRING: FeatureType.ValueType  # 5
TIMESTAMP: FeatureType.ValueType  # 6
LIST_BOOL: FeatureType.ValueType  # 7
LIST_BYTE: FeatureType.ValueType  # 8
LIST_INT32: FeatureType.ValueType  # 9
LIST_INT64: FeatureType.ValueType  # 10
LIST_FLOAT: FeatureType.ValueType  # 11
LIST_DOUBLE: FeatureType.ValueType  # 12
LIST_STRING: FeatureType.ValueType  # 13
global___FeatureType = FeatureType

@typing.final
class FeatureSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    type: global___FeatureType.ValueType
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        type: global___FeatureType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name", "type", b"type"]) -> None: ...

global___FeatureSpec = FeatureSpec

@typing.final
class FeatureReference(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    FEATURE_VIEW_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    feature_view: builtins.str
    name: builtins.str
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        feature_view: builtins.str = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["feature_view", b"feature_view", "name", b"name", "namespace", b"namespace"]
    ) -> None: ...

global___FeatureReference = FeatureReference
