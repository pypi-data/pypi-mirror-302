# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: global_vo_grpc_service/protos/task_api.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from global_vo_grpc_service.protos import utils_pb2 as global__vo__grpc__service_dot_protos_dot_utils__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n,global_vo_grpc_service/protos/task_api.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a)global_vo_grpc_service/protos/utils.proto\"\xe3\x01\n\x04Task\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x11\n\treview_id\x18\x02 \x01(\x05\x12\x13\n\x0b\x61ssigned_to\x18\x03 \x01(\x05\x12\x12\n\ncreated_by\x18\x04 \x01(\x05\x12\x12\n\nupdated_by\x18\x05 \x01(\x05\x12.\n\ncreated_at\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12.\n\nupdated_at\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x11\n\tparent_id\x18\x08 \x01(\x05\x12\x0c\n\x04type\x18\t \x01(\t\"-\n\x1cListCurrentUsersTasksRequest\x12\r\n\x05query\x18\x01 \x01(\t\"W\n\x1dListCurrentUsersTasksResponse\x12 \n\x0b\x63hange_type\x18\x01 \x01(\x0e\x32\x0b.ChangeType\x12\x14\n\x05tasks\x18\x02 \x03(\x0b\x32\x05.Task\"4\n\x10ListTasksRequest\x12\r\n\x05query\x18\x01 \x01(\t\x12\x11\n\treview_id\x18\x02 \x01(\x05\"K\n\x11ListTasksResponse\x12 \n\x0b\x63hange_type\x18\x01 \x01(\x0e\x32\x0b.ChangeType\x12\x14\n\x05tasks\x18\x02 \x03(\x0b\x32\x05.Task\"\xc5\x01\n\x16\x43reateAuditTaskRequest\x12\x11\n\treview_id\x18\x01 \x01(\x05\x12\x0f\n\x07task_id\x18\x02 \x01(\x05\x12.\n\nstart_date\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_date\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x14\n\x0cstate_set_by\x18\x05 \x01(\x05\x12\x13\n\x0bsample_size\x18\x06 \x01(\x05\"L\n\x17\x43reateAuditTaskResponse\x12 \n\x0b\x63hange_type\x18\x01 \x01(\x0e\x32\x0b.ChangeType\x12\x0f\n\x07task_id\x18\x02 \x01(\x05\"A\n\x19UpdateTaskAssigneeRequest\x12\x0f\n\x07task_id\x18\x01 \x01(\x05\x12\x13\n\x0b\x61ssigned_to\x18\x02 \x01(\x05\"S\n\x1aUpdateTaskAssigneeResponse\x12 \n\x0b\x63hange_type\x18\x01 \x01(\x0e\x32\x0b.ChangeType\x12\x13\n\x04task\x18\x02 \x01(\x0b\x32\x05.Task2\xaa\x02\n\x07TaskApi\x12V\n\x15ListCurrentUsersTasks\x12\x1d.ListCurrentUsersTasksRequest\x1a\x1e.ListCurrentUsersTasksResponse\x12\x32\n\tListTasks\x12\x11.ListTasksRequest\x1a\x12.ListTasksResponse\x12\x44\n\x0f\x43reateAuditTask\x12\x17.CreateAuditTaskRequest\x1a\x18.CreateAuditTaskResponse\x12M\n\x12UpdateTaskAssignee\x12\x1a.UpdateTaskAssigneeRequest\x1a\x1b.UpdateTaskAssigneeResponseb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'global_vo_grpc_service.protos.task_api_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TASK._serialized_start=125
  _TASK._serialized_end=352
  _LISTCURRENTUSERSTASKSREQUEST._serialized_start=354
  _LISTCURRENTUSERSTASKSREQUEST._serialized_end=399
  _LISTCURRENTUSERSTASKSRESPONSE._serialized_start=401
  _LISTCURRENTUSERSTASKSRESPONSE._serialized_end=488
  _LISTTASKSREQUEST._serialized_start=490
  _LISTTASKSREQUEST._serialized_end=542
  _LISTTASKSRESPONSE._serialized_start=544
  _LISTTASKSRESPONSE._serialized_end=619
  _CREATEAUDITTASKREQUEST._serialized_start=622
  _CREATEAUDITTASKREQUEST._serialized_end=819
  _CREATEAUDITTASKRESPONSE._serialized_start=821
  _CREATEAUDITTASKRESPONSE._serialized_end=897
  _UPDATETASKASSIGNEEREQUEST._serialized_start=899
  _UPDATETASKASSIGNEEREQUEST._serialized_end=964
  _UPDATETASKASSIGNEERESPONSE._serialized_start=966
  _UPDATETASKASSIGNEERESPONSE._serialized_end=1049
  _TASKAPI._serialized_start=1052
  _TASKAPI._serialized_end=1350
# @@protoc_insertion_point(module_scope)
