# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .company_response import CompanyResponse
from .deal_data_availablity_response import DealDataAvailablityResponse
from .file_response import FileResponse
from .priority import Priority
from .status import Status


class DealWithFilesResponse(pydantic_v1.BaseModel):
    name: str
    round_name: str = pydantic_v1.Field()
    """
    The name of the round
    """

    status: Status = pydantic_v1.Field()
    """
    The status of the deal
    """

    notes: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    Notes about the deal
    """

    priority: typing.Optional[Priority] = pydantic_v1.Field(default=None)
    """
    The priority of the deal
    """

    round_amount: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    The dollar amount to be raised of the round
    """

    round_target: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    The target post-money dollar amount of the round
    """

    tags: typing.Optional[typing.List[str]] = pydantic_v1.Field(default=None)
    """
    The tags associated with the deal
    """

    id: int
    created_at: typing.Optional[dt.datetime] = None
    updated_at: typing.Optional[dt.datetime] = None
    is_archived: typing.Optional[bool] = None
    company: CompanyResponse
    files: typing.Optional[typing.List[FileResponse]] = None
    data: typing.Optional[DealDataAvailablityResponse] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
