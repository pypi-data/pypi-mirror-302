# coding: utf-8

"""
    Zadara VPSA Object Storage REST API

    # Overview  This document outlines the methods available for administrating your VPSA&#174; Object Storage. The API supports form-encoded, JSON, and XML requests, and can return either JSON or XML responses.  ## Usage  The majority of the APIs available require authentication which requires an API token to use. You can retrieve this token through the Users section of your VPSA, or through the API using the \"Return a user's access key\" API in the Users Section below.  ## Authentication Methods  The authentication token can be passed either through the access_key parameter inside of the body of the REST API request, or through the X-Access-Key header. Alternately, you can use the username and password parameters for authentication, but we do not recommend this method for anything other than possibly retrieving an API key.  By default , all operations are allowed only to VPSA Object Storage admin. Some actions are allowed by an account admin and they will be marked on the action's header  ## Timeouts  By default, all operations that don't complete within five seconds will return a message informing you that the action may take some time to complete. When using the API, this can cause some actions, such as adding drives to storage policy, to be undesirably asynchronous. You can specify your own timeout with the timeout parameter, in seconds, and a timeout value of -1 specifies an infinite timeout.  ## Metering API  Metering information can be retrieved using the VPSA Object Storage API for the following components:  - Accounts - Users - Drives - Virtual Controllers - Load Balancer Groups - Storage Policies  Metering information returned by the API is subject to the following constraints:  - 10 seconds interval - 1 hour range - 1 minute interval - 1 day range - 1 hour interval - 30 days range  Values outside the accepted range will be returned as 0.  ## Questions  If you have any questions or need support involving the REST API, please contact for assistance.   # noqa: E501

    OpenAPI spec version: 23.09-sp2
    Contact: support@zadarastorage.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import Zios
from Zios.api.settings_api import SettingsApi  # noqa: E501
from Zios.rest import ApiException


class TestSettingsApi(unittest.TestCase):
    """SettingsApi unit test stubs"""

    def setUp(self):
        self.api = Zios.api.settings_api.SettingsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_activate_encryption(self):
        """Test case for activate_encryption

        """
        pass

    def test_allow_tenant_name_in_object_stroage_url(self):
        """Test case for allow_tenant_name_in_object_stroage_url

        """
        pass

    def test_change_mtu_for_network_interface(self):
        """Test case for change_mtu_for_network_interface

        """
        pass

    def test_change_region(self):
        """Test case for change_region

        """
        pass

    def test_define_custom_dns_servers(self):
        """Test case for define_custom_dns_servers

        """
        pass

    def test_disable_encryption(self):
        """Test case for disable_encryption

        """
        pass

    def test_get_network(self):
        """Test case for get_network

        """
        pass

    def test_get_quota_alert_status_and_threshold(self):
        """Test case for get_quota_alert_status_and_threshold

        """
        pass

    def test_get_settings_config(self):
        """Test case for get_settings_config

        """
        pass

    def test_get_ssl_cert_info(self):
        """Test case for get_ssl_cert_info

        """
        pass

    def test_restore_encryption(self):
        """Test case for restore_encryption

        """
        pass

    def test_set_api_errors_alerts(self):
        """Test case for set_api_errors_alerts

        """
        pass

    def test_set_api_hostname(self):
        """Test case for set_api_hostname

        """
        pass

    def test_set_api_ip(self):
        """Test case for set_api_ip

        """
        pass

    def test_set_billing_currency(self):
        """Test case for set_billing_currency

        """
        pass

    def test_set_containers_virtual_hosted_style_support(self):
        """Test case for set_containers_virtual_hosted_style_support

        """
        pass

    def test_set_data_transfer_pricing(self):
        """Test case for set_data_transfer_pricing

        """
        pass

    def test_set_encryption(self):
        """Test case for set_encryption

        """
        pass

    def test_set_global_rate_limit(self):
        """Test case for set_global_rate_limit

        """
        pass

    def test_set_gradual_policy_expansion_percentage(self):
        """Test case for set_gradual_policy_expansion_percentage

        """
        pass

    def test_set_lb_mode(self):
        """Test case for set_lb_mode

        """
        pass

    def test_set_public_ip_hostname(self):
        """Test case for set_public_ip_hostname

        """
        pass

    def test_set_quota_alert_status_and_threshold(self):
        """Test case for set_quota_alert_status_and_threshold

        """
        pass

    def test_ssl_termination(self):
        """Test case for ssl_termination

        """
        pass

    def test_token_expiration(self):
        """Test case for token_expiration

        """
        pass

    def test_upload_ssl_pem(self):
        """Test case for upload_ssl_pem

        """
        pass


if __name__ == '__main__':
    unittest.main()
