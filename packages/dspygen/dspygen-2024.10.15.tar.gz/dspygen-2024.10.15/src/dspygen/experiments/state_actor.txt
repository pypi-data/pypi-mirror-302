{'service_colony': <dspygen.rdddy.service_colony.ServiceColony object at 0x1570eeda0>, 'inhabitant_id': 5755562608, 'mailbox': <reactivex.subject.subject.Subject object at 0x1570eead0>, 'handlers': {<class '__main__.AskQuestionCommand'>: <bound method StateInhabitant.handle_cmd of <__main__.StateActor object at 0x1570eea70>>}, 'trigger': functools.partial(<bound method Machine._get_trigger of <transitions.core.Machine object at 0x1570eeb60>>, <__main__.StateActor object at 0x1570eea70>), 'to_idle': functools.partial(<bound method Event.trigger of <Event('to_idle')@5755567264>>, <__main__.StateActor object at 0x1570eea70>), 'may_to_idle': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x1570eeb60>>, <__main__.StateActor object at 0x1570eea70>, 'to_idle'), 'to_asking': functools.partial(<bound method Event.trigger of <Event('to_asking')@5755567552>>, <__main__.StateActor object at 0x1570eea70>), 'may_to_asking': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x1570eeb60>>, <__main__.StateActor object at 0x1570eea70>, 'to_asking'), 'to_waiting_for_answer': functools.partial(<bound method Event.trigger of <Event('to_waiting_for_answer')@5755567888>>, <__main__.StateActor object at 0x1570eea70>), 'may_to_waiting_for_answer': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x1570eeb60>>, <__main__.StateActor object at 0x1570eea70>, 'to_waiting_for_answer'), 'to_IDLE': functools.partial(<bound method Event.trigger of <Event('to_IDLE')@5755764992>>, <__main__.StateActor object at 0x1570eea70>), 'may_to_IDLE': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x1570eeb60>>, <__main__.StateActor object at 0x1570eea70>, 'to_IDLE'), 'is_idle': functools.partial(<bound method Machine.is_state of <transitions.core.Machine object at 0x1570eeb60>>, 'idle', <__main__.StateActor object at 0x1570eea70>), 'is_asking': functools.partial(<bound method Machine.is_state of <transitions.core.Machine object at 0x1570eeb60>>, 'asking', <__main__.StateActor object at 0x1570eea70>), 'is_waiting_for_answer': functools.partial(<bound method Machine.is_state of <transitions.core.Machine object at 0x1570eeb60>>, 'waiting_for_answer', <__main__.StateActor object at 0x1570eea70>), 'is_IDLE': functools.partial(<bound method Machine.is_state of <transitions.core.Machine object at 0x1570eeb60>>, 'IDLE', <__main__.StateActor object at 0x1570eea70>), 'state': 'IDLE', 'machine': <transitions.core.Machine object at 0x1570eeb60>, 'ask': functools.partial(<bound method Event.trigger of <Event('ask')@5755765568>>, <__main__.StateActor object at 0x1570eea70>), 'may_ask': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x1570eeb60>>, <__main__.StateActor object at 0x1570eea70>, 'ask'), 'receive_answer': functools.partial(<bound method Event.trigger of <Event('receive_answer')@5755765712>>, <__main__.StateActor object at 0x1570eea70>), 'may_receive_answer': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x1570eeb60>>, <__main__.StateActor object at 0x1570eea70>, 'receive_answer')}{'service_colony': <dspygen.rdddy.service_colony.ServiceColony object at 0x137212e00>, 'inhabitant_id': 5219887824, 'mailbox': <reactivex.subject.subject.Subject object at 0x137212b30>, 'handlers': {<class '__main__.AskQuestionCommand'>: <bound method StateInhabitant.handle_cmd of <__main__.StateActor object at 0x137212ad0>>}, 'trigger': functools.partial(<bound method Machine._get_trigger of <transitions.core.Machine object at 0x137212bc0>>, <__main__.StateActor object at 0x137212ad0>), 'to_IDLE': functools.partial(<bound method Event.trigger of <Event('to_IDLE')@5219892480>>, <__main__.StateActor object at 0x137212ad0>), 'may_to_IDLE': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x137212bc0>>, <__main__.StateActor object at 0x137212ad0>, 'to_IDLE'), 'to_ASKING': functools.partial(<bound method Event.trigger of <Event('to_ASKING')@5219892768>>, <__main__.StateActor object at 0x137212ad0>), 'may_to_ASKING': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x137212bc0>>, <__main__.StateActor object at 0x137212ad0>, 'to_ASKING'), 'to_WAITING_FOR_ANSWER': functools.partial(<bound method Event.trigger of <Event('to_WAITING_FOR_ANSWER')@5219893104>>, <__main__.StateActor object at 0x137212ad0>), 'may_to_WAITING_FOR_ANSWER': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x137212bc0>>, <__main__.StateActor object at 0x137212ad0>, 'to_WAITING_FOR_ANSWER'), 'is_IDLE': functools.partial(<bound method Machine.is_state of <transitions.core.Machine object at 0x137212bc0>>, 'IDLE', <__main__.StateActor object at 0x137212ad0>), 'is_ASKING': functools.partial(<bound method Machine.is_state of <transitions.core.Machine object at 0x137212bc0>>, 'ASKING', <__main__.StateActor object at 0x137212ad0>), 'is_WAITING_FOR_ANSWER': functools.partial(<bound method Machine.is_state of <transitions.core.Machine object at 0x137212bc0>>, 'WAITING_FOR_ANSWER', <__main__.StateActor object at 0x137212ad0>), 'state': 'IDLE', 'machine': <transitions.core.Machine object at 0x137212bc0>, 'ask': functools.partial(<bound method Event.trigger of <Event('ask')@5222039904>>, <__main__.StateActor object at 0x137212ad0>), 'may_ask': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x137212bc0>>, <__main__.StateActor object at 0x137212ad0>, 'ask'), 'receive_answer': functools.partial(<bound method Event.trigger of <Event('receive_answer')@5222040048>>, <__main__.StateActor object at 0x137212ad0>), 'may_receive_answer': functools.partial(<bound method Machine._can_trigger of <transitions.core.Machine object at 0x137212bc0>>, <__main__.StateActor object at 0x137212ad0>, 'receive_answer')}