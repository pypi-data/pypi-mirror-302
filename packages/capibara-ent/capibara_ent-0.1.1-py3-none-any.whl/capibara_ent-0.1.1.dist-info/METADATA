Metadata-Version: 2.1
Name: capibara-ent
Version: 0.1.1
Summary: Un modelo de lenguaje avanzado que integra Mamba SSM, manejo multilingüe y características éticas
Home-page: https://www.anachroni.co
Author: Marco Durán
Author-email: marco@anachcroni.co
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: torch >=2.0.0
Requires-Dist: numpy >=1.21.0
Requires-Dist: matplotlib >=3.4.3
Requires-Dist: tqdm >=4.62.0
Requires-Dist: scikit-learn >=0.24.2
Requires-Dist: pandas >=1.3.0
Requires-Dist: transformers >=4.30.0
Requires-Dist: tensorboard >=2.6.0
Requires-Dist: wandb >=0.12.0
Requires-Dist: mamba-ssm >=1.0.0
Requires-Dist: langdetect >=1.0.9
Requires-Dist: fastapi >=0.68.0
Requires-Dist: uvicorn >=0.15.0
Provides-Extra: dev
Requires-Dist: pytest >=6.2.4 ; extra == 'dev'
Requires-Dist: black >=21.7b0 ; extra == 'dev'
Requires-Dist: flake8 >=3.9.2 ; extra == 'dev'
Requires-Dist: isort >=5.9.3 ; extra == 'dev'
Requires-Dist: mypy >=0.910 ; extra == 'dev'
Requires-Dist: pytest-cov >=2.12.0 ; extra == 'dev'
Requires-Dist: pre-commit >=2.15.0 ; extra == 'dev'
Provides-Extra: gpu
Requires-Dist: cupy-cuda11x >=11.0.0 ; extra == 'gpu'
Provides-Extra: tpu
Requires-Dist: torch-xla >=1.9.0 ; extra == 'tpu'

# CapibaraENT CLI

CapibaraENT is a command-line tool for training, evaluating, and deploying Capibara-based language models, optimized for TPUs.

## Features

- Training and evaluation of Capibara models
- Built-in TPU support
- Model deployment
- Performance measurement
- Docker container execution
- Model deserialization from JSON

## Requirements

- Python 3.7+
- PyTorch 1.8+
- PyTorch/XLA
- Docker (optional, for container execution)

## Installation

1. Clone this repository:

 ```bash
   git clone https://github.com/your-username/capibaraent-cli.git
   cd capibaraent-cli
   ```

1. Install dependencies:

```bash
   pip install -r requirements.txt
   ```

## Usage

The CapibaraENT CLI offers various options for working with Capibara models:

```bash
python capibaraent_cli.py [options]

```

Available options:

- `--log-level`: Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
- `--train`: Train the model
- `--evaluate`: Evaluate the model
- `--use-docker`: Run the model inside Docker
- `--deserialize-model`: Deserialize the model from JSON
- `--deploy`: Deploy the model
- `--measure-performance`: Measure the model's performance
- `--model`: Path to the model JSON file (for deserialization)

### Usage Examples

1. Train a model:

```bash
   python capibaraent_cli.py --train
 ```

2. Evaluate a model:

```bash
   python capibaraent_cli.py --evaluate
 ```

3. Deploy a model:

```bash
   python capibaraent_cli.py --deploy
   ```

5. Measure model performance:

   ```bash
   python capibaraent_cli.py --measure-performance
   ```

6. Run a model in Docker:

   ```bash
   python capibaraent_cli.py --use-docker
   ```

7. Deserialize and run a model from JSON:

```bash
   python capibaraent_cli.py --deserialize-model --model model.json
```

## Configuration

Model configuration is handled through the `core/config.py` file. To modify the default settings, edit this file directly. Key configuration parameters include:

- `input_dim`
- `batch_size`
- `learning_rate`
- `device_type`

Example of `core/config.py`:

## Development

To contribute to the project:

1. Fork the repository
2. Create a new branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

Distributed under the MIT License. See `LICENSE` for more information.

## Contact

Marco Durán - <marco@anachroni.co>

Project Link: [https://github.com/anachroni-io/capibaraent-cli](https://github.com/anachroni-io)
