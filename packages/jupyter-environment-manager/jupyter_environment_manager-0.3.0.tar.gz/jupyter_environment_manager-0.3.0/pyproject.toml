[build-system]
requires = ["hatchling>=1.5.0", "jupyterlab>=4.0.0,<5", "hatch-nodejs-version>=0.3.2"]
build-backend = "hatchling.build"

[project]
name = "jupyter_environment_manager"
readme = "README.md"
license = {text = "Proprietary"}
requires-python = ">=3.9"
classifiers = [
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Jupyter :: JupyterLab :: 4",
    "Framework :: Jupyter :: JupyterLab :: Extensions",
    "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "jupyter_server>=2.0.1,<3",
    "tornado>=6.1.0",
    "qbraid-core[environments]>=0.1.18",
]
dynamic = ["version", "description", "authors", "urls", "keywords"]

[project.optional-dependencies]
test = [
    "pytest>=8.2.1",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.7",
    "pytest-jupyter[server]>=0.10.0"
]

[tool.hatch.version]
source = "nodejs"

[tool.hatch.metadata.hooks.nodejs]
fields = ["description", "authors", "urls"]

[tool.hatch.build.targets.sdist]
artifacts = ["jupyter_environment_manager/labextension"]
exclude = [".github", "binder"]

[tool.hatch.build.targets.wheel.shared-data]
"jupyter_environment_manager/labextension" = "share/jupyter/labextensions/@qbraid/jupyter-environment-manager"
"install.json" = "share/jupyter/labextensions/@qbraid/jupyter-environment-manager/install.json"
"jupyter-config/server-config" = "etc/jupyter/jupyter_server_config.d"

[tool.hatch.build.hooks.version]
path = "jupyter_environment_manager/_version.py"

[tool.hatch.build.hooks.jupyter-builder]
dependencies = ["hatch-jupyter-builder>=0.5"]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "jupyter_environment_manager/labextension/static/style.js",
    "jupyter_environment_manager/labextension/package.json",
]
skip-if-exists = ["jupyter_environment_manager/labextension/static/style.js"]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
build_cmd = "build:prod"
npm = ["jlpm"]

[tool.hatch.build.hooks.jupyter-builder.editable-build-kwargs]
build_cmd = "install:extension"
npm = ["jlpm"]
source_dir = "src"
build_dir = "jupyter_environment_manager/labextension"

[tool.jupyter-releaser.options]
version_cmd = "hatch version"

[tool.jupyter-releaser.hooks]
before-build-npm = [
    "python -m pip install 'jupyterlab>=4.0.0,<5'",
    "jlpm",
    "jlpm build:prod"
]
before-build-python = ["jlpm clean:all"]

[tool.check-wheel-contents]
ignore = ["W002"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.__pycache__
  | \.tox
  | \.venv
  | dist
  | _version.py
)/
'''

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 100
disable = "W0223,W0718,R0914"
ignore-patterns = ".*_version.py"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100

[tool.pytest.ini_options]
minversion = "8.2.1"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]