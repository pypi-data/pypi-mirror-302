# This file was auto generated by Styx.
# Do not edit this file directly.

import typing
import pathlib
from styxdefs import *
import dataclasses

SPEC_FILE_MERGE_METADATA = Metadata(
    id="f0e3e9bb1efb3e9b587c3e4d1c09c8775e48d3a6.boutiques",
    name="spec-file-merge",
    package="workbench",
    container_image_tag="brainlife/connectome_workbench:1.5.0-freesurfer-update",
)


class SpecFileMergeOutputs(typing.NamedTuple):
    """
    Output object returned when calling `spec_file_merge(...)`.
    """
    root: OutputPathType
    """Output root folder. This is the root folder for all outputs."""


def spec_file_merge(
    spec_1: str,
    spec_2: str,
    out_spec: str,
    runner: Runner | None = None,
) -> SpecFileMergeOutputs:
    """
    Merge two spec files into one.
    
    The output spec file contains every file that is in either of the input spec
    files.
    
    Author: Washington University School of Medicin
    
    Args:
        spec_1: first spec file to merge.
        spec_2: second spec file to merge.
        out_spec: output - output spec file.
        runner: Command runner.
    Returns:
        NamedTuple of outputs (described in `SpecFileMergeOutputs`).
    """
    runner = runner or get_global_runner()
    execution = runner.start_execution(SPEC_FILE_MERGE_METADATA)
    cargs = []
    cargs.append("wb_command")
    cargs.append("-spec-file-merge")
    cargs.append(spec_1)
    cargs.append(spec_2)
    cargs.append(out_spec)
    ret = SpecFileMergeOutputs(
        root=execution.output_file("."),
    )
    execution.run(cargs)
    return ret


__all__ = [
    "SPEC_FILE_MERGE_METADATA",
    "SpecFileMergeOutputs",
    "spec_file_merge",
]
