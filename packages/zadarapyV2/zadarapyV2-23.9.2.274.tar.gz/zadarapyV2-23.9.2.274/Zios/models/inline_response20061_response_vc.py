# coding: utf-8

"""
    Zadara VPSA Object Storage REST API

    # Overview  This document outlines the methods available for administrating your VPSA&#174; Object Storage. The API supports form-encoded, JSON, and XML requests, and can return either JSON or XML responses.  ## Usage  The majority of the APIs available require authentication which requires an API token to use. You can retrieve this token through the Users section of your VPSA, or through the API using the \"Return a user's access key\" API in the Users Section below.  ## Authentication Methods  The authentication token can be passed either through the access_key parameter inside of the body of the REST API request, or through the X-Access-Key header. Alternately, you can use the username and password parameters for authentication, but we do not recommend this method for anything other than possibly retrieving an API key.  By default , all operations are allowed only to VPSA Object Storage admin. Some actions are allowed by an account admin and they will be marked on the action's header  ## Timeouts  By default, all operations that don't complete within five seconds will return a message informing you that the action may take some time to complete. When using the API, this can cause some actions, such as adding drives to storage policy, to be undesirably asynchronous. You can specify your own timeout with the timeout parameter, in seconds, and a timeout value of -1 specifies an infinite timeout.  ## Metering API  Metering information can be retrieved using the VPSA Object Storage API for the following components:  - Accounts - Users - Drives - Virtual Controllers - Load Balancer Groups - Storage Policies  Metering information returned by the API is subject to the following constraints:  - 10 seconds interval - 1 hour range - 1 minute interval - 1 day range - 1 hour interval - 30 days range  Values outside the accepted range will be returned as 0.  ## Questions  If you have any questions or need support involving the REST API, please contact for assistance.   # noqa: E501

    OpenAPI spec version: 23.09-sp2
    Contact: support@zadarastorage.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from Zios.configuration import Configuration


class InlineResponse20061ResponseVc(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'vc_index': 'int',
        'storage_node': 'str',
        'role': 'str',
        'display_role': 'str',
        'vc_state': 'str',
        'proxy_state': 'str',
        'integrity': 'str',
        'manager_role': 'str',
        'region_id': 'int',
        'zone_id': 'int',
        'policy_type': 'int',
        'allocation_zone': 'str',
        'allocation_zone_display_name': 'str',
        'status': 'str',
        'fe_ip': 'str',
        'fe_ipv6': 'str',
        'be_ip': 'str',
        'lb_group_name': 'str',
        'lb_group_owner': 'str',
        'lb_group_priority': 'int',
        'lb_group_configured': 'str',
        'lb_state': 'str',
        'created_at': 'str',
        'modified_at': 'str'
    }

    attribute_map = {
        'name': 'name',
        'vc_index': 'vc_index',
        'storage_node': 'storage_node',
        'role': 'role',
        'display_role': 'display_role',
        'vc_state': 'vc_state',
        'proxy_state': 'proxy_state',
        'integrity': 'integrity',
        'manager_role': 'manager_role',
        'region_id': 'region_id',
        'zone_id': 'zone_id',
        'policy_type': 'policy_type',
        'allocation_zone': 'allocation-zone',
        'allocation_zone_display_name': 'allocation-zone_display_name',
        'status': 'status',
        'fe_ip': 'fe_ip',
        'fe_ipv6': 'fe_ipv6',
        'be_ip': 'be_ip',
        'lb_group_name': 'lb_group_name',
        'lb_group_owner': 'lb_group_owner',
        'lb_group_priority': 'lb_group_priority',
        'lb_group_configured': 'lb_group_configured',
        'lb_state': 'lb_state',
        'created_at': 'created_at',
        'modified_at': 'modified_at'
    }

    def __init__(self, name=None, vc_index=None, storage_node=None, role=None, display_role=None, vc_state=None, proxy_state=None, integrity=None, manager_role=None, region_id=None, zone_id=None, policy_type=None, allocation_zone=None, allocation_zone_display_name=None, status=None, fe_ip=None, fe_ipv6=None, be_ip=None, lb_group_name=None, lb_group_owner=None, lb_group_priority=None, lb_group_configured=None, lb_state=None, created_at=None, modified_at=None, _configuration=None):  # noqa: E501
        """InlineResponse20061ResponseVc - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._name = None
        self._vc_index = None
        self._storage_node = None
        self._role = None
        self._display_role = None
        self._vc_state = None
        self._proxy_state = None
        self._integrity = None
        self._manager_role = None
        self._region_id = None
        self._zone_id = None
        self._policy_type = None
        self._allocation_zone = None
        self._allocation_zone_display_name = None
        self._status = None
        self._fe_ip = None
        self._fe_ipv6 = None
        self._be_ip = None
        self._lb_group_name = None
        self._lb_group_owner = None
        self._lb_group_priority = None
        self._lb_group_configured = None
        self._lb_state = None
        self._created_at = None
        self._modified_at = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if vc_index is not None:
            self.vc_index = vc_index
        if storage_node is not None:
            self.storage_node = storage_node
        if role is not None:
            self.role = role
        if display_role is not None:
            self.display_role = display_role
        if vc_state is not None:
            self.vc_state = vc_state
        if proxy_state is not None:
            self.proxy_state = proxy_state
        if integrity is not None:
            self.integrity = integrity
        if manager_role is not None:
            self.manager_role = manager_role
        if region_id is not None:
            self.region_id = region_id
        if zone_id is not None:
            self.zone_id = zone_id
        if policy_type is not None:
            self.policy_type = policy_type
        if allocation_zone is not None:
            self.allocation_zone = allocation_zone
        if allocation_zone_display_name is not None:
            self.allocation_zone_display_name = allocation_zone_display_name
        if status is not None:
            self.status = status
        if fe_ip is not None:
            self.fe_ip = fe_ip
        if fe_ipv6 is not None:
            self.fe_ipv6 = fe_ipv6
        if be_ip is not None:
            self.be_ip = be_ip
        if lb_group_name is not None:
            self.lb_group_name = lb_group_name
        if lb_group_owner is not None:
            self.lb_group_owner = lb_group_owner
        if lb_group_priority is not None:
            self.lb_group_priority = lb_group_priority
        if lb_group_configured is not None:
            self.lb_group_configured = lb_group_configured
        if lb_state is not None:
            self.lb_state = lb_state
        if created_at is not None:
            self.created_at = created_at
        if modified_at is not None:
            self.modified_at = modified_at

    @property
    def name(self):
        """Gets the name of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The name of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse20061ResponseVc.


        :param name: The name of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def vc_index(self):
        """Gets the vc_index of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The vc_index of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: int
        """
        return self._vc_index

    @vc_index.setter
    def vc_index(self, vc_index):
        """Sets the vc_index of this InlineResponse20061ResponseVc.


        :param vc_index: The vc_index of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: int
        """

        self._vc_index = vc_index

    @property
    def storage_node(self):
        """Gets the storage_node of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The storage_node of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._storage_node

    @storage_node.setter
    def storage_node(self, storage_node):
        """Sets the storage_node of this InlineResponse20061ResponseVc.


        :param storage_node: The storage_node of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._storage_node = storage_node

    @property
    def role(self):
        """Gets the role of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The role of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this InlineResponse20061ResponseVc.


        :param role: The role of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._role = role

    @property
    def display_role(self):
        """Gets the display_role of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The display_role of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._display_role

    @display_role.setter
    def display_role(self, display_role):
        """Sets the display_role of this InlineResponse20061ResponseVc.


        :param display_role: The display_role of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._display_role = display_role

    @property
    def vc_state(self):
        """Gets the vc_state of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The vc_state of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._vc_state

    @vc_state.setter
    def vc_state(self, vc_state):
        """Sets the vc_state of this InlineResponse20061ResponseVc.


        :param vc_state: The vc_state of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._vc_state = vc_state

    @property
    def proxy_state(self):
        """Gets the proxy_state of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The proxy_state of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._proxy_state

    @proxy_state.setter
    def proxy_state(self, proxy_state):
        """Sets the proxy_state of this InlineResponse20061ResponseVc.


        :param proxy_state: The proxy_state of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._proxy_state = proxy_state

    @property
    def integrity(self):
        """Gets the integrity of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The integrity of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._integrity

    @integrity.setter
    def integrity(self, integrity):
        """Sets the integrity of this InlineResponse20061ResponseVc.


        :param integrity: The integrity of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._integrity = integrity

    @property
    def manager_role(self):
        """Gets the manager_role of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The manager_role of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._manager_role

    @manager_role.setter
    def manager_role(self, manager_role):
        """Sets the manager_role of this InlineResponse20061ResponseVc.


        :param manager_role: The manager_role of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._manager_role = manager_role

    @property
    def region_id(self):
        """Gets the region_id of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The region_id of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: int
        """
        return self._region_id

    @region_id.setter
    def region_id(self, region_id):
        """Sets the region_id of this InlineResponse20061ResponseVc.


        :param region_id: The region_id of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: int
        """

        self._region_id = region_id

    @property
    def zone_id(self):
        """Gets the zone_id of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The zone_id of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: int
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id):
        """Sets the zone_id of this InlineResponse20061ResponseVc.


        :param zone_id: The zone_id of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: int
        """

        self._zone_id = zone_id

    @property
    def policy_type(self):
        """Gets the policy_type of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The policy_type of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: int
        """
        return self._policy_type

    @policy_type.setter
    def policy_type(self, policy_type):
        """Sets the policy_type of this InlineResponse20061ResponseVc.


        :param policy_type: The policy_type of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: int
        """

        self._policy_type = policy_type

    @property
    def allocation_zone(self):
        """Gets the allocation_zone of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The allocation_zone of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._allocation_zone

    @allocation_zone.setter
    def allocation_zone(self, allocation_zone):
        """Sets the allocation_zone of this InlineResponse20061ResponseVc.


        :param allocation_zone: The allocation_zone of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._allocation_zone = allocation_zone

    @property
    def allocation_zone_display_name(self):
        """Gets the allocation_zone_display_name of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The allocation_zone_display_name of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._allocation_zone_display_name

    @allocation_zone_display_name.setter
    def allocation_zone_display_name(self, allocation_zone_display_name):
        """Sets the allocation_zone_display_name of this InlineResponse20061ResponseVc.


        :param allocation_zone_display_name: The allocation_zone_display_name of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._allocation_zone_display_name = allocation_zone_display_name

    @property
    def status(self):
        """Gets the status of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The status of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InlineResponse20061ResponseVc.


        :param status: The status of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def fe_ip(self):
        """Gets the fe_ip of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The fe_ip of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._fe_ip

    @fe_ip.setter
    def fe_ip(self, fe_ip):
        """Sets the fe_ip of this InlineResponse20061ResponseVc.


        :param fe_ip: The fe_ip of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._fe_ip = fe_ip

    @property
    def fe_ipv6(self):
        """Gets the fe_ipv6 of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The fe_ipv6 of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._fe_ipv6

    @fe_ipv6.setter
    def fe_ipv6(self, fe_ipv6):
        """Sets the fe_ipv6 of this InlineResponse20061ResponseVc.


        :param fe_ipv6: The fe_ipv6 of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._fe_ipv6 = fe_ipv6

    @property
    def be_ip(self):
        """Gets the be_ip of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The be_ip of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._be_ip

    @be_ip.setter
    def be_ip(self, be_ip):
        """Sets the be_ip of this InlineResponse20061ResponseVc.


        :param be_ip: The be_ip of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._be_ip = be_ip

    @property
    def lb_group_name(self):
        """Gets the lb_group_name of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The lb_group_name of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._lb_group_name

    @lb_group_name.setter
    def lb_group_name(self, lb_group_name):
        """Sets the lb_group_name of this InlineResponse20061ResponseVc.


        :param lb_group_name: The lb_group_name of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._lb_group_name = lb_group_name

    @property
    def lb_group_owner(self):
        """Gets the lb_group_owner of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The lb_group_owner of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._lb_group_owner

    @lb_group_owner.setter
    def lb_group_owner(self, lb_group_owner):
        """Sets the lb_group_owner of this InlineResponse20061ResponseVc.


        :param lb_group_owner: The lb_group_owner of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._lb_group_owner = lb_group_owner

    @property
    def lb_group_priority(self):
        """Gets the lb_group_priority of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The lb_group_priority of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: int
        """
        return self._lb_group_priority

    @lb_group_priority.setter
    def lb_group_priority(self, lb_group_priority):
        """Sets the lb_group_priority of this InlineResponse20061ResponseVc.


        :param lb_group_priority: The lb_group_priority of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: int
        """

        self._lb_group_priority = lb_group_priority

    @property
    def lb_group_configured(self):
        """Gets the lb_group_configured of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The lb_group_configured of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._lb_group_configured

    @lb_group_configured.setter
    def lb_group_configured(self, lb_group_configured):
        """Sets the lb_group_configured of this InlineResponse20061ResponseVc.


        :param lb_group_configured: The lb_group_configured of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._lb_group_configured = lb_group_configured

    @property
    def lb_state(self):
        """Gets the lb_state of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The lb_state of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._lb_state

    @lb_state.setter
    def lb_state(self, lb_state):
        """Sets the lb_state of this InlineResponse20061ResponseVc.


        :param lb_state: The lb_state of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._lb_state = lb_state

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The created_at of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse20061ResponseVc.


        :param created_at: The created_at of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def modified_at(self):
        """Gets the modified_at of this InlineResponse20061ResponseVc.  # noqa: E501


        :return: The modified_at of this InlineResponse20061ResponseVc.  # noqa: E501
        :rtype: str
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this InlineResponse20061ResponseVc.


        :param modified_at: The modified_at of this InlineResponse20061ResponseVc.  # noqa: E501
        :type: str
        """

        self._modified_at = modified_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20061ResponseVc, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20061ResponseVc):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse20061ResponseVc):
            return True

        return self.to_dict() != other.to_dict()
