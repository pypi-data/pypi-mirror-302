Metadata-Version: 2.3
Name: quivr-core
Version: 0.0.17
Summary: Quivr core RAG package
Author-email: Stan Girard <stan@quivr.app>
Requires-Python: >=3.11
Requires-Dist: aiofiles>=23.1.0
Requires-Dist: httpx>=0.27.0
Requires-Dist: langchain-anthropic>=0.1.23
Requires-Dist: langchain-community>=0.2.12
Requires-Dist: langchain-core>=0.2.38
Requires-Dist: langchain<0.3.0,>=0.2.14
Requires-Dist: langgraph>=0.2.14
Requires-Dist: pydantic>=2.8.2
Requires-Dist: rich>=13.7.1
Requires-Dist: tiktoken>=0.7.0
Requires-Dist: transformers[sentencepiece]>=4.44.2
Requires-Dist: types-pyyaml>=6.0.12.20240808
Provides-Extra: all
Requires-Dist: docx2txt>=0.8; extra == 'all'
Requires-Dist: faiss-cpu>=1.8.0.post1; extra == 'all'
Requires-Dist: megaparse; extra == 'all'
Requires-Dist: unstructured[doc,docx,epub,md,odt,ppt,pptx,xlsx]>=0.15.5; extra == 'all'
Description-Content-Type: text/markdown

# quivr-core package

The RAG of Quivr.com

## Contributors

### Requirements

0. Install [poetry](https://python-poetry.org/docs/). Recommand the `pipx` install
1. (Optional) Install (`uv`)[https://github.com/astral-sh/uv]
2. git clone `quivr`

```
git clone git@github.com:QuivrHQ/quivr.git
cd quivr/backend/core
```

2. Create virtual environement with your preferred tool

   ```
   uv venv
   ```

3. Install `base` quivr-core environment

   ```
   poetry install -E base --with dev,test
   ```

4. Install pre-commit

   ```
   pre-commit install
   ```

5. Run example
   ```
   python examples/simple_question.py
   ```

## Backend

0. Install [poetry](https://python-poetry.org/docs/). Recommand the `pipx` install
1. (Optional) Install (`uv`)[https://github.com/astral-sh/uv]
2. Clone `quivr`

```
cd quivr/backend/
```

2. Create virtual environement with your preferred tool

   ```
   uv venv
   ```

3. Install quivr-core monorepo

   ```
   poetry install
   ```

4. Copy `.env.example` to `.env` and modify env variables : step 2 : (https://docs.quivr.app/install#60-seconds-installation)

5. Run backend-api

```
LOG_LEVEL=debug uvicorn quivr_api.main:app --log-level debug --reload --host 0.0.0.0 --port 5050 --workers 1
```
