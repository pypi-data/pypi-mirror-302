[project]
name = "logwire"
dynamic = ["version"]
authors = [{name = "Scott Caratozzolo"}]
description = "Remote logging managment system."
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "httpx>=0.27.2",
    "python-worker>=2.2.4",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"


[tool.setuptools.dynamic]
version = {attr = "logwire.__version__"}

[tool.setuptools.packages.find]
include = ["logwire*"]

[tool.semantic_release]
assets = []
build_command = "python -m build"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
major_on_zero = true
allow_zero_version = true
tag_format = "v{version}"
version_variables = [
    "logwire/__init__.py:__version__",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.branches.develop]
match = "develop"
prerelease_token = "dev"
prerelease = true

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0



[tool.ruff]
target-version = "py39"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "I",
    "N",
    "A",
    "C4",
    "DTZ002", "DTZ003",
    "G010",
    "T20",
    "ERA",
    "PL",
]

ignore = [
    "E501",
]

[tool.uv]
dev-dependencies = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.33",
    "mkdocstrings[python]>=0.25.2",
    "mypy>=1.11.2",
    "pre-commit>=3.5.0",
    "pytest-cov>=5.0.0",
    "pytest>=8.3.2",
    "ruff>=0.6.3",
    "uv>=0.4.17",
]
