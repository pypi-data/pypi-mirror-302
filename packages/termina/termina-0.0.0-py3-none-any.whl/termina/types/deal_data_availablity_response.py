# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .product_info_response import ProductInfoResponse
from .unit_economics_info_response import UnitEconomicsInfoResponse


class DealDataAvailablityResponse(pydantic_v1.BaseModel):
    financials_exist: bool = pydantic_v1.Field()
    """
    Financials data has been processed for this deal
    """

    product_metrics: typing.List[ProductInfoResponse] = pydantic_v1.Field()
    """
    List of which product metrics are available for this deal
    """

    unit_economics_metrics: typing.List[UnitEconomicsInfoResponse] = pydantic_v1.Field()
    """
    List of which user types with unit economics metrics are available for this deal
    """

    benchmarks_user_types: typing.List[str] = pydantic_v1.Field()
    """
    List of user types with benchmarks available for this deal
    """

    benchmark_categories: typing.List[str] = pydantic_v1.Field()
    """
    List of categories applied to the company associated with this deal
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
