[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "tno.mpc.communication"
description = "MPC Communication module"
readme = "README.md"
authors = [{ name = "TNO PET Lab", email = "petlab@tno.nl" }]
maintainers = [{ name = "TNO PET Lab", email = "petlab@tno.nl" }]
keywords = [
    "TNO",
    "MPC",
    "multi-party computation",
    "communication",
]
license = { text = "Apache License, Version 2.0" }
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Typing :: Typed",
    "Topic :: Security :: Cryptography",
]
urls = { Homepage = "https://pet.tno.nl/", Documentation = "https://docs.pet.tno.nl/mpc/communication/4.11.2", Source = "https://github.com/TNO-Mpc/communication" }
dynamic = ["entry-points", "version"]
requires-python = ">=3.8"
dependencies = [
    "aiohttp>=3.6.1,<4.0",
    "mypy_extensions",
    "ormsgpack>=1.1.0",
    "packaging",
]

[project.optional-dependencies]
gmpy = [
    "tno.mpc.encryption_schemes.utils[gmpy]",
]
gmpy2 = [
    "tno.mpc.encryption_schemes.utils[gmpy]",
]
bitarray = [
    "bitarray",
]
numpy = [
    "numpy",
]
pandas = [
    "pandas",
    "pyarrow",
]
tls = [
    "pyOpenSSL",
]
torch = [
    "safetensors[torch]~=0.4",
]
tests = [
    "tno.mpc.communication[bitarray,gmpy,numpy,pandas,torch,tls]",
    "pandas-stubs",
    "pytest~=8.0",
    "pytest-asyncio<0.22",
    "pytest-timeout~=2.2",
    "typeguard",
]

[tool.setuptools]
platforms = ["any"]

[tool.setuptools.dynamic]
entry-points = {file = "entry_points.txt"}
version = {attr = "tno.mpc.communication.__version__"}

[tool.setuptools.package-data]
"*" = ["py.typed"]
"tno.mpc.communication" = ["test/tls_certs/*"]

[tool.coverage.run]
branch = true
omit = ["*/test/*"]

[tool.coverage.report]
precision = 2
show_missing = true

[tool.isort]
profile = "black"
known_tno = "tno"
known_first_party = "tno.mpc.communication"
sections = "FUTURE,STDLIB,THIRDPARTY,TNO,FIRSTPARTY,LOCALFOLDER"
no_lines_before = "LOCALFOLDER"

[tool.mypy]
mypy_path = "src,stubs"
strict = true
show_error_context = true
namespace_packages = true
explicit_package_bases = true

[tool.pytest.ini_options]
addopts = "--fixture-pool-scope module"
timeout = 10

[tool.tbump.version]
current = "4.11.2"
regex = '''
\d+\.\d+\.\d+(-(.*))?
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

    [[tool.tbump.file]]
    src = "pyproject.toml"
    search = "current = \"{current_version}\""

    [[tool.tbump.file]]
    src = "src/tno/mpc/communication/__init__.py"
    search = "__version__ = \"{current_version}\""

    [[tool.tbump.file]]
    src = "CITATION.cff"
    search = "version: {current_version}"

    [[tool.tbump.file]]
    src = "README.md"
    search = '\[here\]\(https:\/\/docs.pet.tno.nl/[^\.]*\/{current_version}'
