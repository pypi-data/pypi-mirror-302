[tool.poetry]
name = "jellyplex"
version = "0.1.0-a0"
description = "Miscellaneous tools for migrating from Plex to Jellyfin"
authors = ["Jan Willhaus <mail@janwillhaus.de>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "jellyplex" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Topic :: Utilities",
]
repository = "https://github.com/janw/jellyplex"

[tool.poetry.urls]
"Bug Reports" = "https://github.com/janw/jellyplex/issues"

[tool.poetry.scripts]
jellyplex = 'jellyplex.cli:main'


[tool.poetry.dependencies]
python = "^3.10"

requests = "^2.32.3"
plexapi = "^4.15.16"


feedparser = "^6.0.10"
pydantic = "^2.5.3"
platformdirs = ">=3.4,<5.0"
pyyaml = "^6.0"
rich-click = "^1.8.0"
python-slugify = "^8.0.1"
tqdm = "^4.66.4"
pydantic-settings = "^2.5.2"

[tool.poetry.group.dev.dependencies]
ipython = "*"
ipdb = "*"
ruff = "0.6.8"
pre-commit = "^4"
commitizen = "^3"
rich-codex = "^1"
mypy = "^1"

[tool.poetry.group.tests.dependencies]
pytest = "^8"
pytest-cov = "^5"
pytest-responses = "^0.5.1"
pytest-env = "1.1.5"

[tool.commitizen]
version_scheme = "semver"
version_provider = "poetry"
version_files = [
    "pyproject.toml:version = ",
    "jellyplex/__init__.py",
]
annotated_tag = true
tag_format = "v$version"
update_changelog_on_bump = true
gpg_sign = true

[tool.ruff]
line-length = 120
target-version = "py312"
[tool.ruff.lint]
extend-select = [
    "I",   # isort
    "B",   # bugbear
    "A",   # builtins
    "ISC", # implicit-str-concat
    "Q",   # quotes
    "TID", # tidy-imports
    "C4",  # comprehensions
    "SIM", # simplify
    "C90", # mccabe
    "FA",  # future-annotations
    "TCH", # type-checking
    "RUF", # ruff-specific
    "PTH", # use pathlib
    "ERA", # commented code
    "UP",  # upgrades
    "ANN", # type-annotations
    "FBT", # bool trap
    "S",   # bandit
    "PIE", # pie
]
ignore = [
    "SIM108", # if-else-block-instead-of-if-exp
    "ISC001", # single-line-implicit-string-concatenation
    "ANN101", # typed self
    "ANN102", # typed cls
    "ANN401", # any-type
]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.ruff.format]
quote-style = "double"


[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests",]
addopts = "--cov jellyplex --cov-config=pyproject.toml --cov-report term --no-cov-on-fail"

[tool.pytest_env]
TESTING = 1

[tool.coverage.run]
branch = true
source = [
    "jellyplex",
]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
]
fail_under = 60
precision = 2
show_missing = true

[tool.mypy]
disallow_untyped_defs = true
disallow_any_generics = true
# disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
# warn_return_any = true
strict_optional = true
strict_equality = true
check_untyped_defs = true
no_implicit_reexport = true

packages = ["jellyplex"]
plugins = [
    "pydantic.mypy",
]

[[tool.mypy.overrides]]
module = [
    "plexapi.*",
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
