# coding: utf-8

"""
    Command Center operations

    Command Center operations  # noqa: E501

    OpenAPI spec version: 23.09-sp2
    Contact: support@zadarastorage.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from CommandCenter.configuration import Configuration


class InlineResponse200101CompatibleVirtualNetworks(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'vlan': 'int',
        'netmask': 'str',
        'cidr': 'str',
        'gateway': 'str',
        'id': 'int',
        'internal_id': 'int'
    }

    attribute_map = {
        'name': 'name',
        'vlan': 'vlan',
        'netmask': 'netmask',
        'cidr': 'cidr',
        'gateway': 'gateway',
        'id': 'id',
        'internal_id': 'internal_id'
    }

    def __init__(self, name=None, vlan=None, netmask=None, cidr=None, gateway=None, id=None, internal_id=None, _configuration=None):  # noqa: E501
        """InlineResponse200101CompatibleVirtualNetworks - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._name = None
        self._vlan = None
        self._netmask = None
        self._cidr = None
        self._gateway = None
        self._id = None
        self._internal_id = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if vlan is not None:
            self.vlan = vlan
        if netmask is not None:
            self.netmask = netmask
        if cidr is not None:
            self.cidr = cidr
        if gateway is not None:
            self.gateway = gateway
        if id is not None:
            self.id = id
        if internal_id is not None:
            self.internal_id = internal_id

    @property
    def name(self):
        """Gets the name of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501


        :return: The name of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse200101CompatibleVirtualNetworks.


        :param name: The name of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def vlan(self):
        """Gets the vlan of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501


        :return: The vlan of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :rtype: int
        """
        return self._vlan

    @vlan.setter
    def vlan(self, vlan):
        """Sets the vlan of this InlineResponse200101CompatibleVirtualNetworks.


        :param vlan: The vlan of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :type: int
        """

        self._vlan = vlan

    @property
    def netmask(self):
        """Gets the netmask of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501


        :return: The netmask of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :rtype: str
        """
        return self._netmask

    @netmask.setter
    def netmask(self, netmask):
        """Sets the netmask of this InlineResponse200101CompatibleVirtualNetworks.


        :param netmask: The netmask of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :type: str
        """

        self._netmask = netmask

    @property
    def cidr(self):
        """Gets the cidr of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501


        :return: The cidr of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :rtype: str
        """
        return self._cidr

    @cidr.setter
    def cidr(self, cidr):
        """Sets the cidr of this InlineResponse200101CompatibleVirtualNetworks.


        :param cidr: The cidr of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :type: str
        """

        self._cidr = cidr

    @property
    def gateway(self):
        """Gets the gateway of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501


        :return: The gateway of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :rtype: str
        """
        return self._gateway

    @gateway.setter
    def gateway(self, gateway):
        """Sets the gateway of this InlineResponse200101CompatibleVirtualNetworks.


        :param gateway: The gateway of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :type: str
        """

        self._gateway = gateway

    @property
    def id(self):
        """Gets the id of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501


        :return: The id of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse200101CompatibleVirtualNetworks.


        :param id: The id of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def internal_id(self):
        """Gets the internal_id of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501


        :return: The internal_id of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :rtype: int
        """
        return self._internal_id

    @internal_id.setter
    def internal_id(self, internal_id):
        """Sets the internal_id of this InlineResponse200101CompatibleVirtualNetworks.


        :param internal_id: The internal_id of this InlineResponse200101CompatibleVirtualNetworks.  # noqa: E501
        :type: int
        """

        self._internal_id = internal_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse200101CompatibleVirtualNetworks, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse200101CompatibleVirtualNetworks):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse200101CompatibleVirtualNetworks):
            return True

        return self.to_dict() != other.to_dict()
