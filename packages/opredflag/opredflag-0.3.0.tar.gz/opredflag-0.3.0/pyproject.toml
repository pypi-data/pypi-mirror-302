[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "opredflag"
description = "A script which automatically updates OPRF standard asset files from the OpRedFlag repository"
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.10"
#license = {file = "LICENSE"}
authors = [
  {name = "BobDotCom"},
]
#keywords = []
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]
dynamic = ["version", "dependencies", "optional-dependencies"]

[project.urls]
Homepage = "https://github.com/BobDotCom/py-opredflag"
Repository = "https://github.com/BobDotCom/py-opredflag"
Documentation = "https://opredflag.readthedocs.io"
Changelog = "https://github.com/BobDotCom/py-opredflag/blob/main/CHANGELOG.md"
Tracker = "https://github.com/BobDotCom/py-opredflag/issues"


[project.scripts]
oprf = "opredflag.cli:cli"
opredflag = "opredflag.cli:cli"

[tool.setuptools.packages.find]
include = ["opredflag*"]

[tool.setuptools.dynamic]
dependencies = {file = "requirements/_.txt"}

[tool.setuptools.dynamic.optional-dependencies]
docs = {file = "requirements/docs.txt"}
speedups = {file = "requirements/speedups.txt"}

[tool.setuptools_scm]

[tool.black]
target-version = ['py310']

[tool.isort]
profile = "black"

[tool.mypy]
#namespace_packages = true
install_types = true
strict = true
show_error_codes = true
exclude = [
    "venv",
]

[tool.pylint.main]
ignore = [
    "docs/conf"
]
#extension-pkg-whitelist = [
#    "pydantic",
#    "ujson"
#]
py-version = "3.10"

[tool.pylint.messages_control]
enable = [
    "bad-indentation",
    "line-too-long"
]
disable = [
#    "missing-module-docstring",
#    "protected-access",
    "fixme"
]

[tool.pylint.format]
indent-string = '    '
max-line-length = 120

[tool.codespell]
skip = "venv,.git"

#[tool.pytest.ini_options]
#asyncio_mode = "auto"
