[project]
name = "vault-autopilot"
description = "Effortlessly manage your secrets and other Vault resources with the power of automation."
readme = "README.md"
requires-python = ">=3.11"
authors = [
  { name = "hqdncw", email = "hqdncw@gmail.com" },
]
keywords = [
  "hashicorp vault",
]
# https://pypi.org/classifiers/
classifiers = [
  "License :: OSI Approved :: MIT License",
  # https://martin-thoma.com/software-development-stages/
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Console",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
dependencies = [
  "pydantic~=2.7.1",
  "pydantic-settings~=2.3.3",
  "aiohttp~=3.9.5",
  "lazy-object-proxy~=1.9.0",
  "networkx~=3.3.0",
  "ironfence~=0.1.0",
  "humanize~=4.9.0",
  "deepdiff[optimize]~=7.0.1",
  "pyhumps~=3.8.0",
  "cryptography~=42.0.8",
  # TODO: temporary dependencies (derived from _pkg.asyva)
  "python-hcl2~=4.3.4",
  "jinja2~=3.1.3",
]
version = "0.1.2"

[project.urls]
Repository = "https://github.com/hqdncw/vault-autopilot"

[project.optional-dependencies]
cli = [
  "click~=8.1.7",
  "ruamel.yaml~=0.18.5",
  "rich~=13.7.1"
]
# colorlog = [
#   "colorlog~=6.8.0"
# ]
dev = [
  "basedpyright~=1.12.1",
  "ruff~=0.4.4",
  "mypy~=1.10.0",
  "pre-commit~=3.7.0"
]
docs = [
  "sphinx~=7.3.7",
  "sphinx-sitemap~=2.6.0",
  "sphinx-prompt~=1.8.0",
  "furo~=2024.5.6",
  "sphinx-autobuild~=2024.4.16",
  "sphinx-inline-tabs~=2023.4.21",
  "sphinx-copybutton~=0.5.2",
  "sphinx-togglebutton~=0.3.2",
  # "sphinx-autoapi~=3.0.0"
  "sphinx-click~=6.0.0"
]

[project.scripts]
vault-autopilot = "vault_autopilot.__main__:cli"

[tool.black]
line-length = 88
target-version = ["py311"]
exclude = '''
(
    \.git
  | dist
  | venv
  | docs
)
'''

[tool.ruff]
line-length = 88
target-version = "py311"
lint.extend-select = ["I", "E"]
lint.fixable = ["ALL"]

[tool.mypy]
python_version = "3.11"
show_error_codes = true
show_error_context = true
pretty = true
ignore_missing_imports = false
warn_unused_configs = true
disallow_subclassing_any = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
follow_imports_for_stubs = true
namespace_packages = true
show_absolute_path = true
plugins = [
  "pydantic.mypy"
]

[[tool.mypy.overrides]]
module = [
  "lazy_object_proxy",
  "networkx",
  "ruamel",
  "deepdiff"
]
ignore_missing_imports = true

[tool.pyright]
typeCheckingMode = "basic"
# https://github.com/DetachHead/basedpyright-pre-commit-mirror/blob/main/README.md#usage
venvPath = "."
venv = ".venv"

[tool.semantic_release]
build_command = """
  python -m pip install --upgrade build
  python -m build .
"""
version_variables = ["./src/vault_autopilot/__init__.py:__version__", "./docs/conf.py:release"]
version_toml = ["pyproject.toml:project.version"]
commit_message = "bump: {version}\n\nAutomatically generated by python-semantic-release"
major_on_zero = false

[tool.semantic_release.commit_parser_options]
allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "feat",
  "fix",
  "perf",
  "style",
  "refactor",
  "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
