import{_ as S,h as a,B as w,I as j,r as q,bl as R,t as y,J as O,$ as N,dc as U,dd as W,Q as u,de as E,df as A,dg as G,af as _,a0 as Q,dh as z,di as J,dj as M,dk as Z,j as c,w as o,V as v,L as H,A as V,k as s,p as m,n as h,Z as X,G as L,m as g,X as F,D as Y,bj as x,E as K,F as $,dl as ee,C as I,H as D,ag as te}from"./index-CQRaJAEP.js";import{V as le,b as se}from"./ViewToolbar-WPND5IcH.js";import{g as oe}from"./graphql-i5tnMPnl.js";import{u as ie,i as ae,a as b}from"./initialOptions-Bp4vgjqV.js";import{d as re}from"./debounce-CeTx0L4J.js";import{V as ne}from"./VAlert-C0IYDrs_.js";const de={name:"LogComponent",props:{placeholder:{type:String,required:!1},timestamps:{type:Boolean,required:!1,default:!0},logs:{type:Array,required:!0},wordWrap:{type:Boolean,required:!1,default:!1}},data(){return{match:""}},computed:{computedLogs(){return this.logs.length>0?this.timestamps?this.logs:this.updateLogs():this.placeholder?[this.placeholder]:[]}},methods:{updateLogs(){return this.logs.map(t=>this.stripTimestamp(t))},stripTimestamp(t){const e=/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:Z|[+-][\d:]+)?\s(.*\s*)/;return this.match=t.match(e),this.match?this.match[1]:t}}};function ue(t,e,i,l,d,n){return a(),w("pre",null,[(a(!0),w(j,null,q(n.computedLogs,(f,p)=>(a(),w("span",{key:p,class:R(i.wordWrap?"text-pre-wrap":"text-pre")},y(f),3))),128))])}const ce=S(de,[["render",ue]]),fe=O`
subscription LogData ($id: ID!, $file: String!) {
  logs (id: $id, file: $file) {
    lines
    connected
    path
    error
  }
}
`,pe=O`
query LogFiles($id: ID!) {
  logFiles(id: $id) {
    files
  }
}
`,he=[/^job\.out$/,/^job$/,/^scheduler\/*/],me=t=>{if(t.length){for(const e of he)for(const i of t)if(e.exec(i))return i}return null};class C{constructor(){this.lines=[],this.path=null,this.connected=null,this.error=null}}class ge extends H{constructor(e){super(),this.results=e}onAdded(e,i,l){this.results.connected===!1&&(this.results.lines=[]),e.lines&&this.results.lines.push(...e.lines),e.connected!=null&&(this.results.connected=e.connected),e.error!=null&&(this.results.error=e.error),e.path!=null&&(this.results.path=e.path)}}const be={name:"Log",mixins:[oe,N],components:{LogComponent:ce,ViewToolbar:le},emits:[ie],props:{initialOptions:ae},setup(t,{emit:e}){const i=U(),l=b("relativeID",{props:t,emit:e}),d=W(l),n=b("file",{props:t,emit:e}),f=b("timestamps",{props:t,emit:e},!0),p=b("wordWrap",{props:t,emit:e},!1),r=u(new C);function P(){r.value=new C}E(()=>i.state.offline,()=>{r.value.connected=!1});const T=re(B=>{l.value=B},500),k="40";return{query:u(null),logFiles:u([]),results:r,relativeID:l,previousRelativeID:d,file:n,fileLabel:u("Select File"),fileDisabled:u(!1),jobLog:u(l.value==null?0:1),timestamps:f,wordWrap:p,reset:P,debouncedUpdateRelativeID:T,toolbarBtnSize:k,toolbarBtnProps:se(k)}},data(){return{controlGroups:[{title:"Log",controls:[{title:"Timestamps",icon:A,action:"toggle",value:this.timestamps,key:"timestamps"},{title:"Word wrap",icon:G,action:"toggle",value:this.wordWrap,key:"wordWrap"}]}]}},mounted(){this.$watch(()=>({id:this.id??void 0,file:this.file??void 0}),async({id:t},e)=>{this.updateQuery(),t!==(e==null?void 0:e.id)&&await this.updateLogFileList()},{immediate:!0})},computed:{workflowTokens(){return new _(this.workflowId)},id(){if(this.jobLog)try{const t=new _(this.relativeID,!0);return t!=null&&t.task?this.workflowTokens.clone({cycle:t.cycle,task:t.task,job:t.job}).id:null}catch{return null}return this.workflowId}},methods:{setOption(t,e){this[t]=e},updateQuery(){if(this.reset(),!this.file||!this.id){this.query=null;return}this.query=new Q(fe,{id:this.id,file:this.file},`log-query-${this._uid}`,[new ge(this.results)],!1,!1)},async updateLogFileList(t=!0){var l;if(!this.id){this.handleNoLogFiles();return}this.fileLabel="Updating available files...",this.fileDisabled=!0;let e;try{e=await this.$workflowService.apolloClient.query({query:pe,variables:{id:this.id}})}catch(d){console.warn(d),this.handleNoLogFiles();return}if(!this.id)return;const i=((l=e.data.logFiles)==null?void 0:l.files)??[];t&&(this.file&&!i.includes(this.file)&&(this.file=null),this.file||(this.file=me(i))),i.length?(this.fileLabel="Select File",this.fileDisabled=!1,this.logFiles=i):this.handleNoLogFiles()},handleNoLogFiles(){this.fileLabel=this.id?`No log files for ${this.id}`:"Enter a task/job ID",this.fileDisabled=!0,this.logFiles=[]}},watch:{jobLog(t,e){this.file=null,this.relativeID=t?this.previousRelativeID:null}},icons:{mdiFileAlertOutline:z,mdiFolderRefresh:J,mdiPowerPlug:M,mdiPowerPlugOff:Z}},we={"data-cy":"log-path",style:{"padding-left":"0.5em",color:"rgb(150,150,150)"}},ye={class:"text-pre-wrap text-break"};function Le(t,e,i,l,d,n){const f=V("ViewToolbar"),p=V("log-component");return a(),c(v,{class:"c-log h-100 pa-0 d-flex flex-column",fluid:""},{default:o(()=>[s(v,{fluid:""},{default:o(()=>[s(m,{dense:"",class:"flex-0-0"},{default:o(()=>[s(h,{class:"pt-0"},{default:o(()=>[s(X,{modelValue:l.jobLog,"onUpdate:modelValue":e[0]||(e[0]=r=>l.jobLog=r),divided:"",mandatory:"",variant:"outlined",color:"primary",density:"comfortable"},{default:o(()=>[s(L,{"data-cy":"workflow-toggle"},{default:o(()=>[g("Workflow")]),_:1}),s(L,{"data-cy":"job-toggle"},{default:o(()=>[g("Job")]),_:1})]),_:1},8,["modelValue"]),s(f,{groups:d.controlGroups,onSetOption:n.setOption,size:l.toolbarBtnSize},null,8,["groups","onSetOption","size"])]),_:1})]),_:1}),s(m,{dense:"",class:"flex-0-0"},{default:o(()=>[s(h,{cols:"8"},{default:o(()=>[l.jobLog?(a(),c(F,{key:0,"data-cy":"job-id-input",class:"flex-grow-1 flex-column","model-value":l.relativeID,"onUpdate:modelValue":l.debouncedUpdateRelativeID,placeholder:"cycle/task/job",clearable:""},null,8,["model-value","onUpdate:modelValue"])):(a(),c(F,{key:1,"data-cy":"workflow-id-input",modelValue:t.workflowId,"onUpdate:modelValue":e[1]||(e[1]=r=>t.workflowId=r),disabled:""},null,8,["modelValue"]))]),_:1}),s(h,{cols:"4",class:"d-flex col-gap-2"},{default:o(()=>[s(Y,{"data-cy":"file-input",label:l.fileLabel,disabled:l.fileDisabled,items:l.logFiles,modelValue:l.file,"onUpdate:modelValue":e[2]||(e[2]=r=>l.file=r),clearable:"","menu-props":{"data-cy":"file-input-menu"}},null,8,["label","disabled","items","modelValue"]),s(L,x({onClick:e[3]||(e[3]=()=>this.updateLogFileList(!1))},l.toolbarBtnProps,{"data-cy":"refresh-files"}),{default:o(()=>[s(K,{icon:t.$options.icons.mdiFolderRefresh},null,8,["icon"]),s($,null,{default:o(()=>[g("Refresh file list")]),_:1})]),_:1},16)]),_:1})]),_:1}),s(m,{dense:"",class:"flex-0-0"},{default:o(()=>[l.results.path?(a(),c(h,{key:0,class:"d-flex align-center overflow-x-auto text-pre"},{default:o(()=>[s(ee,x({"data-cy":"connected-icon",variant:"outlined",class:"flex-shrink-0"},l.results.connected?{color:"success",prependIcon:t.$options.icons.mdiPowerPlug}:{color:"error",prependIcon:t.$options.icons.mdiPowerPlugOff,onClick:n.updateQuery}),{default:o(()=>[g(y(l.results.connected?"Connected":"Reconnect"),1)]),_:1},16),I("span",we,y(l.results.path),1)]),_:1})):D("",!0)]),_:1})]),_:1}),s(m,{"no-gutters":"",class:"overflow-auto px-4 pb-2"},{default:o(()=>[s(h,null,{default:o(()=>[n.id&&l.file&&l.results.connected==null?(a(),c(te,{key:0,type:"text@5",class:"mx-n4 align-content-start"})):(a(),w(j,{key:1},[l.results.error?(a(),c(ne,{key:0,type:"error",variant:"tonal",density:"comfortable",class:"mb-4",icon:t.$options.icons.mdiFileAlertOutline},{default:o(()=>[I("span",ye,y(l.results.error),1)]),_:1},8,["icon"])):D("",!0),s(p,{"data-cy":"log-viewer",logs:l.results.lines,timestamps:l.timestamps,"word-wrap":l.wordWrap},null,8,["logs","timestamps","word-wrap"])],64))]),_:1})]),_:1})]),_:1})}const Ie=S(be,[["render",Le]]);export{Ie as default,me as getDefaultFile};
