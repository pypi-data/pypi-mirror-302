# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: senren/feature_store/v1/types.proto
# Protobuf Python Version: 5.27.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC, 5, 27, 2, "", "senren/feature_store/v1/types.proto"
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n#senren/feature_store/v1/types.proto\x12\x17senren.feature_store.v1"\x1d\n\x0bListStrings\x12\x0e\n\x06values\x18\x01 \x03(\t"\x1c\n\nListInt32s\x12\x0e\n\x06values\x18\x01 \x03(\x05"\x1c\n\nListInt64s\x12\x0e\n\x06values\x18\x01 \x03(\x03"\xbc\x01\n\x0c\x45ntityValues\x12\x37\n\x07strings\x18\x01 \x01(\x0b\x32$.senren.feature_store.v1.ListStringsH\x00\x12\x35\n\x06ints32\x18\x02 \x01(\x0b\x32#.senren.feature_store.v1.ListInt32sH\x00\x12\x35\n\x06ints64\x18\x03 \x01(\x0b\x32#.senren.feature_store.v1.ListInt64sH\x00\x42\x05\n\x03valb\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "senren.feature_store.v1.types_pb2", _globals)
if not _descriptor._USE_C_DESCRIPTORS:
    DESCRIPTOR._loaded_options = None
    _globals["_LISTSTRINGS"]._serialized_start = 64
    _globals["_LISTSTRINGS"]._serialized_end = 93
    _globals["_LISTINT32S"]._serialized_start = 95
    _globals["_LISTINT32S"]._serialized_end = 123
    _globals["_LISTINT64S"]._serialized_start = 125
    _globals["_LISTINT64S"]._serialized_end = 153
    _globals["_ENTITYVALUES"]._serialized_start = 156
    _globals["_ENTITYVALUES"]._serialized_end = 344
# @@protoc_insertion_point(module_scope)
