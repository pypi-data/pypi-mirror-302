Metadata-Version: 2.1
Name: nillion-aivm
Version: 0.1.1
Summary: AIVM: secure infrastructure for running MLaaS.
Author: JosÃ© Cabrero-Holgueras
Author-email: jose.cabrero@nillion.com
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Provides-Extra: examples
Requires-Dist: datasets (>=3.0.1,<4.0.0) ; extra == "examples"
Requires-Dist: future (>=1.0.0,<2.0.0)
Requires-Dist: googleapis-common-protos (>=1.65.0,<2.0.0)
Requires-Dist: grpcio (>=1.66.1,<2.0.0)
Requires-Dist: grpcio-tools (>=1.66.1,<2.0.0)
Requires-Dist: matplotlib (>=3.9.2,<4.0.0) ; extra == "examples"
Requires-Dist: numpy (>=1.26.4,<2.0.0)
Requires-Dist: omegaconf (>=2.0.6)
Requires-Dist: onnx (>=1.17.0,<2.0.0)
Requires-Dist: onnxruntime (>=1.19.2,<2.0.0) ; extra == "examples"
Requires-Dist: pandas (>=1.2.2)
Requires-Dist: pywavelets (>=1.7.0)
Requires-Dist: pyyaml (>=6.0.2,<7.0.0)
Requires-Dist: scikit-learn (>=1.5.1,<2.0.0)
Requires-Dist: scipy (>=1.6.0)
Requires-Dist: tensorboard (>=2.17.1,<3.0.0)
Requires-Dist: torch (>=2.4.1,<3.0.0)
Requires-Dist: torchvision (>=0.19.1,<0.20.0)
Requires-Dist: transformers (>=4.45.2,<5.0.0)
Requires-Dist: visdom (>=0.2.4,<0.3.0)
Description-Content-Type: text/markdown

# Nillion AIVM

AIVM is a framework designed for private inference using cryptographic protocols. This project allows you to run a development network (devnet) and perform private inference tasks using examples provided in the repository.

## Table of Contents

- [Installing AIVM](#installing-aivm)
  - [Recommended Installation](#base-installation)
  - [Using Poetry](#using-poetry)
  - [Using venv](#using-venv)
- [Running AIVM](#running-aivm)
- [Usage](#usage)
- [Contributing](#contributing)
- [License](#license)

## Installing AIVM

### Recommended Instalation
1. Install on your existing OS python installation. Requires Python >=3.12:

   ```shell
   git clone https://github.com/NillionNetwork/aivm.git
   cd aivm
   ```

3. Install dependencies:

   ```shell
   pip install .
   ```
If you are going to run the examples, do:

   ```shell
   pip install ".[examples]"
   ```
### Using Poetry

1. Install Poetry (if not already installed):

   ```bash
   pip install poetry
   ```

2. Clone the repository:

   ```bash
   git clone https://github.com/NillionNetwork/aivm.git
   cd aivm
   ```

3. Install dependencies:

   ```bash
   poetry install
   ```

4. Activate the virtual environment:

   ```bash
   poetry shell
   ```

5. Install AIVM:

   ```bash
   poetry install
   ```

### Using venv

1. Clone the repository:

   ```bash
   git clone https://github.com/NillionNetwork/aivm.git
   cd aivm
   ```

2. Create a virtual environment:

   ```bash
   python3 -m venv .venv
   ```

3. Activate the virtual environment:

   On Linux/macOS:

   ```bash
   source .venv/bin/activate
   ```

   On Windows:

   ```bash
   .\venv\Scripts\activate
   ```

4. Install the package:

   ```bash
   pip install .
   ```

## Running AIVM

1. Start the AIVM devnet:

   ```bash
   aivm-devnet
   ```

2. Open the provided Jupyter notebook `examples/getting-started.ipynb` to run private inference examples on AIVM.

3. After completing your tasks, terminate the devnet process by pressing `CTRL+C`.

## Usage

For additional usage, refer to the examples provided in the `examples` folder, which demonstrates how to set up private inference workflows using AIVM.
