# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _NornirPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkIRRefineGridPython
else:
    import _itkIRRefineGridPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkIRRefineGridID2ID2_New():
    return itkIRRefineGridID2ID2.New()

class itkIRRefineGridID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkIRRefineGridID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridID2ID2_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridID2ID2_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridID2ID2_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridID2ID2

        Create a new object of the class itkIRRefineGridID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridID2ID2 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridID2ID2_swigregister(itkIRRefineGridID2ID2)

def itkIRRefineGridID3ID3_New():
    return itkIRRefineGridID3ID3.New()

class itkIRRefineGridID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkIRRefineGridID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridID3ID3_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridID3ID3_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridID3ID3_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridID3ID3

        Create a new object of the class itkIRRefineGridID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridID3ID3 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridID3ID3_swigregister(itkIRRefineGridID3ID3)

def itkIRRefineGridID4ID4_New():
    return itkIRRefineGridID4ID4.New()

class itkIRRefineGridID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkIRRefineGridID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridID4ID4_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridID4ID4_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridID4ID4_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridID4ID4

        Create a new object of the class itkIRRefineGridID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridID4ID4 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridID4ID4_swigregister(itkIRRefineGridID4ID4)

def itkIRRefineGridIF2IF2_New():
    return itkIRRefineGridIF2IF2.New()

class itkIRRefineGridIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkIRRefineGridIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridIF2IF2_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridIF2IF2_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIF2IF2_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridIF2IF2

        Create a new object of the class itkIRRefineGridIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridIF2IF2 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridIF2IF2_swigregister(itkIRRefineGridIF2IF2)

def itkIRRefineGridIF3IF3_New():
    return itkIRRefineGridIF3IF3.New()

class itkIRRefineGridIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkIRRefineGridIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridIF3IF3_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridIF3IF3_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIF3IF3_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridIF3IF3

        Create a new object of the class itkIRRefineGridIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridIF3IF3 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridIF3IF3_swigregister(itkIRRefineGridIF3IF3)

def itkIRRefineGridIF4IF4_New():
    return itkIRRefineGridIF4IF4.New()

class itkIRRefineGridIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkIRRefineGridIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridIF4IF4_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridIF4IF4_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIF4IF4_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridIF4IF4

        Create a new object of the class itkIRRefineGridIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridIF4IF4 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridIF4IF4_swigregister(itkIRRefineGridIF4IF4)

def itkIRRefineGridISS2ISS2_New():
    return itkIRRefineGridISS2ISS2.New()

class itkIRRefineGridISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkIRRefineGridISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridISS2ISS2_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridISS2ISS2_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridISS2ISS2_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridISS2ISS2

        Create a new object of the class itkIRRefineGridISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridISS2ISS2 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridISS2ISS2_swigregister(itkIRRefineGridISS2ISS2)

def itkIRRefineGridISS3ISS3_New():
    return itkIRRefineGridISS3ISS3.New()

class itkIRRefineGridISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkIRRefineGridISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridISS3ISS3_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridISS3ISS3_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridISS3ISS3_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridISS3ISS3

        Create a new object of the class itkIRRefineGridISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridISS3ISS3 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridISS3ISS3_swigregister(itkIRRefineGridISS3ISS3)

def itkIRRefineGridISS4ISS4_New():
    return itkIRRefineGridISS4ISS4.New()

class itkIRRefineGridISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkIRRefineGridISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridISS4ISS4_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridISS4ISS4_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridISS4ISS4_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridISS4ISS4

        Create a new object of the class itkIRRefineGridISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridISS4ISS4 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridISS4ISS4_swigregister(itkIRRefineGridISS4ISS4)

def itkIRRefineGridIUC2IUC2_New():
    return itkIRRefineGridIUC2IUC2.New()

class itkIRRefineGridIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkIRRefineGridIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridIUC2IUC2_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridIUC2IUC2_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUC2IUC2_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridIUC2IUC2

        Create a new object of the class itkIRRefineGridIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridIUC2IUC2 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridIUC2IUC2_swigregister(itkIRRefineGridIUC2IUC2)

def itkIRRefineGridIUC3IUC3_New():
    return itkIRRefineGridIUC3IUC3.New()

class itkIRRefineGridIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkIRRefineGridIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridIUC3IUC3_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridIUC3IUC3_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUC3IUC3_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridIUC3IUC3

        Create a new object of the class itkIRRefineGridIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridIUC3IUC3 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridIUC3IUC3_swigregister(itkIRRefineGridIUC3IUC3)

def itkIRRefineGridIUC4IUC4_New():
    return itkIRRefineGridIUC4IUC4.New()

class itkIRRefineGridIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkIRRefineGridIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridIUC4IUC4_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridIUC4IUC4_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUC4IUC4_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridIUC4IUC4

        Create a new object of the class itkIRRefineGridIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridIUC4IUC4 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridIUC4IUC4_swigregister(itkIRRefineGridIUC4IUC4)

def itkIRRefineGridIUS2IUS2_New():
    return itkIRRefineGridIUS2IUS2.New()

class itkIRRefineGridIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkIRRefineGridIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridIUS2IUS2_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridIUS2IUS2_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUS2IUS2_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridIUS2IUS2

        Create a new object of the class itkIRRefineGridIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridIUS2IUS2 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridIUS2IUS2_swigregister(itkIRRefineGridIUS2IUS2)

def itkIRRefineGridIUS3IUS3_New():
    return itkIRRefineGridIUS3IUS3.New()

class itkIRRefineGridIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkIRRefineGridIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridIUS3IUS3_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridIUS3IUS3_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUS3IUS3_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridIUS3IUS3

        Create a new object of the class itkIRRefineGridIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridIUS3IUS3 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridIUS3IUS3_swigregister(itkIRRefineGridIUS3IUS3)

def itkIRRefineGridIUS4IUS4_New():
    return itkIRRefineGridIUS4IUS4.New()

class itkIRRefineGridIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkIRRefineGridIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIRRefineGridIUS4IUS4_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIRRefineGridIUS4IUS4_Pointer"""
        return _itkIRRefineGridPython.itkIRRefineGridIUS4IUS4_Clone(self)
    __swig_destroy__ = _itkIRRefineGridPython.delete_itkIRRefineGridIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIRRefineGridIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIRRefineGridPython.itkIRRefineGridIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIRRefineGridIUS4IUS4

        Create a new object of the class itkIRRefineGridIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIRRefineGridIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIRRefineGridIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIRRefineGridIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIRRefineGridIUS4IUS4 in _itkIRRefineGridPython:
_itkIRRefineGridPython.itkIRRefineGridIUS4IUS4_swigregister(itkIRRefineGridIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def ir_refine_grid(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for IRRefineGrid"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.IRRefineGrid.New(*args, **kwargs)

    return instance.__internal_call__()

def ir_refine_grid_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Nornir.IRRefineGrid
    ir_refine_grid.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    ir_refine_grid.__doc__ = filter_object.__doc__



