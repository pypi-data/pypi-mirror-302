Metadata-Version: 2.1
Name: mega_pack_pbf_parser
Version: 0.1.6
Summary: Collects song information from BB Projects
Home-page: https://github.com/rjcannizzo/mega-pack-pbf-parser
Author: John Nastala
Description-Content-Type: text/plain
License-File: LICENSE

# mega-pack-pbf-parser
Parse the content (songs and PBFs) of a BB project w/Mega Pack and add that data to the project database. 
- To write the required html file install this package: bb-pbf-html-writer
- pip install bb-pbf-html-writer


## Warnings
- Verify that the "packs_pbf_type" table is up-to-date. Be certain that ALL products are included in this table (i.e. check for new product releases)
- BEFORE ANYTHING ELSE, verify that you have updated the constant PROJECT_DB_PATH (full path to the project db) in constants.py

## Constants
The project uses several constants defined in tools.constants
- PROJECT_DB_PATH  - path to the project's database
- BONUS_PBF_FILES - PBFs we don't want to include because they are essentialy duplicates
- OPP_PBF_FILES - PBFs with one press play songs

## Database Tables
- packs_pbf_type: contains a listing of all PBF names, the associated productand the type (OPP, sections)
- songs: lists all songs, the associated PBF and product name and the type (OPP, sections)

## Usage

```python
from typing import List
from mega_pack_pbf_parser import Project_Parser
from mega_pack_pbf_parser import create_db, insert
from mega_pack_pbf_parser import insert_songs_query
from mega_pack_pbf_parser import initialize_database
from mega_pack_pbf_parser import get_report_data, write_json

project_database = r"D:\Python\scripts\rc\mega_pack_pbf_parser\db\pbf.db"

def insert_song_data(data: List):
    """
    Inserts song data into the project database. Prints the number of rows inserted.    
    """
    query = insert_songs_query
    db_path = project_database
    row_count = insert(db_path=db_path, query=query, data=data)
    print(f"Inserted {row_count} rows into the database.")


def main():    
    bb_project_folder = r"C:\Users\RC\Documents\BBWorkspace\GM_Mega_Pack_Project"
    db_path = project_database
    initialize_database(db_path=db_path)
    parser = Project_Parser(project_folder=bb_project_folder) 
    song_list = parser.run()
     # insert data into the database but note that the database is initialized with data up to October 2024
    insert_song_data(song_list)
    # write report data as json for later use in html files
    output_file_path = r"some/path/to/data/bb_pbf_report_data.py"
    result = get_report_data()
    write_json(filepath=output_file_path, data=result)


if __name__ == '__main__':
    main()
```

