import pathlib

import meshio


def mesh_conversion_3D_to_2D(
    input_mesh_file: str,
    output_mesh_file: str,
):
    """
    Function which converts a 2D mesh generated by gmsh into a pure 2D mesh object for freefem++ to parse.
    Issue is that a 2D mesh has 3D coordinates (the z coordinate being 0). FreeFem++ can only read this as a 3D mesh.

    Note: the .mesh file structure is not regular.

    Fix:
        1. change the dimension line in the file to 2
        2. For every vertex coodinate, drop the 3rd coordinate.

    """

    file_input = open(input_mesh_file, "r")
    file_output = open(output_mesh_file, "w")

    lines = file_input.readlines()

    dimension_flag = 0
    vertices_flag = 0

    for line in lines:
        if "Dimension" in line:
            dimension_flag = 1
        if "Vertices" in line:
            dimension_flag = 0
            vertices_flag = 1
        if "Edges" in line:
            vertices_flag = 0
        if "Triangles" in line:
            vertices_flag = 0

        if dimension_flag and "Dimension" not in line:
            file_output.writelines("2\n")

        elif vertices_flag and "Vertices" not in line:
            list = [val for val in line.split(" ") if val != ""]
            listnew = list[:2] + list[3:]  # Drop third coordinate
            new_line = " ".join(f for f in listnew)
            file_output.writelines(new_line)
        else:
            file_output.writelines(line)


def output_vtk_mesh(filepath: str = "mesh_output.mesh"):
    filepath_vtk = pathlib.Path(filepath).with_suffix(".vtk")

    mesh_gmsh = meshio.read(
        filepath,
    )
    mesh_gmsh.write(
        filepath_vtk,
    )
    return filepath_vtk
